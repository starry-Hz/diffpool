2024-10-05 15:44:54,872 - root - INFO - Remove existing log dir: log/syn1v2_base_l3_h20_o20
2024-10-05 15:44:54,874 - root - INFO - CUDA: 1
2024-10-05 15:44:55,870 - root - INFO - Num training graphs: 800; Num validation graphs: 100; Num testing graphs: 100
2024-10-05 15:44:55,871 - root - INFO - Number of graphs: 1000
2024-10-05 15:44:55,921 - root - INFO - Number of edges: 177329
2024-10-05 15:44:55,923 - root - INFO - Max, avg, std of graph size: 59, 49.43, 4.95
2024-10-05 15:44:56,371 - root - INFO - Method: base
2024-10-05 15:44:57,309 - root - INFO - Epoch: 0
2024-10-05 15:44:58,675 - root - INFO - Avg loss: tensor(0.6939, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 1.1244192123413086
2024-10-05 15:44:58,817 - root - INFO - Train accuracy: 0.5916666666666667
2024-10-05 15:44:58,948 - root - INFO - Validation accuracy: 0.68
2024-10-05 15:44:59,104 - root - INFO - Test accuracy: 0.57
2024-10-05 15:44:59,108 - root - INFO - Best val result: {'epoch': 0, 'loss': tensor(0.6939, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.68}
2024-10-05 15:44:59,109 - root - INFO - Test result: {'prec': np.float64(0.6428571428571428), 'recall': np.float64(0.5768307322929171), 'acc': 0.57, 'F1': np.float64(0.57), 'epoch': 0}
2024-10-05 15:44:59,109 - root - INFO - Epoch: 1
2024-10-05 15:44:59,537 - root - INFO - Avg loss: tensor(0.6795, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25226354598999023
2024-10-05 15:44:59,681 - root - INFO - Train accuracy: 0.5583333333333333
2024-10-05 15:44:59,825 - root - INFO - Validation accuracy: 0.48
2024-10-05 15:44:59,973 - root - INFO - Test accuracy: 0.53
2024-10-05 15:44:59,975 - root - INFO - Best val result: {'epoch': 0, 'loss': tensor(0.6939, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.68}
2024-10-05 15:44:59,976 - root - INFO - Test result: {'prec': np.float64(0.5375000000000001), 'recall': np.float64(0.5240096038415366), 'acc': 0.53, 'F1': np.float64(0.53), 'epoch': 1}
2024-10-05 15:44:59,978 - root - INFO - Epoch: 2
2024-10-05 15:45:00,472 - root - INFO - Avg loss: tensor(0.6731, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25849294662475586
2024-10-05 15:45:00,653 - root - INFO - Train accuracy: 0.6583333333333333
2024-10-05 15:45:00,811 - root - INFO - Validation accuracy: 0.71
2024-10-05 15:45:00,963 - root - INFO - Test accuracy: 0.59
2024-10-05 15:45:00,966 - root - INFO - Best val result: {'epoch': 2, 'loss': tensor(0.6731, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:00,967 - root - INFO - Test result: {'prec': np.float64(0.6231808731808732), 'recall': np.float64(0.5948379351740697), 'acc': 0.59, 'F1': np.float64(0.59), 'epoch': 2}
2024-10-05 15:45:00,967 - root - INFO - Epoch: 3
2024-10-05 15:45:01,461 - root - INFO - Avg loss: tensor(0.6694, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28905200958251953
2024-10-05 15:45:01,611 - root - INFO - Train accuracy: 0.6416666666666667
2024-10-05 15:45:01,761 - root - INFO - Validation accuracy: 0.6
2024-10-05 15:45:01,908 - root - INFO - Test accuracy: 0.58
2024-10-05 15:45:01,911 - root - INFO - Best val result: {'epoch': 2, 'loss': tensor(0.6731, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:01,912 - root - INFO - Test result: {'prec': np.float64(0.5797979797979798), 'recall': np.float64(0.5790316126450581), 'acc': 0.58, 'F1': np.float64(0.58), 'epoch': 3}
2024-10-05 15:45:01,914 - root - INFO - Epoch: 4
2024-10-05 15:45:02,367 - root - INFO - Avg loss: tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2440633773803711
2024-10-05 15:45:02,532 - root - INFO - Train accuracy: 0.5666666666666667
2024-10-05 15:45:02,680 - root - INFO - Validation accuracy: 0.71
2024-10-05 15:45:02,843 - root - INFO - Test accuracy: 0.59
2024-10-05 15:45:02,846 - root - INFO - Best val result: {'epoch': 4, 'loss': tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:02,847 - root - INFO - Test result: {'prec': np.float64(0.6800595238095238), 'recall': np.float64(0.5968387354941977), 'acc': 0.59, 'F1': np.float64(0.59), 'epoch': 4}
2024-10-05 15:45:02,847 - root - INFO - Epoch: 5
2024-10-05 15:45:03,331 - root - INFO - Avg loss: tensor(0.6571, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2760651111602783
2024-10-05 15:45:03,487 - root - INFO - Train accuracy: 0.575
2024-10-05 15:45:03,631 - root - INFO - Validation accuracy: 0.66
2024-10-05 15:45:03,789 - root - INFO - Test accuracy: 0.59
2024-10-05 15:45:03,792 - root - INFO - Best val result: {'epoch': 4, 'loss': tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:03,793 - root - INFO - Test result: {'prec': np.float64(0.59), 'recall': np.float64(0.5900360144057624), 'acc': 0.59, 'F1': np.float64(0.59), 'epoch': 5}
2024-10-05 15:45:03,796 - root - INFO - Epoch: 6
2024-10-05 15:45:04,224 - root - INFO - Avg loss: tensor(0.6460, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2440650463104248
2024-10-05 15:45:04,379 - root - INFO - Train accuracy: 0.675
2024-10-05 15:45:04,521 - root - INFO - Validation accuracy: 0.62
2024-10-05 15:45:04,668 - root - INFO - Test accuracy: 0.59
2024-10-05 15:45:04,672 - root - INFO - Best val result: {'epoch': 4, 'loss': tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:04,673 - root - INFO - Test result: {'prec': np.float64(0.6719269102990033), 'recall': np.float64(0.5828331332533013), 'acc': 0.59, 'F1': np.float64(0.59), 'epoch': 6}
2024-10-05 15:45:04,676 - root - INFO - Epoch: 7
2024-10-05 15:45:05,082 - root - INFO - Avg loss: tensor(0.6400, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2299060821533203
2024-10-05 15:45:05,235 - root - INFO - Train accuracy: 0.575
2024-10-05 15:45:05,419 - root - INFO - Validation accuracy: 0.69
2024-10-05 15:45:05,575 - root - INFO - Test accuracy: 0.6
2024-10-05 15:45:05,578 - root - INFO - Best val result: {'epoch': 4, 'loss': tensor(0.6642, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.71}
2024-10-05 15:45:05,579 - root - INFO - Test result: {'prec': np.float64(0.7752808988764045), 'recall': np.float64(0.607843137254902), 'acc': 0.6, 'F1': np.float64(0.6), 'epoch': 7}
2024-10-05 15:45:05,582 - root - INFO - Epoch: 8
2024-10-05 15:45:06,027 - root - INFO - Avg loss: tensor(0.6176, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23984599113464355
2024-10-05 15:45:06,196 - root - INFO - Train accuracy: 0.6166666666666667
2024-10-05 15:45:06,344 - root - INFO - Validation accuracy: 0.76
2024-10-05 15:45:06,504 - root - INFO - Test accuracy: 0.65
2024-10-05 15:45:06,508 - root - INFO - Best val result: {'epoch': 8, 'loss': tensor(0.6176, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.76}
2024-10-05 15:45:06,509 - root - INFO - Test result: {'prec': np.float64(0.7127192982456141), 'recall': np.float64(0.6552621048419368), 'acc': 0.65, 'F1': np.float64(0.65), 'epoch': 8}
2024-10-05 15:45:06,510 - root - INFO - Epoch: 9
2024-10-05 15:45:06,933 - root - INFO - Avg loss: tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23001623153686523
2024-10-05 15:45:07,085 - root - INFO - Train accuracy: 0.6833333333333333
2024-10-05 15:45:07,234 - root - INFO - Validation accuracy: 0.84
2024-10-05 15:45:07,397 - root - INFO - Test accuracy: 0.65
2024-10-05 15:45:07,400 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:07,401 - root - INFO - Test result: {'prec': np.float64(0.6517713365539453), 'recall': np.float64(0.650860344137655), 'acc': 0.65, 'F1': np.float64(0.65), 'epoch': 9}
2024-10-05 15:45:07,401 - root - INFO - Epoch: 10
2024-10-05 15:45:07,829 - root - INFO - Avg loss: tensor(0.5761, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23343443870544434
2024-10-05 15:45:07,985 - root - INFO - Train accuracy: 0.825
2024-10-05 15:45:08,139 - root - INFO - Validation accuracy: 0.83
2024-10-05 15:45:08,289 - root - INFO - Test accuracy: 0.69
2024-10-05 15:45:08,292 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:08,292 - root - INFO - Test result: {'prec': np.float64(0.6907051282051282), 'recall': np.float64(0.6904761904761905), 'acc': 0.69, 'F1': np.float64(0.69), 'epoch': 10}
2024-10-05 15:45:08,295 - root - INFO - Epoch: 11
2024-10-05 15:45:08,708 - root - INFO - Avg loss: tensor(0.5494, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23281645774841309
2024-10-05 15:45:08,853 - root - INFO - Train accuracy: 0.6583333333333333
2024-10-05 15:45:09,002 - root - INFO - Validation accuracy: 0.77
2024-10-05 15:45:09,152 - root - INFO - Test accuracy: 0.68
2024-10-05 15:45:09,156 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:09,156 - root - INFO - Test result: {'prec': np.float64(0.7799879445449065), 'recall': np.float64(0.6858743497398959), 'acc': 0.68, 'F1': np.float64(0.68), 'epoch': 11}
2024-10-05 15:45:09,159 - root - INFO - Epoch: 12
2024-10-05 15:45:09,576 - root - INFO - Avg loss: tensor(0.5289, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23671627044677734
2024-10-05 15:45:09,736 - root - INFO - Train accuracy: 0.7833333333333333
2024-10-05 15:45:09,877 - root - INFO - Validation accuracy: 0.83
2024-10-05 15:45:10,030 - root - INFO - Test accuracy: 0.8
2024-10-05 15:45:10,033 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:10,034 - root - INFO - Test result: {'prec': np.float64(0.8353686114880146), 'recall': np.float64(0.7967186874749901), 'acc': 0.8, 'F1': np.float64(0.8), 'epoch': 12}
2024-10-05 15:45:10,037 - root - INFO - Epoch: 13
2024-10-05 15:45:10,474 - root - INFO - Avg loss: tensor(0.4998, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.232496976852417
2024-10-05 15:45:10,629 - root - INFO - Train accuracy: 0.8
2024-10-05 15:45:10,792 - root - INFO - Validation accuracy: 0.83
2024-10-05 15:45:10,941 - root - INFO - Test accuracy: 0.79
2024-10-05 15:45:10,944 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:10,945 - root - INFO - Test result: {'prec': np.float64(0.8195187165775402), 'recall': np.float64(0.7869147659063626), 'acc': 0.79, 'F1': np.float64(0.79), 'epoch': 13}
2024-10-05 15:45:10,947 - root - INFO - Epoch: 14
2024-10-05 15:45:11,387 - root - INFO - Avg loss: tensor(0.4738, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23215818405151367
2024-10-05 15:45:11,538 - root - INFO - Train accuracy: 0.7333333333333333
2024-10-05 15:45:11,690 - root - INFO - Validation accuracy: 0.79
2024-10-05 15:45:11,852 - root - INFO - Test accuracy: 0.72
2024-10-05 15:45:11,856 - root - INFO - Best val result: {'epoch': 9, 'loss': tensor(0.5878, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.84}
2024-10-05 15:45:11,857 - root - INFO - Test result: {'prec': np.float64(0.8181818181818181), 'recall': np.float64(0.7254901960784313), 'acc': 0.72, 'F1': np.float64(0.72), 'epoch': 14}
2024-10-05 15:45:11,860 - root - INFO - Epoch: 15
2024-10-05 15:45:12,271 - root - INFO - Avg loss: tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23009061813354492
2024-10-05 15:45:12,426 - root - INFO - Train accuracy: 0.875
2024-10-05 15:45:12,567 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:12,736 - root - INFO - Test accuracy: 0.85
2024-10-05 15:45:12,739 - root - INFO - Best val result: {'epoch': 15, 'loss': tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.94}
2024-10-05 15:45:12,740 - root - INFO - Test result: {'prec': np.float64(0.8575533661740558), 'recall': np.float64(0.8485394157663064), 'acc': 0.85, 'F1': np.float64(0.85), 'epoch': 15}
2024-10-05 15:45:12,740 - root - INFO - Epoch: 16
2024-10-05 15:45:13,163 - root - INFO - Avg loss: tensor(0.4374, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2389676570892334
2024-10-05 15:45:13,309 - root - INFO - Train accuracy: 0.925
2024-10-05 15:45:13,449 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:45:13,597 - root - INFO - Test accuracy: 0.96
2024-10-05 15:45:13,601 - root - INFO - Best val result: {'epoch': 15, 'loss': tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.94}
2024-10-05 15:45:13,602 - root - INFO - Test result: {'prec': np.float64(0.9603841536614646), 'recall': np.float64(0.9603841536614646), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 16}
2024-10-05 15:45:13,605 - root - INFO - Epoch: 17
2024-10-05 15:45:14,030 - root - INFO - Avg loss: tensor(0.3843, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23453593254089355
2024-10-05 15:45:14,181 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:14,326 - root - INFO - Validation accuracy: 0.92
2024-10-05 15:45:14,487 - root - INFO - Test accuracy: 0.93
2024-10-05 15:45:14,490 - root - INFO - Best val result: {'epoch': 15, 'loss': tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.94}
2024-10-05 15:45:14,490 - root - INFO - Test result: {'prec': np.float64(0.9335748792270531), 'recall': np.float64(0.9309723889555822), 'acc': 0.93, 'F1': np.float64(0.93), 'epoch': 17}
2024-10-05 15:45:14,493 - root - INFO - Epoch: 18
2024-10-05 15:45:14,912 - root - INFO - Avg loss: tensor(0.4011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23532390594482422
2024-10-05 15:45:15,065 - root - INFO - Train accuracy: 0.8666666666666667
2024-10-05 15:45:15,216 - root - INFO - Validation accuracy: 0.87
2024-10-05 15:45:15,386 - root - INFO - Test accuracy: 0.89
2024-10-05 15:45:15,389 - root - INFO - Best val result: {'epoch': 15, 'loss': tensor(0.4715, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.94}
2024-10-05 15:45:15,390 - root - INFO - Test result: {'prec': np.float64(0.9018883415435139), 'recall': np.float64(0.8917567026810724), 'acc': 0.89, 'F1': np.float64(0.89), 'epoch': 18}
2024-10-05 15:45:15,392 - root - INFO - Epoch: 19
2024-10-05 15:45:15,833 - root - INFO - Avg loss: tensor(0.3938, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23813295364379883
2024-10-05 15:45:15,984 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:16,141 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:16,300 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:16,304 - root - INFO - Best val result: {'epoch': 19, 'loss': tensor(0.3938, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.95}
2024-10-05 15:45:16,304 - root - INFO - Test result: {'prec': np.float64(0.940376150460184), 'recall': np.float64(0.940376150460184), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 19}
2024-10-05 15:45:16,305 - root - INFO - Epoch: 20
2024-10-05 15:45:16,728 - root - INFO - Avg loss: tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2367856502532959
2024-10-05 15:45:16,883 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:45:17,033 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:45:17,196 - root - INFO - Test accuracy: 0.96
2024-10-05 15:45:17,199 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:17,200 - root - INFO - Test result: {'prec': np.float64(0.9610598153352068), 'recall': np.float64(0.9595838335334134), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 20}
2024-10-05 15:45:17,200 - root - INFO - Epoch: 21
2024-10-05 15:45:17,642 - root - INFO - Avg loss: tensor(0.3395, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23924589157104492
2024-10-05 15:45:17,798 - root - INFO - Train accuracy: 0.8666666666666667
2024-10-05 15:45:17,948 - root - INFO - Validation accuracy: 0.89
2024-10-05 15:45:18,118 - root - INFO - Test accuracy: 0.88
2024-10-05 15:45:18,122 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:18,123 - root - INFO - Test result: {'prec': np.float64(0.8970155527532577), 'recall': np.float64(0.8779511804721889), 'acc': 0.88, 'F1': np.float64(0.88), 'epoch': 21}
2024-10-05 15:45:18,126 - root - INFO - Epoch: 22
2024-10-05 15:45:18,536 - root - INFO - Avg loss: tensor(0.3875, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22933292388916016
2024-10-05 15:45:18,695 - root - INFO - Train accuracy: 0.7833333333333333
2024-10-05 15:45:18,850 - root - INFO - Validation accuracy: 0.75
2024-10-05 15:45:19,005 - root - INFO - Test accuracy: 0.76
2024-10-05 15:45:19,009 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:19,010 - root - INFO - Test result: {'prec': np.float64(0.8400000000000001), 'recall': np.float64(0.7551020408163265), 'acc': 0.76, 'F1': np.float64(0.76), 'epoch': 22}
2024-10-05 15:45:19,013 - root - INFO - Epoch: 23
2024-10-05 15:45:19,435 - root - INFO - Avg loss: tensor(0.4033, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23412442207336426
2024-10-05 15:45:19,622 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:45:19,781 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:19,959 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:19,962 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:19,963 - root - INFO - Test result: {'prec': np.float64(0.9221196306704136), 'recall': np.float64(0.9207683073229291), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 23}
2024-10-05 15:45:19,966 - root - INFO - Epoch: 24
2024-10-05 15:45:20,380 - root - INFO - Avg loss: tensor(0.3315, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23316431045532227
2024-10-05 15:45:20,547 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:20,693 - root - INFO - Validation accuracy: 0.91
2024-10-05 15:45:20,842 - root - INFO - Test accuracy: 0.9
2024-10-05 15:45:20,844 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:20,845 - root - INFO - Test result: {'prec': np.float64(0.900360144057623), 'recall': np.float64(0.900360144057623), 'acc': 0.9, 'F1': np.float64(0.9), 'epoch': 24}
2024-10-05 15:45:20,848 - root - INFO - Epoch: 25
2024-10-05 15:45:21,311 - root - INFO - Avg loss: tensor(0.3368, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25919246673583984
2024-10-05 15:45:21,471 - root - INFO - Train accuracy: 0.7166666666666667
2024-10-05 15:45:21,617 - root - INFO - Validation accuracy: 0.8
2024-10-05 15:45:21,762 - root - INFO - Test accuracy: 0.83
2024-10-05 15:45:21,765 - root - INFO - Best val result: {'epoch': 20, 'loss': tensor(0.3722, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:21,766 - root - INFO - Test result: {'prec': np.float64(0.875), 'recall': np.float64(0.8265306122448979), 'acc': 0.83, 'F1': np.float64(0.83), 'epoch': 25}
2024-10-05 15:45:21,768 - root - INFO - Epoch: 26
2024-10-05 15:45:22,236 - root - INFO - Avg loss: tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27098631858825684
2024-10-05 15:45:22,389 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:22,570 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:45:22,729 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:22,733 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:22,734 - root - INFO - Test result: {'prec': np.float64(0.9232323232323232), 'recall': np.float64(0.9191676670668267), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 26}
2024-10-05 15:45:22,734 - root - INFO - Epoch: 27
2024-10-05 15:45:23,191 - root - INFO - Avg loss: tensor(0.3264, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2580432891845703
2024-10-05 15:45:23,341 - root - INFO - Train accuracy: 0.9416666666666667
2024-10-05 15:45:23,492 - root - INFO - Validation accuracy: 0.9
2024-10-05 15:45:23,645 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:23,648 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:23,649 - root - INFO - Test result: {'prec': np.float64(0.9252525252525252), 'recall': np.float64(0.9211684673869548), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 27}
2024-10-05 15:45:23,652 - root - INFO - Epoch: 28
2024-10-05 15:45:24,100 - root - INFO - Avg loss: tensor(0.3133, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2411038875579834
2024-10-05 15:45:24,262 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:24,408 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:45:24,551 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:24,553 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:24,554 - root - INFO - Test result: {'prec': np.float64(0.940376150460184), 'recall': np.float64(0.940376150460184), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 28}
2024-10-05 15:45:24,556 - root - INFO - Epoch: 29
2024-10-05 15:45:24,952 - root - INFO - Avg loss: tensor(0.2797, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22718000411987305
2024-10-05 15:45:25,096 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:45:25,240 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:45:25,388 - root - INFO - Test accuracy: 0.93
2024-10-05 15:45:25,391 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:25,392 - root - INFO - Test result: {'prec': np.float64(0.9335748792270531), 'recall': np.float64(0.9309723889555822), 'acc': 0.93, 'F1': np.float64(0.93), 'epoch': 29}
2024-10-05 15:45:25,395 - root - INFO - Epoch: 30
2024-10-05 15:45:25,805 - root - INFO - Avg loss: tensor(0.2872, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22854232788085938
2024-10-05 15:45:25,986 - root - INFO - Train accuracy: 0.8833333333333333
2024-10-05 15:45:26,133 - root - INFO - Validation accuracy: 0.85
2024-10-05 15:45:26,273 - root - INFO - Test accuracy: 0.88
2024-10-05 15:45:26,276 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:26,277 - root - INFO - Test result: {'prec': np.float64(0.8945845390657297), 'recall': np.float64(0.881952781112445), 'acc': 0.88, 'F1': np.float64(0.88), 'epoch': 30}
2024-10-05 15:45:26,279 - root - INFO - Epoch: 31
2024-10-05 15:45:26,693 - root - INFO - Avg loss: tensor(0.3037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2288217544555664
2024-10-05 15:45:26,845 - root - INFO - Train accuracy: 0.8416666666666667
2024-10-05 15:45:27,000 - root - INFO - Validation accuracy: 0.82
2024-10-05 15:45:27,152 - root - INFO - Test accuracy: 0.86
2024-10-05 15:45:27,155 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:27,155 - root - INFO - Test result: {'prec': np.float64(0.8888888888888888), 'recall': np.float64(0.8627450980392157), 'acc': 0.86, 'F1': np.float64(0.86), 'epoch': 31}
2024-10-05 15:45:27,158 - root - INFO - Epoch: 32
2024-10-05 15:45:27,573 - root - INFO - Avg loss: tensor(0.2824, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23118948936462402
2024-10-05 15:45:27,725 - root - INFO - Train accuracy: 0.9083333333333333
2024-10-05 15:45:27,859 - root - INFO - Validation accuracy: 0.89
2024-10-05 15:45:28,011 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:28,014 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:28,015 - root - INFO - Test result: {'prec': np.float64(0.926968584251326), 'recall': np.float64(0.9187675070028011), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 32}
2024-10-05 15:45:28,019 - root - INFO - Epoch: 33
2024-10-05 15:45:28,429 - root - INFO - Avg loss: tensor(0.2909, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22893881797790527
2024-10-05 15:45:28,571 - root - INFO - Train accuracy: 0.9
2024-10-05 15:45:28,715 - root - INFO - Validation accuracy: 0.86
2024-10-05 15:45:28,866 - root - INFO - Test accuracy: 0.88
2024-10-05 15:45:28,868 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:28,869 - root - INFO - Test result: {'prec': np.float64(0.8945845390657297), 'recall': np.float64(0.881952781112445), 'acc': 0.88, 'F1': np.float64(0.88), 'epoch': 33}
2024-10-05 15:45:28,872 - root - INFO - Epoch: 34
2024-10-05 15:45:29,289 - root - INFO - Avg loss: tensor(0.2783, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22950983047485352
2024-10-05 15:45:29,436 - root - INFO - Train accuracy: 0.5666666666666667
2024-10-05 15:45:29,586 - root - INFO - Validation accuracy: 0.62
2024-10-05 15:45:29,737 - root - INFO - Test accuracy: 0.69
2024-10-05 15:45:29,741 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:29,742 - root - INFO - Test result: {'prec': np.float64(0.8109756097560976), 'recall': np.float64(0.6836734693877551), 'acc': 0.69, 'F1': np.float64(0.69), 'epoch': 34}
2024-10-05 15:45:29,745 - root - INFO - Epoch: 35
2024-10-05 15:45:30,169 - root - INFO - Avg loss: tensor(0.2931, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23342251777648926
2024-10-05 15:45:30,327 - root - INFO - Train accuracy: 0.875
2024-10-05 15:45:30,479 - root - INFO - Validation accuracy: 0.89
2024-10-05 15:45:30,632 - root - INFO - Test accuracy: 0.93
2024-10-05 15:45:30,635 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:30,636 - root - INFO - Test result: {'prec': np.float64(0.9375), 'recall': np.float64(0.9313725490196079), 'acc': 0.93, 'F1': np.float64(0.93), 'epoch': 35}
2024-10-05 15:45:30,638 - root - INFO - Epoch: 36
2024-10-05 15:45:31,062 - root - INFO - Avg loss: tensor(0.2676, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.232574462890625
2024-10-05 15:45:31,212 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:31,362 - root - INFO - Validation accuracy: 0.92
2024-10-05 15:45:31,499 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:31,502 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:31,502 - root - INFO - Test result: {'prec': np.float64(0.9434343434343434), 'recall': np.float64(0.9391756702681072), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 36}
2024-10-05 15:45:31,505 - root - INFO - Epoch: 37
2024-10-05 15:45:31,933 - root - INFO - Avg loss: tensor(0.2704, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2300872802734375
2024-10-05 15:45:32,087 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:32,245 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:32,398 - root - INFO - Test accuracy: 0.96
2024-10-05 15:45:32,402 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:32,403 - root - INFO - Test result: {'prec': np.float64(0.959983993597439), 'recall': np.float64(0.959983993597439), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 37}
2024-10-05 15:45:32,406 - root - INFO - Epoch: 38
2024-10-05 15:45:32,811 - root - INFO - Avg loss: tensor(0.2486, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22994256019592285
2024-10-05 15:45:32,965 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:33,115 - root - INFO - Validation accuracy: 0.92
2024-10-05 15:45:33,266 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:33,269 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:33,270 - root - INFO - Test result: {'prec': np.float64(0.940376150460184), 'recall': np.float64(0.940376150460184), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 38}
2024-10-05 15:45:33,272 - root - INFO - Epoch: 39
2024-10-05 15:45:33,690 - root - INFO - Avg loss: tensor(0.2267, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2323780059814453
2024-10-05 15:45:33,847 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:45:33,984 - root - INFO - Validation accuracy: 0.91
2024-10-05 15:45:34,123 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:34,126 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:34,127 - root - INFO - Test result: {'prec': np.float64(0.926968584251326), 'recall': np.float64(0.9187675070028011), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 39}
2024-10-05 15:45:34,130 - root - INFO - Epoch: 40
2024-10-05 15:45:34,546 - root - INFO - Avg loss: tensor(0.2184, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22841095924377441
2024-10-05 15:45:34,691 - root - INFO - Train accuracy: 0.8916666666666667
2024-10-05 15:45:34,832 - root - INFO - Validation accuracy: 0.83
2024-10-05 15:45:34,982 - root - INFO - Test accuracy: 0.89
2024-10-05 15:45:34,986 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:34,987 - root - INFO - Test result: {'prec': np.float64(0.9112903225806452), 'recall': np.float64(0.8877551020408163), 'acc': 0.89, 'F1': np.float64(0.89), 'epoch': 40}
2024-10-05 15:45:34,991 - root - INFO - Epoch: 41
2024-10-05 15:45:35,392 - root - INFO - Avg loss: tensor(0.2296, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22740912437438965
2024-10-05 15:45:35,544 - root - INFO - Train accuracy: 0.925
2024-10-05 15:45:35,700 - root - INFO - Validation accuracy: 0.9
2024-10-05 15:45:35,851 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:35,854 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:35,854 - root - INFO - Test result: {'prec': np.float64(0.9421918908069049), 'recall': np.float64(0.9407763105242097), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 41}
2024-10-05 15:45:35,857 - root - INFO - Epoch: 42
2024-10-05 15:45:36,271 - root - INFO - Avg loss: tensor(0.2420, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22945404052734375
2024-10-05 15:45:36,425 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:36,561 - root - INFO - Validation accuracy: 0.92
2024-10-05 15:45:36,708 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:36,710 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:36,711 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 42}
2024-10-05 15:45:36,714 - root - INFO - Epoch: 43
2024-10-05 15:45:37,126 - root - INFO - Avg loss: tensor(0.2368, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2301347255706787
2024-10-05 15:45:37,280 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:37,427 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:37,572 - root - INFO - Test accuracy: 0.95
2024-10-05 15:45:37,575 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:37,576 - root - INFO - Test result: {'prec': np.float64(0.9511217948717949), 'recall': np.float64(0.9505802320928372), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 43}
2024-10-05 15:45:37,579 - root - INFO - Epoch: 44
2024-10-05 15:45:37,989 - root - INFO - Avg loss: tensor(0.2113, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23095297813415527
2024-10-05 15:45:38,159 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:45:38,312 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:38,459 - root - INFO - Test accuracy: 0.95
2024-10-05 15:45:38,462 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:38,463 - root - INFO - Test result: {'prec': np.float64(0.9553571428571428), 'recall': np.float64(0.9489795918367347), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 44}
2024-10-05 15:45:38,465 - root - INFO - Epoch: 45
2024-10-05 15:45:38,875 - root - INFO - Avg loss: tensor(0.2453, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22755122184753418
2024-10-05 15:45:39,029 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:39,179 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:39,332 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:39,336 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:39,337 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 45}
2024-10-05 15:45:39,340 - root - INFO - Epoch: 46
2024-10-05 15:45:39,752 - root - INFO - Avg loss: tensor(0.2106, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2284862995147705
2024-10-05 15:45:39,913 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:40,064 - root - INFO - Validation accuracy: 0.9
2024-10-05 15:45:40,217 - root - INFO - Test accuracy: 0.93
2024-10-05 15:45:40,220 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:40,221 - root - INFO - Test result: {'prec': np.float64(0.9335748792270531), 'recall': np.float64(0.9309723889555822), 'acc': 0.93, 'F1': np.float64(0.93), 'epoch': 46}
2024-10-05 15:45:40,224 - root - INFO - Epoch: 47
2024-10-05 15:45:40,682 - root - INFO - Avg loss: tensor(0.2308, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2517735958099365
2024-10-05 15:45:40,834 - root - INFO - Train accuracy: 0.9416666666666667
2024-10-05 15:45:40,981 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:45:41,127 - root - INFO - Test accuracy: 0.95
2024-10-05 15:45:41,131 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:41,132 - root - INFO - Test result: {'prec': np.float64(0.95), 'recall': np.float64(0.9501800720288115), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 47}
2024-10-05 15:45:41,135 - root - INFO - Epoch: 48
2024-10-05 15:45:41,563 - root - INFO - Avg loss: tensor(0.2055, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24045729637145996
2024-10-05 15:45:41,730 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:41,890 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:42,037 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:42,039 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:42,040 - root - INFO - Test result: {'prec': np.float64(0.926968584251326), 'recall': np.float64(0.9187675070028011), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 48}
2024-10-05 15:45:42,043 - root - INFO - Epoch: 49
2024-10-05 15:45:42,504 - root - INFO - Avg loss: tensor(0.2325, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27025294303894043
2024-10-05 15:45:42,659 - root - INFO - Train accuracy: 0.95
2024-10-05 15:45:42,825 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:42,985 - root - INFO - Test accuracy: 0.97
2024-10-05 15:45:42,988 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:42,989 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 49}
2024-10-05 15:45:42,992 - root - INFO - Epoch: 50
2024-10-05 15:45:43,465 - root - INFO - Avg loss: tensor(0.2233, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26256704330444336
2024-10-05 15:45:43,629 - root - INFO - Train accuracy: 0.9166666666666666
2024-10-05 15:45:43,769 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:43,920 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:43,923 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:43,924 - root - INFO - Test result: {'prec': np.float64(0.9434343434343434), 'recall': np.float64(0.9391756702681072), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 50}
2024-10-05 15:45:43,927 - root - INFO - Epoch: 51
2024-10-05 15:45:44,379 - root - INFO - Avg loss: tensor(0.1930, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2727055549621582
2024-10-05 15:45:44,536 - root - INFO - Train accuracy: 0.8666666666666667
2024-10-05 15:45:44,685 - root - INFO - Validation accuracy: 0.87
2024-10-05 15:45:44,839 - root - INFO - Test accuracy: 0.89
2024-10-05 15:45:44,843 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:44,844 - root - INFO - Test result: {'prec': np.float64(0.9083333333333333), 'recall': np.float64(0.892156862745098), 'acc': 0.89, 'F1': np.float64(0.89), 'epoch': 51}
2024-10-05 15:45:44,847 - root - INFO - Epoch: 52
2024-10-05 15:45:45,271 - root - INFO - Avg loss: tensor(0.2285, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.244431734085083
2024-10-05 15:45:45,428 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:45,576 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:45,723 - root - INFO - Test accuracy: 0.97
2024-10-05 15:45:45,726 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:45,727 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 52}
2024-10-05 15:45:45,730 - root - INFO - Epoch: 53
2024-10-05 15:45:46,147 - root - INFO - Avg loss: tensor(0.2084, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23558664321899414
2024-10-05 15:45:46,331 - root - INFO - Train accuracy: 0.8916666666666667
2024-10-05 15:45:46,485 - root - INFO - Validation accuracy: 0.86
2024-10-05 15:45:46,634 - root - INFO - Test accuracy: 0.88
2024-10-05 15:45:46,638 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:46,639 - root - INFO - Test result: {'prec': np.float64(0.9047619047619048), 'recall': np.float64(0.8775510204081632), 'acc': 0.88, 'F1': np.float64(0.88), 'epoch': 53}
2024-10-05 15:45:46,642 - root - INFO - Epoch: 54
2024-10-05 15:45:47,065 - root - INFO - Avg loss: tensor(0.2242, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23494386672973633
2024-10-05 15:45:47,212 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:45:47,369 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:47,524 - root - INFO - Test accuracy: 0.98
2024-10-05 15:45:47,527 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:47,528 - root - INFO - Test result: {'prec': np.float64(0.9799919967987194), 'recall': np.float64(0.9799919967987194), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 54}
2024-10-05 15:45:47,531 - root - INFO - Epoch: 55
2024-10-05 15:45:47,977 - root - INFO - Avg loss: tensor(0.1586, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23819446563720703
2024-10-05 15:45:48,130 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:48,272 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:45:48,427 - root - INFO - Test accuracy: 0.95
2024-10-05 15:45:48,430 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:48,431 - root - INFO - Test result: {'prec': np.float64(0.9520933977455717), 'recall': np.float64(0.9493797519007603), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 55}
2024-10-05 15:45:48,434 - root - INFO - Epoch: 56
2024-10-05 15:45:48,845 - root - INFO - Avg loss: tensor(0.1583, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2350146770477295
2024-10-05 15:45:49,014 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:49,166 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:49,331 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:49,335 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:49,336 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 56}
2024-10-05 15:45:49,339 - root - INFO - Epoch: 57
2024-10-05 15:45:49,761 - root - INFO - Avg loss: tensor(0.1944, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23288965225219727
2024-10-05 15:45:49,919 - root - INFO - Train accuracy: 0.8583333333333333
2024-10-05 15:45:50,068 - root - INFO - Validation accuracy: 0.91
2024-10-05 15:45:50,217 - root - INFO - Test accuracy: 0.91
2024-10-05 15:45:50,220 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:50,221 - root - INFO - Test result: {'prec': np.float64(0.9224137931034483), 'recall': np.float64(0.9117647058823529), 'acc': 0.91, 'F1': np.float64(0.91), 'epoch': 57}
2024-10-05 15:45:50,224 - root - INFO - Epoch: 58
2024-10-05 15:45:50,653 - root - INFO - Avg loss: tensor(0.1652, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24072647094726562
2024-10-05 15:45:50,806 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:45:50,963 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:51,107 - root - INFO - Test accuracy: 0.98
2024-10-05 15:45:51,110 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:51,110 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 58}
2024-10-05 15:45:51,113 - root - INFO - Epoch: 59
2024-10-05 15:45:51,520 - root - INFO - Avg loss: tensor(0.2049, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22761201858520508
2024-10-05 15:45:51,673 - root - INFO - Train accuracy: 0.8916666666666667
2024-10-05 15:45:51,815 - root - INFO - Validation accuracy: 0.9
2024-10-05 15:45:51,954 - root - INFO - Test accuracy: 0.91
2024-10-05 15:45:51,957 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:51,958 - root - INFO - Test result: {'prec': np.float64(0.925), 'recall': np.float64(0.9081632653061225), 'acc': 0.91, 'F1': np.float64(0.91), 'epoch': 59}
2024-10-05 15:45:51,961 - root - INFO - Epoch: 60
2024-10-05 15:45:52,377 - root - INFO - Avg loss: tensor(0.1762, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22982072830200195
2024-10-05 15:45:52,529 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:52,679 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:52,840 - root - INFO - Test accuracy: 0.92
2024-10-05 15:45:52,843 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:52,843 - root - INFO - Test result: {'prec': np.float64(0.9322033898305084), 'recall': np.float64(0.9183673469387755), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 60}
2024-10-05 15:45:52,846 - root - INFO - Epoch: 61
2024-10-05 15:45:53,260 - root - INFO - Avg loss: tensor(0.2069, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22989821434020996
2024-10-05 15:45:53,425 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:45:53,563 - root - INFO - Validation accuracy: 0.91
2024-10-05 15:45:53,705 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:53,708 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:53,709 - root - INFO - Test result: {'prec': np.float64(0.9421918908069049), 'recall': np.float64(0.9407763105242097), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 61}
2024-10-05 15:45:53,712 - root - INFO - Epoch: 62
2024-10-05 15:45:54,142 - root - INFO - Avg loss: tensor(0.1422, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23660802841186523
2024-10-05 15:45:54,298 - root - INFO - Train accuracy: 0.9416666666666667
2024-10-05 15:45:54,442 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:45:54,579 - root - INFO - Test accuracy: 0.97
2024-10-05 15:45:54,583 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:54,584 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 62}
2024-10-05 15:45:54,588 - root - INFO - Epoch: 63
2024-10-05 15:45:54,991 - root - INFO - Avg loss: tensor(0.1482, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22645282745361328
2024-10-05 15:45:55,130 - root - INFO - Train accuracy: 0.925
2024-10-05 15:45:55,272 - root - INFO - Validation accuracy: 0.75
2024-10-05 15:45:55,438 - root - INFO - Test accuracy: 0.84
2024-10-05 15:45:55,441 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:55,442 - root - INFO - Test result: {'prec': np.float64(0.8805970149253731), 'recall': np.float64(0.8367346938775511), 'acc': 0.84, 'F1': np.float64(0.84), 'epoch': 63}
2024-10-05 15:45:55,445 - root - INFO - Epoch: 64
2024-10-05 15:45:55,870 - root - INFO - Avg loss: tensor(0.1637, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23939895629882812
2024-10-05 15:45:56,032 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:45:56,183 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:56,336 - root - INFO - Test accuracy: 0.97
2024-10-05 15:45:56,338 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:56,339 - root - INFO - Test result: {'prec': np.float64(0.97), 'recall': np.float64(0.970188075230092), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 64}
2024-10-05 15:45:56,342 - root - INFO - Epoch: 65
2024-10-05 15:45:56,771 - root - INFO - Avg loss: tensor(0.1858, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2380814552307129
2024-10-05 15:45:56,935 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:45:57,093 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:57,251 - root - INFO - Test accuracy: 0.94
2024-10-05 15:45:57,254 - root - INFO - Best val result: {'epoch': 26, 'loss': tensor(0.3513, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.96}
2024-10-05 15:45:57,255 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 65}
2024-10-05 15:45:57,258 - root - INFO - Epoch: 66
2024-10-05 15:45:57,695 - root - INFO - Avg loss: tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24564886093139648
2024-10-05 15:45:57,853 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:58,012 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:45:58,177 - root - INFO - Test accuracy: 0.97
2024-10-05 15:45:58,180 - root - INFO - Best val result: {'epoch': 66, 'loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:45:58,181 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 66}
2024-10-05 15:45:58,181 - root - INFO - Epoch: 67
2024-10-05 15:45:58,620 - root - INFO - Avg loss: tensor(0.1737, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25237607955932617
2024-10-05 15:45:58,779 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:58,933 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:45:59,081 - root - INFO - Test accuracy: 0.96
2024-10-05 15:45:59,083 - root - INFO - Best val result: {'epoch': 66, 'loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:45:59,084 - root - INFO - Test result: {'prec': np.float64(0.9636363636363636), 'recall': np.float64(0.9591836734693877), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 67}
2024-10-05 15:45:59,087 - root - INFO - Epoch: 68
2024-10-05 15:45:59,611 - root - INFO - Avg loss: tensor(0.1395, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31559014320373535
2024-10-05 15:45:59,766 - root - INFO - Train accuracy: 0.975
2024-10-05 15:45:59,921 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:46:00,093 - root - INFO - Test accuracy: 0.94
2024-10-05 15:46:00,096 - root - INFO - Best val result: {'epoch': 66, 'loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:00,097 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 68}
2024-10-05 15:46:00,100 - root - INFO - Epoch: 69
2024-10-05 15:46:00,522 - root - INFO - Avg loss: tensor(0.1503, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23728561401367188
2024-10-05 15:46:00,673 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:46:00,824 - root - INFO - Validation accuracy: 0.94
2024-10-05 15:46:00,960 - root - INFO - Test accuracy: 0.96
2024-10-05 15:46:00,964 - root - INFO - Best val result: {'epoch': 66, 'loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:00,964 - root - INFO - Test result: {'prec': np.float64(0.9603841536614646), 'recall': np.float64(0.9603841536614646), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 69}
2024-10-05 15:46:00,967 - root - INFO - Epoch: 70
2024-10-05 15:46:01,397 - root - INFO - Avg loss: tensor(0.1933, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23502278327941895
2024-10-05 15:46:01,556 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:01,705 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:46:01,871 - root - INFO - Test accuracy: 0.97
2024-10-05 15:46:01,874 - root - INFO - Best val result: {'epoch': 66, 'loss': tensor(0.2139, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:01,874 - root - INFO - Test result: {'prec': np.float64(0.97), 'recall': np.float64(0.970188075230092), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 70}
2024-10-05 15:46:01,877 - root - INFO - Epoch: 71
2024-10-05 15:46:02,309 - root - INFO - Avg loss: tensor(0.1363, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23852992057800293
2024-10-05 15:46:02,479 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:02,630 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:02,788 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:02,791 - root - INFO - Best val result: {'epoch': 71, 'loss': tensor(0.1363, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:02,792 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 71}
2024-10-05 15:46:02,792 - root - INFO - Epoch: 72
2024-10-05 15:46:03,225 - root - INFO - Avg loss: tensor(0.1450, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24278044700622559
2024-10-05 15:46:03,386 - root - INFO - Train accuracy: 0.9
2024-10-05 15:46:03,557 - root - INFO - Validation accuracy: 0.9
2024-10-05 15:46:03,709 - root - INFO - Test accuracy: 0.92
2024-10-05 15:46:03,712 - root - INFO - Best val result: {'epoch': 71, 'loss': tensor(0.1363, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:03,713 - root - INFO - Test result: {'prec': np.float64(0.9322033898305084), 'recall': np.float64(0.9183673469387755), 'acc': 0.92, 'F1': np.float64(0.92), 'epoch': 72}
2024-10-05 15:46:03,717 - root - INFO - Epoch: 73
2024-10-05 15:46:04,160 - root - INFO - Avg loss: tensor(0.1429, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25046658515930176
2024-10-05 15:46:04,329 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:04,484 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:04,637 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:04,640 - root - INFO - Best val result: {'epoch': 73, 'loss': tensor(0.1429, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:04,640 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 73}
2024-10-05 15:46:04,641 - root - INFO - Epoch: 74
2024-10-05 15:46:05,092 - root - INFO - Avg loss: tensor(0.1189, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25946617126464844
2024-10-05 15:46:05,246 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:05,406 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:05,569 - root - INFO - Test accuracy: 0.97
2024-10-05 15:46:05,572 - root - INFO - Best val result: {'epoch': 74, 'loss': tensor(0.1189, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:05,573 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 74}
2024-10-05 15:46:05,573 - root - INFO - Epoch: 75
2024-10-05 15:46:05,998 - root - INFO - Avg loss: tensor(0.1364, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23398160934448242
2024-10-05 15:46:06,157 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:46:06,316 - root - INFO - Validation accuracy: 0.86
2024-10-05 15:46:06,466 - root - INFO - Test accuracy: 0.89
2024-10-05 15:46:06,469 - root - INFO - Best val result: {'epoch': 74, 'loss': tensor(0.1189, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:06,470 - root - INFO - Test result: {'prec': np.float64(0.9041666666666667), 'recall': np.float64(0.8881552621048419), 'acc': 0.89, 'F1': np.float64(0.89), 'epoch': 75}
2024-10-05 15:46:06,472 - root - INFO - Epoch: 76
2024-10-05 15:46:06,893 - root - INFO - Avg loss: tensor(0.0936, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23510241508483887
2024-10-05 15:46:07,057 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:46:07,210 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:07,385 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:07,389 - root - INFO - Best val result: {'epoch': 76, 'loss': tensor(0.0936, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.97}
2024-10-05 15:46:07,390 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 76}
2024-10-05 15:46:07,390 - root - INFO - Epoch: 77
2024-10-05 15:46:07,838 - root - INFO - Avg loss: tensor(0.1269, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2709982395172119
2024-10-05 15:46:07,996 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:08,138 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:08,298 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:08,301 - root - INFO - Best val result: {'epoch': 77, 'loss': tensor(0.1269, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.98}
2024-10-05 15:46:08,302 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 77}
2024-10-05 15:46:08,302 - root - INFO - Epoch: 78
2024-10-05 15:46:08,713 - root - INFO - Avg loss: tensor(0.1045, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2301023006439209
2024-10-05 15:46:08,894 - root - INFO - Train accuracy: 0.8833333333333333
2024-10-05 15:46:09,038 - root - INFO - Validation accuracy: 0.78
2024-10-05 15:46:09,190 - root - INFO - Test accuracy: 0.85
2024-10-05 15:46:09,194 - root - INFO - Best val result: {'epoch': 77, 'loss': tensor(0.1269, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.98}
2024-10-05 15:46:09,195 - root - INFO - Test result: {'prec': np.float64(0.8688455008488964), 'recall': np.float64(0.8477390956382553), 'acc': 0.85, 'F1': np.float64(0.85), 'epoch': 78}
2024-10-05 15:46:09,198 - root - INFO - Epoch: 79
2024-10-05 15:46:09,620 - root - INFO - Avg loss: tensor(0.1225, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23239755630493164
2024-10-05 15:46:09,768 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:09,918 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:46:10,075 - root - INFO - Test accuracy: 0.96
2024-10-05 15:46:10,078 - root - INFO - Best val result: {'epoch': 77, 'loss': tensor(0.1269, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.98}
2024-10-05 15:46:10,079 - root - INFO - Test result: {'prec': np.float64(0.9636363636363636), 'recall': np.float64(0.9591836734693877), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 79}
2024-10-05 15:46:10,082 - root - INFO - Epoch: 80
2024-10-05 15:46:10,499 - root - INFO - Avg loss: tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23300886154174805
2024-10-05 15:46:10,656 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:10,808 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:10,968 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:10,971 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:10,972 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 80}
2024-10-05 15:46:10,972 - root - INFO - Epoch: 81
2024-10-05 15:46:11,392 - root - INFO - Avg loss: tensor(0.0995, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23396539688110352
2024-10-05 15:46:11,556 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:11,708 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:11,861 - root - INFO - Test accuracy: 0.97
2024-10-05 15:46:11,864 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:11,864 - root - INFO - Test result: {'prec': np.float64(0.9703525641025641), 'recall': np.float64(0.9697879151660664), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 81}
2024-10-05 15:46:11,867 - root - INFO - Epoch: 82
2024-10-05 15:46:12,276 - root - INFO - Avg loss: tensor(0.1447, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23441290855407715
2024-10-05 15:46:12,435 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:12,587 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:46:12,732 - root - INFO - Test accuracy: 0.95
2024-10-05 15:46:12,735 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:12,735 - root - INFO - Test result: {'prec': np.float64(0.9520933977455717), 'recall': np.float64(0.9493797519007603), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 82}
2024-10-05 15:46:12,739 - root - INFO - Epoch: 83
2024-10-05 15:46:13,164 - root - INFO - Avg loss: tensor(0.1424, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2458181381225586
2024-10-05 15:46:13,319 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:13,457 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:13,603 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:13,606 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:13,607 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 83}
2024-10-05 15:46:13,610 - root - INFO - Epoch: 84
2024-10-05 15:46:14,071 - root - INFO - Avg loss: tensor(0.0890, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2616140842437744
2024-10-05 15:46:14,238 - root - INFO - Train accuracy: 0.7833333333333333
2024-10-05 15:46:14,385 - root - INFO - Validation accuracy: 0.74
2024-10-05 15:46:14,530 - root - INFO - Test accuracy: 0.82
2024-10-05 15:46:14,533 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:14,534 - root - INFO - Test result: {'prec': np.float64(0.8695652173913043), 'recall': np.float64(0.8163265306122449), 'acc': 0.82, 'F1': np.float64(0.82), 'epoch': 84}
2024-10-05 15:46:14,537 - root - INFO - Epoch: 85
2024-10-05 15:46:14,987 - root - INFO - Avg loss: tensor(0.1438, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24234652519226074
2024-10-05 15:46:15,161 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:15,331 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:46:15,473 - root - INFO - Test accuracy: 0.94
2024-10-05 15:46:15,477 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:15,478 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 85}
2024-10-05 15:46:15,481 - root - INFO - Epoch: 86
2024-10-05 15:46:15,905 - root - INFO - Avg loss: tensor(0.0962, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2329549789428711
2024-10-05 15:46:16,052 - root - INFO - Train accuracy: 0.8583333333333333
2024-10-05 15:46:16,201 - root - INFO - Validation accuracy: 0.76
2024-10-05 15:46:16,351 - root - INFO - Test accuracy: 0.79
2024-10-05 15:46:16,354 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:16,355 - root - INFO - Test result: {'prec': np.float64(0.8541666666666667), 'recall': np.float64(0.7857142857142857), 'acc': 0.79, 'F1': np.float64(0.79), 'epoch': 86}
2024-10-05 15:46:16,358 - root - INFO - Epoch: 87
2024-10-05 15:46:16,798 - root - INFO - Avg loss: tensor(0.1025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24624109268188477
2024-10-05 15:46:16,966 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:17,130 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:17,273 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:17,276 - root - INFO - Best val result: {'epoch': 80, 'loss': tensor(0.1109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:17,277 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 87}
2024-10-05 15:46:17,280 - root - INFO - Epoch: 88
2024-10-05 15:46:17,718 - root - INFO - Avg loss: tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24896717071533203
2024-10-05 15:46:17,895 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:18,057 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:18,223 - root - INFO - Test accuracy: 0.96
2024-10-05 15:46:18,227 - root - INFO - Best val result: {'epoch': 88, 'loss': tensor(0.0616, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:18,228 - root - INFO - Test result: {'prec': np.float64(0.9636363636363636), 'recall': np.float64(0.9591836734693877), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 88}
2024-10-05 15:46:18,228 - root - INFO - Epoch: 89
2024-10-05 15:46:18,708 - root - INFO - Avg loss: tensor(0.0753, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28034234046936035
2024-10-05 15:46:18,873 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:19,034 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:19,191 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:19,194 - root - INFO - Best val result: {'epoch': 89, 'loss': tensor(0.0753, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:19,195 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 89}
2024-10-05 15:46:19,195 - root - INFO - Epoch: 90
2024-10-05 15:46:19,678 - root - INFO - Avg loss: tensor(0.0833, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2837707996368408
2024-10-05 15:46:19,851 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:20,009 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:46:20,176 - root - INFO - Test accuracy: 0.94
2024-10-05 15:46:20,180 - root - INFO - Best val result: {'epoch': 89, 'loss': tensor(0.0753, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:20,181 - root - INFO - Test result: {'prec': np.float64(0.9473684210526316), 'recall': np.float64(0.9387755102040816), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 90}
2024-10-05 15:46:20,184 - root - INFO - Epoch: 91
2024-10-05 15:46:20,642 - root - INFO - Avg loss: tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26949381828308105
2024-10-05 15:46:20,816 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:20,968 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:21,135 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:21,138 - root - INFO - Best val result: {'epoch': 91, 'loss': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:21,139 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 91}
2024-10-05 15:46:21,139 - root - INFO - Epoch: 92
2024-10-05 15:46:21,574 - root - INFO - Avg loss: tensor(0.0591, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2545301914215088
2024-10-05 15:46:21,731 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:21,885 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:46:22,035 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:22,038 - root - INFO - Best val result: {'epoch': 91, 'loss': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:22,039 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 92}
2024-10-05 15:46:22,041 - root - INFO - Epoch: 93
2024-10-05 15:46:22,457 - root - INFO - Avg loss: tensor(0.0626, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23205065727233887
2024-10-05 15:46:22,603 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:22,751 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:46:22,905 - root - INFO - Test accuracy: 0.95
2024-10-05 15:46:22,908 - root - INFO - Best val result: {'epoch': 91, 'loss': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:22,909 - root - INFO - Test result: {'prec': np.float64(0.9553571428571428), 'recall': np.float64(0.9489795918367347), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 93}
2024-10-05 15:46:22,912 - root - INFO - Epoch: 94
2024-10-05 15:46:23,334 - root - INFO - Avg loss: tensor(0.0670, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23603367805480957
2024-10-05 15:46:23,488 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:23,643 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:23,795 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:23,798 - root - INFO - Best val result: {'epoch': 91, 'loss': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:23,798 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 94}
2024-10-05 15:46:23,801 - root - INFO - Epoch: 95
2024-10-05 15:46:24,218 - root - INFO - Avg loss: tensor(0.0736, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23322224617004395
2024-10-05 15:46:24,368 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:24,518 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:24,692 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:24,696 - root - INFO - Best val result: {'epoch': 91, 'loss': tensor(0.0624, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:24,697 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 95}
2024-10-05 15:46:24,700 - root - INFO - Epoch: 96
2024-10-05 15:46:25,117 - root - INFO - Avg loss: tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23321294784545898
2024-10-05 15:46:25,301 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:25,451 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:25,600 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:25,604 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:25,605 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 96}
2024-10-05 15:46:25,605 - root - INFO - Epoch: 97
2024-10-05 15:46:26,030 - root - INFO - Avg loss: tensor(0.0477, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2326488494873047
2024-10-05 15:46:26,186 - root - INFO - Train accuracy: 0.95
2024-10-05 15:46:26,328 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:26,479 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:26,482 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:26,483 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 97}
2024-10-05 15:46:26,485 - root - INFO - Epoch: 98
2024-10-05 15:46:26,909 - root - INFO - Avg loss: tensor(0.0663, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23212575912475586
2024-10-05 15:46:27,065 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:27,206 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:27,358 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:27,361 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:27,362 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 98}
2024-10-05 15:46:27,366 - root - INFO - Epoch: 99
2024-10-05 15:46:27,822 - root - INFO - Avg loss: tensor(0.0836, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26893186569213867
2024-10-05 15:46:27,979 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:28,138 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:28,299 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:28,301 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:28,302 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 99}
2024-10-05 15:46:28,305 - root - INFO - Epoch: 100
2024-10-05 15:46:28,763 - root - INFO - Avg loss: tensor(0.0665, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2750678062438965
2024-10-05 15:46:28,921 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:29,069 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:29,224 - root - INFO - Test accuracy: 0.97
2024-10-05 15:46:29,228 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:29,228 - root - INFO - Test result: {'prec': np.float64(0.9722222222222222), 'recall': np.float64(0.9693877551020409), 'acc': 0.97, 'F1': np.float64(0.97), 'epoch': 100}
2024-10-05 15:46:29,232 - root - INFO - Epoch: 101
2024-10-05 15:46:29,648 - root - INFO - Avg loss: tensor(0.0487, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23230838775634766
2024-10-05 15:46:29,822 - root - INFO - Train accuracy: 0.9583333333333334
2024-10-05 15:46:29,990 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:30,152 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:30,156 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:30,156 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 101}
2024-10-05 15:46:30,159 - root - INFO - Epoch: 102
2024-10-05 15:46:30,581 - root - INFO - Avg loss: tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23417091369628906
2024-10-05 15:46:30,741 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:30,887 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:31,036 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:31,039 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:31,040 - root - INFO - Test result: {'prec': np.float64(0.9811320754716981), 'recall': np.float64(0.9795918367346939), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 102}
2024-10-05 15:46:31,043 - root - INFO - Epoch: 103
2024-10-05 15:46:31,464 - root - INFO - Avg loss: tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2327899932861328
2024-10-05 15:46:31,618 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:31,799 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:46:31,950 - root - INFO - Test accuracy: 0.95
2024-10-05 15:46:31,954 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:31,954 - root - INFO - Test result: {'prec': np.float64(0.9553571428571428), 'recall': np.float64(0.9489795918367347), 'acc': 0.95, 'F1': np.float64(0.95), 'epoch': 103}
2024-10-05 15:46:31,957 - root - INFO - Epoch: 104
2024-10-05 15:46:32,383 - root - INFO - Avg loss: tensor(0.0691, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23427152633666992
2024-10-05 15:46:32,538 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:32,698 - root - INFO - Validation accuracy: 0.93
2024-10-05 15:46:32,846 - root - INFO - Test accuracy: 0.94
2024-10-05 15:46:32,850 - root - INFO - Best val result: {'epoch': 96, 'loss': tensor(0.0788, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 0.99}
2024-10-05 15:46:32,851 - root - INFO - Test result: {'prec': np.float64(0.9409875551987155), 'recall': np.float64(0.9395758303321329), 'acc': 0.94, 'F1': np.float64(0.94), 'epoch': 104}
2024-10-05 15:46:32,854 - root - INFO - Epoch: 105
2024-10-05 15:46:33,284 - root - INFO - Avg loss: tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23286151885986328
2024-10-05 15:46:33,437 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:33,587 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:33,747 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:33,750 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:33,751 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 105}
2024-10-05 15:46:33,751 - root - INFO - Epoch: 106
2024-10-05 15:46:34,174 - root - INFO - Avg loss: tensor(0.0304, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330317497253418
2024-10-05 15:46:34,334 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:34,488 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:34,639 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:34,642 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:34,643 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 106}
2024-10-05 15:46:34,646 - root - INFO - Epoch: 107
2024-10-05 15:46:35,069 - root - INFO - Avg loss: tensor(0.0664, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23245692253112793
2024-10-05 15:46:35,215 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:35,396 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:35,534 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:35,537 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:35,537 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 107}
2024-10-05 15:46:35,540 - root - INFO - Epoch: 108
2024-10-05 15:46:36,008 - root - INFO - Avg loss: tensor(0.0440, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26351261138916016
2024-10-05 15:46:36,159 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:36,313 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:36,462 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:36,466 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:36,466 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 108}
2024-10-05 15:46:36,469 - root - INFO - Epoch: 109
2024-10-05 15:46:36,897 - root - INFO - Avg loss: tensor(0.0680, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23709464073181152
2024-10-05 15:46:37,058 - root - INFO - Train accuracy: 0.9333333333333333
2024-10-05 15:46:37,213 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:37,360 - root - INFO - Test accuracy: 0.98
2024-10-05 15:46:37,363 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:37,363 - root - INFO - Test result: {'prec': np.float64(0.9803921568627452), 'recall': np.float64(0.9803921568627452), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 109}
2024-10-05 15:46:37,366 - root - INFO - Epoch: 110
2024-10-05 15:46:37,789 - root - INFO - Avg loss: tensor(0.0537, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23153471946716309
2024-10-05 15:46:37,956 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:38,103 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:38,262 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:38,266 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:38,267 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 110}
2024-10-05 15:46:38,269 - root - INFO - Epoch: 111
2024-10-05 15:46:38,687 - root - INFO - Avg loss: tensor(0.0465, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23347139358520508
2024-10-05 15:46:38,839 - root - INFO - Train accuracy: 0.8833333333333333
2024-10-05 15:46:38,991 - root - INFO - Validation accuracy: 0.91
2024-10-05 15:46:39,141 - root - INFO - Test accuracy: 0.93
2024-10-05 15:46:39,144 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:39,145 - root - INFO - Test result: {'prec': np.float64(0.9375), 'recall': np.float64(0.9313725490196079), 'acc': 0.93, 'F1': np.float64(0.93), 'epoch': 111}
2024-10-05 15:46:39,148 - root - INFO - Epoch: 112
2024-10-05 15:46:39,571 - root - INFO - Avg loss: tensor(0.0658, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2353372573852539
2024-10-05 15:46:39,726 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:39,882 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:40,028 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:40,032 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:40,032 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 112}
2024-10-05 15:46:40,035 - root - INFO - Epoch: 113
2024-10-05 15:46:40,458 - root - INFO - Avg loss: tensor(0.0324, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23338699340820312
2024-10-05 15:46:40,623 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:40,772 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:40,923 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:40,926 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:40,927 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 113}
2024-10-05 15:46:40,930 - root - INFO - Epoch: 114
2024-10-05 15:46:41,340 - root - INFO - Avg loss: tensor(0.0301, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23348736763000488
2024-10-05 15:46:41,496 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:41,675 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:41,834 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:41,837 - root - INFO - Best val result: {'epoch': 105, 'loss': tensor(0.0973, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:41,838 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 114}
2024-10-05 15:46:41,841 - root - INFO - Epoch: 115
2024-10-05 15:46:42,319 - root - INFO - Avg loss: tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27258968353271484
2024-10-05 15:46:42,482 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:42,635 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:42,788 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:42,791 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:42,792 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 115}
2024-10-05 15:46:42,792 - root - INFO - Epoch: 116
2024-10-05 15:46:43,216 - root - INFO - Avg loss: tensor(0.0328, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23672056198120117
2024-10-05 15:46:43,365 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:43,517 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:43,665 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:43,669 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:43,670 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 116}
2024-10-05 15:46:43,673 - root - INFO - Epoch: 117
2024-10-05 15:46:44,099 - root - INFO - Avg loss: tensor(0.0349, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23972225189208984
2024-10-05 15:46:44,255 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:44,408 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:44,561 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:44,564 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:44,565 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 117}
2024-10-05 15:46:44,568 - root - INFO - Epoch: 118
2024-10-05 15:46:44,996 - root - INFO - Avg loss: tensor(0.0514, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24111175537109375
2024-10-05 15:46:45,151 - root - INFO - Train accuracy: 0.975
2024-10-05 15:46:45,288 - root - INFO - Validation accuracy: 0.95
2024-10-05 15:46:45,445 - root - INFO - Test accuracy: 0.96
2024-10-05 15:46:45,448 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:45,449 - root - INFO - Test result: {'prec': np.float64(0.9636363636363636), 'recall': np.float64(0.9591836734693877), 'acc': 0.96, 'F1': np.float64(0.96), 'epoch': 118}
2024-10-05 15:46:45,453 - root - INFO - Epoch: 119
2024-10-05 15:46:45,889 - root - INFO - Avg loss: tensor(0.0308, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2348616123199463
2024-10-05 15:46:46,039 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:46,195 - root - INFO - Validation accuracy: 0.97
2024-10-05 15:46:46,335 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:46,339 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:46,340 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 119}
2024-10-05 15:46:46,342 - root - INFO - Epoch: 120
2024-10-05 15:46:46,817 - root - INFO - Avg loss: tensor(0.0399, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26769089698791504
2024-10-05 15:46:46,975 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:47,115 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:47,268 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:47,271 - root - INFO - Best val result: {'epoch': 115, 'loss': tensor(0.0386, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:47,271 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 120}
2024-10-05 15:46:47,274 - root - INFO - Epoch: 121
2024-10-05 15:46:47,698 - root - INFO - Avg loss: tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23354315757751465
2024-10-05 15:46:47,853 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:47,998 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:48,145 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:48,148 - root - INFO - Best val result: {'epoch': 121, 'loss': tensor(0.0269, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:48,149 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 121}
2024-10-05 15:46:48,149 - root - INFO - Epoch: 122
2024-10-05 15:46:48,571 - root - INFO - Avg loss: tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23853468894958496
2024-10-05 15:46:48,733 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:48,881 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:49,045 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:49,048 - root - INFO - Best val result: {'epoch': 122, 'loss': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:49,049 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 122}
2024-10-05 15:46:49,049 - root - INFO - Epoch: 123
2024-10-05 15:46:49,471 - root - INFO - Avg loss: tensor(0.0549, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23796582221984863
2024-10-05 15:46:49,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:49,773 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:49,922 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:49,925 - root - INFO - Best val result: {'epoch': 122, 'loss': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:49,926 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 123}
2024-10-05 15:46:49,929 - root - INFO - Epoch: 124
2024-10-05 15:46:50,360 - root - INFO - Avg loss: tensor(0.0521, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.242767333984375
2024-10-05 15:46:50,520 - root - INFO - Train accuracy: 0.95
2024-10-05 15:46:50,684 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:50,835 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:50,838 - root - INFO - Best val result: {'epoch': 122, 'loss': tensor(0.0373, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:50,839 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 124}
2024-10-05 15:46:50,842 - root - INFO - Epoch: 125
2024-10-05 15:46:51,267 - root - INFO - Avg loss: tensor(0.0189, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24293160438537598
2024-10-05 15:46:51,420 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:51,574 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:51,739 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:51,743 - root - INFO - Best val result: {'epoch': 125, 'loss': tensor(0.0189, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:51,744 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 125}
2024-10-05 15:46:51,744 - root - INFO - Epoch: 126
2024-10-05 15:46:52,160 - root - INFO - Avg loss: tensor(0.0292, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24124503135681152
2024-10-05 15:46:52,310 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:52,450 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:52,605 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:52,608 - root - INFO - Best val result: {'epoch': 126, 'loss': tensor(0.0292, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:52,609 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 126}
2024-10-05 15:46:52,609 - root - INFO - Epoch: 127
2024-10-05 15:46:53,027 - root - INFO - Avg loss: tensor(0.0179, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2351682186126709
2024-10-05 15:46:53,183 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:46:53,320 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:53,481 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:53,484 - root - INFO - Best val result: {'epoch': 127, 'loss': tensor(0.0179, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:53,485 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 127}
2024-10-05 15:46:53,485 - root - INFO - Epoch: 128
2024-10-05 15:46:53,898 - root - INFO - Avg loss: tensor(0.0120, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23021936416625977
2024-10-05 15:46:54,056 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:54,205 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:54,365 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:54,368 - root - INFO - Best val result: {'epoch': 128, 'loss': tensor(0.0120, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:54,369 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 128}
2024-10-05 15:46:54,369 - root - INFO - Epoch: 129
2024-10-05 15:46:54,782 - root - INFO - Avg loss: tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22986459732055664
2024-10-05 15:46:54,937 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:55,092 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:55,240 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:55,243 - root - INFO - Best val result: {'epoch': 129, 'loss': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:55,244 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 129}
2024-10-05 15:46:55,244 - root - INFO - Epoch: 130
2024-10-05 15:46:55,695 - root - INFO - Avg loss: tensor(0.0270, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26111793518066406
2024-10-05 15:46:55,849 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:55,997 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:56,147 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:56,149 - root - INFO - Best val result: {'epoch': 129, 'loss': tensor(0.0410, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:56,150 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 130}
2024-10-05 15:46:56,153 - root - INFO - Epoch: 131
2024-10-05 15:46:56,584 - root - INFO - Avg loss: tensor(0.0141, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23458433151245117
2024-10-05 15:46:56,750 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:56,895 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:57,095 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:57,099 - root - INFO - Best val result: {'epoch': 131, 'loss': tensor(0.0141, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:57,100 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 131}
2024-10-05 15:46:57,100 - root - INFO - Epoch: 132
2024-10-05 15:46:57,520 - root - INFO - Avg loss: tensor(0.0139, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23299789428710938
2024-10-05 15:46:57,674 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:57,825 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:46:57,972 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:57,975 - root - INFO - Best val result: {'epoch': 131, 'loss': tensor(0.0141, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:57,976 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 132}
2024-10-05 15:46:57,979 - root - INFO - Epoch: 133
2024-10-05 15:46:58,390 - root - INFO - Avg loss: tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23714661598205566
2024-10-05 15:46:58,547 - root - INFO - Train accuracy: 1.0
2024-10-05 15:46:58,705 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:46:58,859 - root - INFO - Test accuracy: 1.0
2024-10-05 15:46:58,863 - root - INFO - Best val result: {'epoch': 133, 'loss': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:58,863 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 133}
2024-10-05 15:46:58,864 - root - INFO - Epoch: 134
2024-10-05 15:46:59,285 - root - INFO - Avg loss: tensor(0.0133, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24406123161315918
2024-10-05 15:46:59,446 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:46:59,600 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:46:59,753 - root - INFO - Test accuracy: 0.99
2024-10-05 15:46:59,756 - root - INFO - Best val result: {'epoch': 133, 'loss': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:46:59,757 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 134}
2024-10-05 15:46:59,760 - root - INFO - Epoch: 135
2024-10-05 15:47:00,179 - root - INFO - Avg loss: tensor(0.0119, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23551654815673828
2024-10-05 15:47:00,355 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:00,504 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:00,656 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:00,659 - root - INFO - Best val result: {'epoch': 133, 'loss': tensor(0.0268, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:00,660 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 135}
2024-10-05 15:47:00,663 - root - INFO - Epoch: 136
2024-10-05 15:47:01,087 - root - INFO - Avg loss: tensor(0.0140, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24158358573913574
2024-10-05 15:47:01,230 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:01,378 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:01,543 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:01,546 - root - INFO - Best val result: {'epoch': 136, 'loss': tensor(0.0140, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:01,547 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 136}
2024-10-05 15:47:01,547 - root - INFO - Epoch: 137
2024-10-05 15:47:01,967 - root - INFO - Avg loss: tensor(0.0151, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24109864234924316
2024-10-05 15:47:02,130 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:02,275 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:02,437 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:02,440 - root - INFO - Best val result: {'epoch': 137, 'loss': tensor(0.0151, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:02,441 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 137}
2024-10-05 15:47:02,441 - root - INFO - Epoch: 138
2024-10-05 15:47:02,879 - root - INFO - Avg loss: tensor(0.0179, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24276018142700195
2024-10-05 15:47:03,029 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:03,191 - root - INFO - Validation accuracy: 0.96
2024-10-05 15:47:03,340 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:03,344 - root - INFO - Best val result: {'epoch': 137, 'loss': tensor(0.0151, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:03,345 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 138}
2024-10-05 15:47:03,349 - root - INFO - Epoch: 139
2024-10-05 15:47:03,781 - root - INFO - Avg loss: tensor(0.0184, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24127531051635742
2024-10-05 15:47:03,932 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:04,094 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:04,234 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:04,236 - root - INFO - Best val result: {'epoch': 137, 'loss': tensor(0.0151, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:04,237 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 139}
2024-10-05 15:47:04,240 - root - INFO - Epoch: 140
2024-10-05 15:47:04,656 - root - INFO - Avg loss: tensor(0.0168, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23475027084350586
2024-10-05 15:47:04,819 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:04,970 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:05,124 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:05,127 - root - INFO - Best val result: {'epoch': 137, 'loss': tensor(0.0151, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:05,128 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 140}
2024-10-05 15:47:05,131 - root - INFO - Epoch: 141
2024-10-05 15:47:05,545 - root - INFO - Avg loss: tensor(0.0184, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2373199462890625
2024-10-05 15:47:05,706 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:05,887 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:06,039 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:06,042 - root - INFO - Best val result: {'epoch': 141, 'loss': tensor(0.0184, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:06,044 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 141}
2024-10-05 15:47:06,044 - root - INFO - Epoch: 142
2024-10-05 15:47:06,480 - root - INFO - Avg loss: tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23913884162902832
2024-10-05 15:47:06,675 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:06,826 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:06,997 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:07,000 - root - INFO - Best val result: {'epoch': 142, 'loss': tensor(0.0257, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:07,001 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 142}
2024-10-05 15:47:07,001 - root - INFO - Epoch: 143
2024-10-05 15:47:07,423 - root - INFO - Avg loss: tensor(0.0110, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.239274263381958
2024-10-05 15:47:07,583 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:07,730 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:07,903 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:07,906 - root - INFO - Best val result: {'epoch': 143, 'loss': tensor(0.0110, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:07,907 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 143}
2024-10-05 15:47:07,907 - root - INFO - Epoch: 144
2024-10-05 15:47:08,330 - root - INFO - Avg loss: tensor(0.0142, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2432849407196045
2024-10-05 15:47:08,492 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:08,664 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:08,827 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:08,830 - root - INFO - Best val result: {'epoch': 144, 'loss': tensor(0.0142, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:08,831 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 144}
2024-10-05 15:47:08,831 - root - INFO - Epoch: 145
2024-10-05 15:47:09,302 - root - INFO - Avg loss: tensor(0.0232, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2763631343841553
2024-10-05 15:47:09,454 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:09,609 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:09,766 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:09,769 - root - INFO - Best val result: {'epoch': 144, 'loss': tensor(0.0142, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:09,770 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 145}
2024-10-05 15:47:09,773 - root - INFO - Epoch: 146
2024-10-05 15:47:10,221 - root - INFO - Avg loss: tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.250962495803833
2024-10-05 15:47:10,394 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:10,553 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:10,702 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:10,705 - root - INFO - Best val result: {'epoch': 146, 'loss': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:10,706 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 146}
2024-10-05 15:47:10,706 - root - INFO - Epoch: 147
2024-10-05 15:47:11,122 - root - INFO - Avg loss: tensor(0.0170, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2313828468322754
2024-10-05 15:47:11,277 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:11,423 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:11,583 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:11,586 - root - INFO - Best val result: {'epoch': 146, 'loss': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:11,587 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 147}
2024-10-05 15:47:11,591 - root - INFO - Epoch: 148
2024-10-05 15:47:12,029 - root - INFO - Avg loss: tensor(0.0092, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23733854293823242
2024-10-05 15:47:12,215 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:12,384 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:47:12,534 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:12,537 - root - INFO - Best val result: {'epoch': 146, 'loss': tensor(0.0255, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:12,538 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 148}
2024-10-05 15:47:12,541 - root - INFO - Epoch: 149
2024-10-05 15:47:12,988 - root - INFO - Avg loss: tensor(0.0097, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23262405395507812
2024-10-05 15:47:13,139 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:13,286 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:13,447 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:13,450 - root - INFO - Best val result: {'epoch': 149, 'loss': tensor(0.0097, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:13,452 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 149}
2024-10-05 15:47:13,452 - root - INFO - Epoch: 150
2024-10-05 15:47:13,873 - root - INFO - Avg loss: tensor(0.0076, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23046183586120605
2024-10-05 15:47:14,028 - root - INFO - Train accuracy: 0.975
2024-10-05 15:47:14,178 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:14,336 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:14,339 - root - INFO - Best val result: {'epoch': 150, 'loss': tensor(0.0076, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:14,340 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 150}
2024-10-05 15:47:14,340 - root - INFO - Epoch: 151
2024-10-05 15:47:14,742 - root - INFO - Avg loss: tensor(0.0102, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23100757598876953
2024-10-05 15:47:14,897 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:47:15,036 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:15,196 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:15,199 - root - INFO - Best val result: {'epoch': 151, 'loss': tensor(0.0102, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:15,200 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 151}
2024-10-05 15:47:15,200 - root - INFO - Epoch: 152
2024-10-05 15:47:15,650 - root - INFO - Avg loss: tensor(0.0083, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2566051483154297
2024-10-05 15:47:15,829 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:15,967 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:16,128 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:16,131 - root - INFO - Best val result: {'epoch': 152, 'loss': tensor(0.0083, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:16,132 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 152}
2024-10-05 15:47:16,132 - root - INFO - Epoch: 153
2024-10-05 15:47:16,552 - root - INFO - Avg loss: tensor(0.0043, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23311400413513184
2024-10-05 15:47:16,711 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:16,852 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:17,017 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:17,020 - root - INFO - Best val result: {'epoch': 153, 'loss': tensor(0.0043, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:17,021 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 153}
2024-10-05 15:47:17,021 - root - INFO - Epoch: 154
2024-10-05 15:47:17,435 - root - INFO - Avg loss: tensor(0.0103, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23109865188598633
2024-10-05 15:47:17,589 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:17,743 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:17,929 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:17,932 - root - INFO - Best val result: {'epoch': 154, 'loss': tensor(0.0103, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:17,933 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 154}
2024-10-05 15:47:17,933 - root - INFO - Epoch: 155
2024-10-05 15:47:18,387 - root - INFO - Avg loss: tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2581779956817627
2024-10-05 15:47:18,538 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:18,686 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:18,842 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:18,845 - root - INFO - Best val result: {'epoch': 155, 'loss': tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:18,845 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 155}
2024-10-05 15:47:18,846 - root - INFO - Epoch: 156
2024-10-05 15:47:19,284 - root - INFO - Avg loss: tensor(0.0137, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24533534049987793
2024-10-05 15:47:19,453 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:19,617 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:19,782 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:19,785 - root - INFO - Best val result: {'epoch': 156, 'loss': tensor(0.0137, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:19,786 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 156}
2024-10-05 15:47:19,786 - root - INFO - Epoch: 157
2024-10-05 15:47:20,212 - root - INFO - Avg loss: tensor(0.0092, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2376689910888672
2024-10-05 15:47:20,378 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:20,523 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:20,690 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:20,693 - root - INFO - Best val result: {'epoch': 157, 'loss': tensor(0.0092, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:20,694 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 157}
2024-10-05 15:47:20,694 - root - INFO - Epoch: 158
2024-10-05 15:47:21,120 - root - INFO - Avg loss: tensor(0.0039, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23556852340698242
2024-10-05 15:47:21,271 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:21,420 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:21,577 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:21,580 - root - INFO - Best val result: {'epoch': 158, 'loss': tensor(0.0039, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:21,581 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 158}
2024-10-05 15:47:21,581 - root - INFO - Epoch: 159
2024-10-05 15:47:21,998 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23412251472473145
2024-10-05 15:47:22,154 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:22,315 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:22,462 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:22,466 - root - INFO - Best val result: {'epoch': 159, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:22,466 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 159}
2024-10-05 15:47:22,467 - root - INFO - Epoch: 160
2024-10-05 15:47:22,893 - root - INFO - Avg loss: tensor(0.0053, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24012517929077148
2024-10-05 15:47:23,048 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:23,198 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:23,365 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:23,368 - root - INFO - Best val result: {'epoch': 160, 'loss': tensor(0.0053, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:23,369 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 160}
2024-10-05 15:47:23,369 - root - INFO - Epoch: 161
2024-10-05 15:47:23,783 - root - INFO - Avg loss: tensor(0.0109, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23915529251098633
2024-10-05 15:47:23,935 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:24,089 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:24,247 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:24,251 - root - INFO - Best val result: {'epoch': 161, 'loss': tensor(0.0109, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:24,251 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 161}
2024-10-05 15:47:24,251 - root - INFO - Epoch: 162
2024-10-05 15:47:24,693 - root - INFO - Avg loss: tensor(0.0090, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2637929916381836
2024-10-05 15:47:24,849 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:25,012 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:25,168 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:25,171 - root - INFO - Best val result: {'epoch': 162, 'loss': tensor(0.0090, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:25,172 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 162}
2024-10-05 15:47:25,172 - root - INFO - Epoch: 163
2024-10-05 15:47:25,585 - root - INFO - Avg loss: tensor(0.0060, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22916340827941895
2024-10-05 15:47:25,743 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:25,926 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:26,076 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:26,079 - root - INFO - Best val result: {'epoch': 163, 'loss': tensor(0.0060, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:26,080 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 163}
2024-10-05 15:47:26,080 - root - INFO - Epoch: 164
2024-10-05 15:47:26,525 - root - INFO - Avg loss: tensor(0.0053, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2311413288116455
2024-10-05 15:47:26,683 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:26,852 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:27,011 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:27,014 - root - INFO - Best val result: {'epoch': 164, 'loss': tensor(0.0053, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:27,015 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 164}
2024-10-05 15:47:27,016 - root - INFO - Epoch: 165
2024-10-05 15:47:27,444 - root - INFO - Avg loss: tensor(0.0065, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23826050758361816
2024-10-05 15:47:27,599 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:27,753 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:47:27,906 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:27,909 - root - INFO - Best val result: {'epoch': 164, 'loss': tensor(0.0053, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:27,910 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 165}
2024-10-05 15:47:27,914 - root - INFO - Epoch: 166
2024-10-05 15:47:28,356 - root - INFO - Avg loss: tensor(0.0128, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25315046310424805
2024-10-05 15:47:28,508 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:28,659 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:28,821 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:28,824 - root - INFO - Best val result: {'epoch': 166, 'loss': tensor(0.0128, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:28,825 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 166}
2024-10-05 15:47:28,825 - root - INFO - Epoch: 167
2024-10-05 15:47:29,263 - root - INFO - Avg loss: tensor(0.0061, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25829410552978516
2024-10-05 15:47:29,445 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:29,592 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:29,766 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:29,769 - root - INFO - Best val result: {'epoch': 167, 'loss': tensor(0.0061, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:29,770 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 167}
2024-10-05 15:47:29,770 - root - INFO - Epoch: 168
2024-10-05 15:47:30,193 - root - INFO - Avg loss: tensor(0.0081, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23320960998535156
2024-10-05 15:47:30,358 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:30,507 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:30,670 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:30,673 - root - INFO - Best val result: {'epoch': 168, 'loss': tensor(0.0081, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:30,674 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 168}
2024-10-05 15:47:30,674 - root - INFO - Epoch: 169
2024-10-05 15:47:31,094 - root - INFO - Avg loss: tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2370004653930664
2024-10-05 15:47:31,252 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:31,406 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:31,554 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:31,557 - root - INFO - Best val result: {'epoch': 169, 'loss': tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:31,558 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 169}
2024-10-05 15:47:31,558 - root - INFO - Epoch: 170
2024-10-05 15:47:31,980 - root - INFO - Avg loss: tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2386484146118164
2024-10-05 15:47:32,132 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:32,281 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:32,435 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:32,438 - root - INFO - Best val result: {'epoch': 170, 'loss': tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:32,439 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 170}
2024-10-05 15:47:32,439 - root - INFO - Epoch: 171
2024-10-05 15:47:32,842 - root - INFO - Avg loss: tensor(0.0095, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23203086853027344
2024-10-05 15:47:32,988 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:33,150 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:33,310 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:33,312 - root - INFO - Best val result: {'epoch': 171, 'loss': tensor(0.0095, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:33,313 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 171}
2024-10-05 15:47:33,313 - root - INFO - Epoch: 172
2024-10-05 15:47:33,721 - root - INFO - Avg loss: tensor(0.0106, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23456835746765137
2024-10-05 15:47:33,878 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:34,034 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:34,185 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:34,188 - root - INFO - Best val result: {'epoch': 172, 'loss': tensor(0.0106, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:34,189 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 172}
2024-10-05 15:47:34,190 - root - INFO - Epoch: 173
2024-10-05 15:47:34,643 - root - INFO - Avg loss: tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2565789222717285
2024-10-05 15:47:34,814 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:34,985 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:35,143 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:35,146 - root - INFO - Best val result: {'epoch': 173, 'loss': tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:35,147 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 173}
2024-10-05 15:47:35,147 - root - INFO - Epoch: 174
2024-10-05 15:47:35,561 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2357187271118164
2024-10-05 15:47:35,720 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:35,868 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:36,034 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:36,037 - root - INFO - Best val result: {'epoch': 174, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:36,038 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 174}
2024-10-05 15:47:36,038 - root - INFO - Epoch: 175
2024-10-05 15:47:36,467 - root - INFO - Avg loss: tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24063754081726074
2024-10-05 15:47:36,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:36,780 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:36,940 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:36,943 - root - INFO - Best val result: {'epoch': 175, 'loss': tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:36,944 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 175}
2024-10-05 15:47:36,944 - root - INFO - Epoch: 176
2024-10-05 15:47:37,363 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2333676815032959
2024-10-05 15:47:37,547 - root - INFO - Train accuracy: 0.975
2024-10-05 15:47:37,686 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:37,847 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:37,850 - root - INFO - Best val result: {'epoch': 176, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:37,851 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 176}
2024-10-05 15:47:37,851 - root - INFO - Epoch: 177
2024-10-05 15:47:38,259 - root - INFO - Avg loss: tensor(0.0066, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23453974723815918
2024-10-05 15:47:38,446 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:38,588 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:38,749 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:38,753 - root - INFO - Best val result: {'epoch': 177, 'loss': tensor(0.0066, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:38,754 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 177}
2024-10-05 15:47:38,754 - root - INFO - Epoch: 178
2024-10-05 15:47:39,189 - root - INFO - Avg loss: tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23804593086242676
2024-10-05 15:47:39,349 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:39,506 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:39,661 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:39,664 - root - INFO - Best val result: {'epoch': 178, 'loss': tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:39,665 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 178}
2024-10-05 15:47:39,665 - root - INFO - Epoch: 179
2024-10-05 15:47:40,121 - root - INFO - Avg loss: tensor(0.0039, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26569485664367676
2024-10-05 15:47:40,292 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:40,442 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:40,602 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:40,605 - root - INFO - Best val result: {'epoch': 179, 'loss': tensor(0.0039, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:40,606 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 179}
2024-10-05 15:47:40,606 - root - INFO - Epoch: 180
2024-10-05 15:47:41,068 - root - INFO - Avg loss: tensor(0.0090, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2813558578491211
2024-10-05 15:47:41,222 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:41,367 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:41,512 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:41,515 - root - INFO - Best val result: {'epoch': 180, 'loss': tensor(0.0090, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:41,516 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 180}
2024-10-05 15:47:41,516 - root - INFO - Epoch: 181
2024-10-05 15:47:41,982 - root - INFO - Avg loss: tensor(0.0043, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2802879810333252
2024-10-05 15:47:42,165 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:42,313 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:42,477 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:42,480 - root - INFO - Best val result: {'epoch': 181, 'loss': tensor(0.0043, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:42,480 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 181}
2024-10-05 15:47:42,481 - root - INFO - Epoch: 182
2024-10-05 15:47:42,949 - root - INFO - Avg loss: tensor(0.0059, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2814357280731201
2024-10-05 15:47:43,137 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:43,284 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:43,441 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:43,444 - root - INFO - Best val result: {'epoch': 182, 'loss': tensor(0.0059, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:43,445 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 182}
2024-10-05 15:47:43,446 - root - INFO - Epoch: 183
2024-10-05 15:47:43,920 - root - INFO - Avg loss: tensor(0.0035, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28180503845214844
2024-10-05 15:47:44,088 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:44,260 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:44,420 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:44,423 - root - INFO - Best val result: {'epoch': 183, 'loss': tensor(0.0035, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:44,424 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 183}
2024-10-05 15:47:44,424 - root - INFO - Epoch: 184
2024-10-05 15:47:44,892 - root - INFO - Avg loss: tensor(0.0041, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2848782539367676
2024-10-05 15:47:45,046 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:45,191 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:45,352 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:45,355 - root - INFO - Best val result: {'epoch': 184, 'loss': tensor(0.0041, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:45,356 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 184}
2024-10-05 15:47:45,356 - root - INFO - Epoch: 185
2024-10-05 15:47:45,824 - root - INFO - Avg loss: tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2843000888824463
2024-10-05 15:47:45,977 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:47:46,128 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:46,287 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:46,290 - root - INFO - Best val result: {'epoch': 185, 'loss': tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:46,292 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 185}
2024-10-05 15:47:46,292 - root - INFO - Epoch: 186
2024-10-05 15:47:46,761 - root - INFO - Avg loss: tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2832334041595459
2024-10-05 15:47:46,922 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:47,080 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:47,254 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:47,257 - root - INFO - Best val result: {'epoch': 186, 'loss': tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:47,258 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 186}
2024-10-05 15:47:47,258 - root - INFO - Epoch: 187
2024-10-05 15:47:47,725 - root - INFO - Avg loss: tensor(0.0086, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28401660919189453
2024-10-05 15:47:47,885 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:48,052 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:48,210 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:48,213 - root - INFO - Best val result: {'epoch': 187, 'loss': tensor(0.0086, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:48,214 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 187}
2024-10-05 15:47:48,214 - root - INFO - Epoch: 188
2024-10-05 15:47:48,684 - root - INFO - Avg loss: tensor(0.0070, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.288501501083374
2024-10-05 15:47:48,849 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:49,000 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:49,160 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:49,163 - root - INFO - Best val result: {'epoch': 188, 'loss': tensor(0.0070, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:49,163 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 188}
2024-10-05 15:47:49,164 - root - INFO - Epoch: 189
2024-10-05 15:47:49,618 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28312110900878906
2024-10-05 15:47:49,778 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:49,943 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:50,106 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:50,109 - root - INFO - Best val result: {'epoch': 189, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:50,110 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 189}
2024-10-05 15:47:50,110 - root - INFO - Epoch: 190
2024-10-05 15:47:50,584 - root - INFO - Avg loss: tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28241968154907227
2024-10-05 15:47:50,730 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:50,879 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:47:51,023 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:51,026 - root - INFO - Best val result: {'epoch': 189, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:51,027 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 190}
2024-10-05 15:47:51,030 - root - INFO - Epoch: 191
2024-10-05 15:47:51,502 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28232264518737793
2024-10-05 15:47:51,667 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:51,817 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:51,969 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:51,973 - root - INFO - Best val result: {'epoch': 191, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:51,974 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 191}
2024-10-05 15:47:51,974 - root - INFO - Epoch: 192
2024-10-05 15:47:52,444 - root - INFO - Avg loss: tensor(0.0026, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.281796932220459
2024-10-05 15:47:52,604 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:52,755 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:52,905 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:52,908 - root - INFO - Best val result: {'epoch': 192, 'loss': tensor(0.0026, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:52,909 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 192}
2024-10-05 15:47:52,909 - root - INFO - Epoch: 193
2024-10-05 15:47:53,371 - root - INFO - Avg loss: tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28574204444885254
2024-10-05 15:47:53,533 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:53,683 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:53,840 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:53,843 - root - INFO - Best val result: {'epoch': 193, 'loss': tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:53,843 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 193}
2024-10-05 15:47:53,844 - root - INFO - Epoch: 194
2024-10-05 15:47:54,303 - root - INFO - Avg loss: tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28173828125
2024-10-05 15:47:54,460 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:54,610 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:54,770 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:54,773 - root - INFO - Best val result: {'epoch': 194, 'loss': tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:54,774 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 194}
2024-10-05 15:47:54,774 - root - INFO - Epoch: 195
2024-10-05 15:47:55,237 - root - INFO - Avg loss: tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2815678119659424
2024-10-05 15:47:55,393 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:55,537 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:55,688 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:55,691 - root - INFO - Best val result: {'epoch': 195, 'loss': tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:55,692 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 195}
2024-10-05 15:47:55,692 - root - INFO - Epoch: 196
2024-10-05 15:47:56,186 - root - INFO - Avg loss: tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28175950050354004
2024-10-05 15:47:56,342 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:56,480 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:56,638 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:56,642 - root - INFO - Best val result: {'epoch': 196, 'loss': tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:56,643 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 196}
2024-10-05 15:47:56,643 - root - INFO - Epoch: 197
2024-10-05 15:47:57,121 - root - INFO - Avg loss: tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2976987361907959
2024-10-05 15:47:57,294 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:57,440 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:57,608 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:57,610 - root - INFO - Best val result: {'epoch': 197, 'loss': tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:57,611 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 197}
2024-10-05 15:47:57,611 - root - INFO - Epoch: 198
2024-10-05 15:47:58,158 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.33254384994506836
2024-10-05 15:47:58,316 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:58,464 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:58,628 - root - INFO - Test accuracy: 0.99
2024-10-05 15:47:58,631 - root - INFO - Best val result: {'epoch': 198, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:58,632 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 198}
2024-10-05 15:47:58,632 - root - INFO - Epoch: 199
2024-10-05 15:47:59,087 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.282881498336792
2024-10-05 15:47:59,257 - root - INFO - Train accuracy: 1.0
2024-10-05 15:47:59,405 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:47:59,561 - root - INFO - Test accuracy: 1.0
2024-10-05 15:47:59,564 - root - INFO - Best val result: {'epoch': 199, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:47:59,565 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 199}
2024-10-05 15:47:59,565 - root - INFO - Epoch: 200
2024-10-05 15:48:00,027 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2705554962158203
2024-10-05 15:48:00,176 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:00,330 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:00,467 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:00,470 - root - INFO - Best val result: {'epoch': 200, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:00,471 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 200}
2024-10-05 15:48:00,471 - root - INFO - Epoch: 201
2024-10-05 15:48:00,883 - root - INFO - Avg loss: tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23663973808288574
2024-10-05 15:48:01,041 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:01,192 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:01,349 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:01,352 - root - INFO - Best val result: {'epoch': 201, 'loss': tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:01,353 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 201}
2024-10-05 15:48:01,353 - root - INFO - Epoch: 202
2024-10-05 15:48:01,768 - root - INFO - Avg loss: tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2324221134185791
2024-10-05 15:48:01,916 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:48:02,070 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:02,224 - root - INFO - Test accuracy: 0.99
2024-10-05 15:48:02,227 - root - INFO - Best val result: {'epoch': 202, 'loss': tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:02,229 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 202}
2024-10-05 15:48:02,229 - root - INFO - Epoch: 203
2024-10-05 15:48:02,645 - root - INFO - Avg loss: tensor(0.0087, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23297333717346191
2024-10-05 15:48:02,804 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:02,963 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:03,121 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:03,124 - root - INFO - Best val result: {'epoch': 203, 'loss': tensor(0.0087, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:03,125 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 203}
2024-10-05 15:48:03,125 - root - INFO - Epoch: 204
2024-10-05 15:48:03,543 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23190069198608398
2024-10-05 15:48:03,702 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:03,839 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:03,994 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:03,997 - root - INFO - Best val result: {'epoch': 204, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:03,998 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 204}
2024-10-05 15:48:03,998 - root - INFO - Epoch: 205
2024-10-05 15:48:04,423 - root - INFO - Avg loss: tensor(0.0027, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23396587371826172
2024-10-05 15:48:04,579 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:04,730 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:04,892 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:04,896 - root - INFO - Best val result: {'epoch': 205, 'loss': tensor(0.0027, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:04,897 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 205}
2024-10-05 15:48:04,897 - root - INFO - Epoch: 206
2024-10-05 15:48:05,331 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23828411102294922
2024-10-05 15:48:05,487 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:05,637 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:05,821 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:05,824 - root - INFO - Best val result: {'epoch': 206, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:05,825 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 206}
2024-10-05 15:48:05,825 - root - INFO - Epoch: 207
2024-10-05 15:48:06,244 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23211407661437988
2024-10-05 15:48:06,410 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:06,557 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:06,726 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:06,729 - root - INFO - Best val result: {'epoch': 207, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:06,730 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 207}
2024-10-05 15:48:06,730 - root - INFO - Epoch: 208
2024-10-05 15:48:07,176 - root - INFO - Avg loss: tensor(0.0049, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24888300895690918
2024-10-05 15:48:07,328 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:07,467 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:07,628 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:07,630 - root - INFO - Best val result: {'epoch': 208, 'loss': tensor(0.0049, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:07,631 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 208}
2024-10-05 15:48:07,631 - root - INFO - Epoch: 209
2024-10-05 15:48:08,108 - root - INFO - Avg loss: tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.272031307220459
2024-10-05 15:48:08,281 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:08,437 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:08,591 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:08,594 - root - INFO - Best val result: {'epoch': 209, 'loss': tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:08,595 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 209}
2024-10-05 15:48:08,595 - root - INFO - Epoch: 210
2024-10-05 15:48:09,026 - root - INFO - Avg loss: tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23929262161254883
2024-10-05 15:48:09,176 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:09,325 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:09,482 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:09,486 - root - INFO - Best val result: {'epoch': 210, 'loss': tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:09,487 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 210}
2024-10-05 15:48:09,487 - root - INFO - Epoch: 211
2024-10-05 15:48:09,903 - root - INFO - Avg loss: tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23447132110595703
2024-10-05 15:48:10,049 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:10,194 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:10,343 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:10,346 - root - INFO - Best val result: {'epoch': 211, 'loss': tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:10,347 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 211}
2024-10-05 15:48:10,347 - root - INFO - Epoch: 212
2024-10-05 15:48:10,765 - root - INFO - Avg loss: tensor(0.0070, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.230316162109375
2024-10-05 15:48:10,919 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:11,069 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:48:11,229 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:11,232 - root - INFO - Best val result: {'epoch': 211, 'loss': tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:11,232 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 212}
2024-10-05 15:48:11,235 - root - INFO - Epoch: 213
2024-10-05 15:48:11,648 - root - INFO - Avg loss: tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23341774940490723
2024-10-05 15:48:11,804 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:11,953 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:12,123 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:12,126 - root - INFO - Best val result: {'epoch': 213, 'loss': tensor(0.0038, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:12,127 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 213}
2024-10-05 15:48:12,127 - root - INFO - Epoch: 214
2024-10-05 15:48:12,542 - root - INFO - Avg loss: tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23168420791625977
2024-10-05 15:48:12,702 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:12,838 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:12,995 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:12,998 - root - INFO - Best val result: {'epoch': 214, 'loss': tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:12,999 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 214}
2024-10-05 15:48:12,999 - root - INFO - Epoch: 215
2024-10-05 15:48:13,437 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2465207576751709
2024-10-05 15:48:13,585 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:13,753 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:13,908 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:13,910 - root - INFO - Best val result: {'epoch': 215, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:13,911 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 215}
2024-10-05 15:48:13,911 - root - INFO - Epoch: 216
2024-10-05 15:48:14,335 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23171687126159668
2024-10-05 15:48:14,491 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:14,640 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:14,793 - root - INFO - Test accuracy: 0.99
2024-10-05 15:48:14,796 - root - INFO - Best val result: {'epoch': 216, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:14,797 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 216}
2024-10-05 15:48:14,797 - root - INFO - Epoch: 217
2024-10-05 15:48:15,223 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23802423477172852
2024-10-05 15:48:15,383 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:15,536 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:15,696 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:15,699 - root - INFO - Best val result: {'epoch': 217, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:15,700 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 217}
2024-10-05 15:48:15,700 - root - INFO - Epoch: 218
2024-10-05 15:48:16,140 - root - INFO - Avg loss: tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23441219329833984
2024-10-05 15:48:16,294 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:16,440 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:16,606 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:16,609 - root - INFO - Best val result: {'epoch': 218, 'loss': tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:16,609 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 218}
2024-10-05 15:48:16,610 - root - INFO - Epoch: 219
2024-10-05 15:48:17,026 - root - INFO - Avg loss: tensor(0.0057, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23146915435791016
2024-10-05 15:48:17,176 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:17,323 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:17,495 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:17,498 - root - INFO - Best val result: {'epoch': 219, 'loss': tensor(0.0057, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:17,499 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 219}
2024-10-05 15:48:17,499 - root - INFO - Epoch: 220
2024-10-05 15:48:17,916 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23355555534362793
2024-10-05 15:48:18,072 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:18,221 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:18,407 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:18,410 - root - INFO - Best val result: {'epoch': 220, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:18,411 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 220}
2024-10-05 15:48:18,411 - root - INFO - Epoch: 221
2024-10-05 15:48:18,842 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23712754249572754
2024-10-05 15:48:19,003 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:19,146 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:19,294 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:19,297 - root - INFO - Best val result: {'epoch': 221, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:19,298 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 221}
2024-10-05 15:48:19,298 - root - INFO - Epoch: 222
2024-10-05 15:48:19,710 - root - INFO - Avg loss: tensor(0.0058, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22972607612609863
2024-10-05 15:48:19,863 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:20,041 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:20,203 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:20,206 - root - INFO - Best val result: {'epoch': 222, 'loss': tensor(0.0058, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:20,207 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 222}
2024-10-05 15:48:20,207 - root - INFO - Epoch: 223
2024-10-05 15:48:20,629 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23112726211547852
2024-10-05 15:48:20,783 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:20,921 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:21,071 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:21,074 - root - INFO - Best val result: {'epoch': 223, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:21,075 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 223}
2024-10-05 15:48:21,075 - root - INFO - Epoch: 224
2024-10-05 15:48:21,589 - root - INFO - Avg loss: tensor(0.0100, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3088204860687256
2024-10-05 15:48:21,755 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:21,915 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:22,070 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:22,073 - root - INFO - Best val result: {'epoch': 224, 'loss': tensor(0.0100, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:22,074 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 224}
2024-10-05 15:48:22,074 - root - INFO - Epoch: 225
2024-10-05 15:48:22,565 - root - INFO - Avg loss: tensor(0.0044, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2906227111816406
2024-10-05 15:48:22,715 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:22,869 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:23,030 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:23,034 - root - INFO - Best val result: {'epoch': 225, 'loss': tensor(0.0044, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:23,035 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 225}
2024-10-05 15:48:23,035 - root - INFO - Epoch: 226
2024-10-05 15:48:23,470 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25914478302001953
2024-10-05 15:48:23,620 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:23,768 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:23,919 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:23,921 - root - INFO - Best val result: {'epoch': 226, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:23,922 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 226}
2024-10-05 15:48:23,922 - root - INFO - Epoch: 227
2024-10-05 15:48:24,355 - root - INFO - Avg loss: tensor(0.0047, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24294543266296387
2024-10-05 15:48:24,513 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:48:24,675 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:24,830 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:24,834 - root - INFO - Best val result: {'epoch': 227, 'loss': tensor(0.0047, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:24,835 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 227}
2024-10-05 15:48:24,835 - root - INFO - Epoch: 228
2024-10-05 15:48:25,265 - root - INFO - Avg loss: tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2391369342803955
2024-10-05 15:48:25,433 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:25,576 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:25,736 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:25,740 - root - INFO - Best val result: {'epoch': 228, 'loss': tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:25,742 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 228}
2024-10-05 15:48:25,742 - root - INFO - Epoch: 229
2024-10-05 15:48:26,187 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2540159225463867
2024-10-05 15:48:26,336 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:26,484 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:26,640 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:26,644 - root - INFO - Best val result: {'epoch': 229, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:26,644 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 229}
2024-10-05 15:48:26,644 - root - INFO - Epoch: 230
2024-10-05 15:48:27,076 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23759794235229492
2024-10-05 15:48:27,241 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:27,395 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:27,561 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:27,564 - root - INFO - Best val result: {'epoch': 230, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:27,564 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 230}
2024-10-05 15:48:27,565 - root - INFO - Epoch: 231
2024-10-05 15:48:27,991 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23439621925354004
2024-10-05 15:48:28,143 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:28,290 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:28,442 - root - INFO - Test accuracy: 0.99
2024-10-05 15:48:28,445 - root - INFO - Best val result: {'epoch': 231, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:28,446 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 231}
2024-10-05 15:48:28,446 - root - INFO - Epoch: 232
2024-10-05 15:48:28,865 - root - INFO - Avg loss: tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23532414436340332
2024-10-05 15:48:29,013 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:29,169 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:29,323 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:29,326 - root - INFO - Best val result: {'epoch': 232, 'loss': tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:29,327 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 232}
2024-10-05 15:48:29,327 - root - INFO - Epoch: 233
2024-10-05 15:48:29,747 - root - INFO - Avg loss: tensor(0.0086, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2338724136352539
2024-10-05 15:48:29,897 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:30,050 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:30,205 - root - INFO - Test accuracy: 0.99
2024-10-05 15:48:30,208 - root - INFO - Best val result: {'epoch': 233, 'loss': tensor(0.0086, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:30,208 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 233}
2024-10-05 15:48:30,209 - root - INFO - Epoch: 234
2024-10-05 15:48:30,679 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2778666019439697
2024-10-05 15:48:30,832 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:30,977 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:31,139 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:31,142 - root - INFO - Best val result: {'epoch': 234, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:31,143 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 234}
2024-10-05 15:48:31,143 - root - INFO - Epoch: 235
2024-10-05 15:48:31,551 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22879695892333984
2024-10-05 15:48:31,698 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:31,846 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:32,015 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:32,018 - root - INFO - Best val result: {'epoch': 235, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:32,019 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 235}
2024-10-05 15:48:32,019 - root - INFO - Epoch: 236
2024-10-05 15:48:32,451 - root - INFO - Avg loss: tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23615241050720215
2024-10-05 15:48:32,612 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:32,764 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:32,920 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:32,923 - root - INFO - Best val result: {'epoch': 236, 'loss': tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:32,924 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 236}
2024-10-05 15:48:32,924 - root - INFO - Epoch: 237
2024-10-05 15:48:33,356 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23610281944274902
2024-10-05 15:48:33,515 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:33,664 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:33,816 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:33,819 - root - INFO - Best val result: {'epoch': 237, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:33,820 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 237}
2024-10-05 15:48:33,820 - root - INFO - Epoch: 238
2024-10-05 15:48:34,266 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23334813117980957
2024-10-05 15:48:34,411 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:34,552 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:34,708 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:34,711 - root - INFO - Best val result: {'epoch': 238, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:34,712 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 238}
2024-10-05 15:48:34,712 - root - INFO - Epoch: 239
2024-10-05 15:48:35,136 - root - INFO - Avg loss: tensor(0.0036, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2340376377105713
2024-10-05 15:48:35,291 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:35,443 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:35,591 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:35,593 - root - INFO - Best val result: {'epoch': 239, 'loss': tensor(0.0036, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:35,594 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 239}
2024-10-05 15:48:35,594 - root - INFO - Epoch: 240
2024-10-05 15:48:36,015 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23294377326965332
2024-10-05 15:48:36,176 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:36,326 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:36,483 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:36,486 - root - INFO - Best val result: {'epoch': 240, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:36,488 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 240}
2024-10-05 15:48:36,488 - root - INFO - Epoch: 241
2024-10-05 15:48:36,915 - root - INFO - Avg loss: tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23439407348632812
2024-10-05 15:48:37,066 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:37,215 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:37,363 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:37,366 - root - INFO - Best val result: {'epoch': 241, 'loss': tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:37,366 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 241}
2024-10-05 15:48:37,367 - root - INFO - Epoch: 242
2024-10-05 15:48:37,816 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2511577606201172
2024-10-05 15:48:37,990 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:38,150 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:38,306 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:38,309 - root - INFO - Best val result: {'epoch': 242, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:38,310 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 242}
2024-10-05 15:48:38,310 - root - INFO - Epoch: 243
2024-10-05 15:48:38,774 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2593228816986084
2024-10-05 15:48:38,936 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:39,107 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:39,280 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:39,283 - root - INFO - Best val result: {'epoch': 243, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:39,284 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 243}
2024-10-05 15:48:39,284 - root - INFO - Epoch: 244
2024-10-05 15:48:39,701 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2325115203857422
2024-10-05 15:48:39,858 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:40,005 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:40,169 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:40,172 - root - INFO - Best val result: {'epoch': 244, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:40,173 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 244}
2024-10-05 15:48:40,173 - root - INFO - Epoch: 245
2024-10-05 15:48:40,583 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22982454299926758
2024-10-05 15:48:40,735 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:40,885 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:41,039 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:41,042 - root - INFO - Best val result: {'epoch': 245, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:41,042 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 245}
2024-10-05 15:48:41,043 - root - INFO - Epoch: 246
2024-10-05 15:48:41,450 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23167681694030762
2024-10-05 15:48:41,595 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:41,746 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:41,905 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:41,908 - root - INFO - Best val result: {'epoch': 246, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:41,909 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 246}
2024-10-05 15:48:41,909 - root - INFO - Epoch: 247
2024-10-05 15:48:42,348 - root - INFO - Avg loss: tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22987151145935059
2024-10-05 15:48:42,496 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:42,651 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:42,812 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:42,816 - root - INFO - Best val result: {'epoch': 247, 'loss': tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:42,817 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 247}
2024-10-05 15:48:42,817 - root - INFO - Epoch: 248
2024-10-05 15:48:43,258 - root - INFO - Avg loss: tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23080086708068848
2024-10-05 15:48:43,413 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:43,564 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:43,726 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:43,730 - root - INFO - Best val result: {'epoch': 248, 'loss': tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:43,730 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 248}
2024-10-05 15:48:43,731 - root - INFO - Epoch: 249
2024-10-05 15:48:44,153 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24395394325256348
2024-10-05 15:48:44,320 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:44,467 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:44,619 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:44,622 - root - INFO - Best val result: {'epoch': 249, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:44,624 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 249}
2024-10-05 15:48:44,624 - root - INFO - Epoch: 250
2024-10-05 15:48:45,045 - root - INFO - Avg loss: tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23625636100769043
2024-10-05 15:48:45,191 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:45,342 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:45,503 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:45,507 - root - INFO - Best val result: {'epoch': 250, 'loss': tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:45,507 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 250}
2024-10-05 15:48:45,507 - root - INFO - Epoch: 251
2024-10-05 15:48:45,927 - root - INFO - Avg loss: tensor(0.0046, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23212265968322754
2024-10-05 15:48:46,081 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:46,232 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:48:46,381 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:46,384 - root - INFO - Best val result: {'epoch': 250, 'loss': tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:46,385 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 251}
2024-10-05 15:48:46,388 - root - INFO - Epoch: 252
2024-10-05 15:48:46,802 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23079943656921387
2024-10-05 15:48:46,985 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:47,129 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:47,286 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:47,289 - root - INFO - Best val result: {'epoch': 252, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:47,290 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 252}
2024-10-05 15:48:47,290 - root - INFO - Epoch: 253
2024-10-05 15:48:47,717 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23976445198059082
2024-10-05 15:48:47,903 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:48,048 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:48,212 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:48,216 - root - INFO - Best val result: {'epoch': 253, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:48,216 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 253}
2024-10-05 15:48:48,217 - root - INFO - Epoch: 254
2024-10-05 15:48:48,640 - root - INFO - Avg loss: tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23156356811523438
2024-10-05 15:48:48,797 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:48,971 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:48:49,118 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:49,121 - root - INFO - Best val result: {'epoch': 253, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:49,122 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 254}
2024-10-05 15:48:49,125 - root - INFO - Epoch: 255
2024-10-05 15:48:49,553 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23821330070495605
2024-10-05 15:48:49,712 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:49,865 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:50,027 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:50,030 - root - INFO - Best val result: {'epoch': 255, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:50,031 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 255}
2024-10-05 15:48:50,031 - root - INFO - Epoch: 256
2024-10-05 15:48:50,458 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2365427017211914
2024-10-05 15:48:50,619 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:50,773 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:50,938 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:50,941 - root - INFO - Best val result: {'epoch': 256, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:50,941 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 256}
2024-10-05 15:48:50,941 - root - INFO - Epoch: 257
2024-10-05 15:48:51,419 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2568211555480957
2024-10-05 15:48:51,580 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:51,732 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:51,887 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:51,890 - root - INFO - Best val result: {'epoch': 257, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:51,891 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 257}
2024-10-05 15:48:51,891 - root - INFO - Epoch: 258
2024-10-05 15:48:52,361 - root - INFO - Avg loss: tensor(0.0049, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2573258876800537
2024-10-05 15:48:52,509 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:52,659 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:52,823 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:52,826 - root - INFO - Best val result: {'epoch': 258, 'loss': tensor(0.0049, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:52,827 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 258}
2024-10-05 15:48:52,827 - root - INFO - Epoch: 259
2024-10-05 15:48:53,266 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2384812831878662
2024-10-05 15:48:53,420 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:48:53,572 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:53,730 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:53,734 - root - INFO - Best val result: {'epoch': 259, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:53,735 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 259}
2024-10-05 15:48:53,735 - root - INFO - Epoch: 260
2024-10-05 15:48:54,154 - root - INFO - Avg loss: tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23314809799194336
2024-10-05 15:48:54,332 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:54,486 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:54,645 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:54,648 - root - INFO - Best val result: {'epoch': 260, 'loss': tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:54,650 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 260}
2024-10-05 15:48:54,650 - root - INFO - Epoch: 261
2024-10-05 15:48:55,080 - root - INFO - Avg loss: tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23933625221252441
2024-10-05 15:48:55,249 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:55,393 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:55,550 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:55,552 - root - INFO - Best val result: {'epoch': 261, 'loss': tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:55,553 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 261}
2024-10-05 15:48:55,553 - root - INFO - Epoch: 262
2024-10-05 15:48:55,971 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22986102104187012
2024-10-05 15:48:56,119 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:56,289 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:56,459 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:56,463 - root - INFO - Best val result: {'epoch': 262, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:56,465 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 262}
2024-10-05 15:48:56,465 - root - INFO - Epoch: 263
2024-10-05 15:48:56,960 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.29786062240600586
2024-10-05 15:48:57,131 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:57,275 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:57,430 - root - INFO - Test accuracy: 0.99
2024-10-05 15:48:57,433 - root - INFO - Best val result: {'epoch': 263, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:57,434 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 263}
2024-10-05 15:48:57,434 - root - INFO - Epoch: 264
2024-10-05 15:48:57,855 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23009657859802246
2024-10-05 15:48:58,013 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:58,164 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:58,321 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:58,324 - root - INFO - Best val result: {'epoch': 264, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:58,325 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 264}
2024-10-05 15:48:58,325 - root - INFO - Epoch: 265
2024-10-05 15:48:58,751 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23662495613098145
2024-10-05 15:48:58,922 - root - INFO - Train accuracy: 1.0
2024-10-05 15:48:59,092 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:48:59,249 - root - INFO - Test accuracy: 1.0
2024-10-05 15:48:59,253 - root - INFO - Best val result: {'epoch': 265, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:48:59,254 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 265}
2024-10-05 15:48:59,254 - root - INFO - Epoch: 266
2024-10-05 15:48:59,702 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24179911613464355
2024-10-05 15:48:59,859 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:00,006 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:00,172 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:00,175 - root - INFO - Best val result: {'epoch': 266, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:00,176 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 266}
2024-10-05 15:49:00,176 - root - INFO - Epoch: 267
2024-10-05 15:49:00,633 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26179075241088867
2024-10-05 15:49:00,797 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:00,951 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:01,110 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:01,112 - root - INFO - Best val result: {'epoch': 267, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:01,113 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 267}
2024-10-05 15:49:01,113 - root - INFO - Epoch: 268
2024-10-05 15:49:01,525 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2290501594543457
2024-10-05 15:49:01,683 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:01,838 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:01,994 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:01,997 - root - INFO - Best val result: {'epoch': 268, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:01,998 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 268}
2024-10-05 15:49:01,998 - root - INFO - Epoch: 269
2024-10-05 15:49:02,413 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22977948188781738
2024-10-05 15:49:02,572 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:02,722 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:02,883 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:02,887 - root - INFO - Best val result: {'epoch': 269, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:02,888 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 269}
2024-10-05 15:49:02,888 - root - INFO - Epoch: 270
2024-10-05 15:49:03,305 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2365100383758545
2024-10-05 15:49:03,467 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:03,614 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:03,767 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:03,770 - root - INFO - Best val result: {'epoch': 270, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:03,771 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 270}
2024-10-05 15:49:03,771 - root - INFO - Epoch: 271
2024-10-05 15:49:04,191 - root - INFO - Avg loss: tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23531532287597656
2024-10-05 15:49:04,350 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:04,492 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:04,648 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:04,652 - root - INFO - Best val result: {'epoch': 271, 'loss': tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:04,652 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 271}
2024-10-05 15:49:04,653 - root - INFO - Epoch: 272
2024-10-05 15:49:05,064 - root - INFO - Avg loss: tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22911572456359863
2024-10-05 15:49:05,207 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:05,355 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:05,520 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:05,523 - root - INFO - Best val result: {'epoch': 272, 'loss': tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:05,524 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 272}
2024-10-05 15:49:05,524 - root - INFO - Epoch: 273
2024-10-05 15:49:05,943 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23716020584106445
2024-10-05 15:49:06,104 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:06,259 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:06,423 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:06,427 - root - INFO - Best val result: {'epoch': 273, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:06,428 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 273}
2024-10-05 15:49:06,428 - root - INFO - Epoch: 274
2024-10-05 15:49:06,857 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2382669448852539
2024-10-05 15:49:07,014 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:07,168 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:07,328 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:07,331 - root - INFO - Best val result: {'epoch': 274, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:07,332 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 274}
2024-10-05 15:49:07,332 - root - INFO - Epoch: 275
2024-10-05 15:49:07,764 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23991870880126953
2024-10-05 15:49:07,931 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:08,081 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:08,242 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:08,245 - root - INFO - Best val result: {'epoch': 275, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:08,246 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 275}
2024-10-05 15:49:08,246 - root - INFO - Epoch: 276
2024-10-05 15:49:08,675 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2386171817779541
2024-10-05 15:49:08,834 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:08,987 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:09,145 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:09,148 - root - INFO - Best val result: {'epoch': 276, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:09,149 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 276}
2024-10-05 15:49:09,149 - root - INFO - Epoch: 277
2024-10-05 15:49:09,571 - root - INFO - Avg loss: tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23311090469360352
2024-10-05 15:49:09,727 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:09,868 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:10,023 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:10,026 - root - INFO - Best val result: {'epoch': 277, 'loss': tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:10,027 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 277}
2024-10-05 15:49:10,028 - root - INFO - Epoch: 278
2024-10-05 15:49:10,452 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23926401138305664
2024-10-05 15:49:10,605 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:10,747 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:10,901 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:10,904 - root - INFO - Best val result: {'epoch': 278, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:10,905 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 278}
2024-10-05 15:49:10,905 - root - INFO - Epoch: 279
2024-10-05 15:49:11,324 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23283624649047852
2024-10-05 15:49:11,471 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:11,622 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:11,784 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:11,787 - root - INFO - Best val result: {'epoch': 279, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:11,788 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 279}
2024-10-05 15:49:11,788 - root - INFO - Epoch: 280
2024-10-05 15:49:12,209 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23347973823547363
2024-10-05 15:49:12,362 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:12,502 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:12,649 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:12,653 - root - INFO - Best val result: {'epoch': 280, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:12,654 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 280}
2024-10-05 15:49:12,654 - root - INFO - Epoch: 281
2024-10-05 15:49:13,088 - root - INFO - Avg loss: tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24520564079284668
2024-10-05 15:49:13,262 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:13,417 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:13,583 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:13,587 - root - INFO - Best val result: {'epoch': 281, 'loss': tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:13,588 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 281}
2024-10-05 15:49:13,588 - root - INFO - Epoch: 282
2024-10-05 15:49:14,045 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25934743881225586
2024-10-05 15:49:14,213 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:14,379 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:14,541 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:14,544 - root - INFO - Best val result: {'epoch': 282, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:14,545 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 282}
2024-10-05 15:49:14,546 - root - INFO - Epoch: 283
2024-10-05 15:49:15,031 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2805287837982178
2024-10-05 15:49:15,187 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:15,334 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:15,492 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:15,496 - root - INFO - Best val result: {'epoch': 283, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:15,496 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 283}
2024-10-05 15:49:15,497 - root - INFO - Epoch: 284
2024-10-05 15:49:15,956 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27188849449157715
2024-10-05 15:49:16,135 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:16,289 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:16,446 - root - INFO - Test accuracy: 0.99
2024-10-05 15:49:16,449 - root - INFO - Best val result: {'epoch': 284, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:16,449 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 284}
2024-10-05 15:49:16,450 - root - INFO - Epoch: 285
2024-10-05 15:49:16,876 - root - INFO - Avg loss: tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23662376403808594
2024-10-05 15:49:17,034 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:17,203 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:17,356 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:17,359 - root - INFO - Best val result: {'epoch': 285, 'loss': tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:17,359 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 285}
2024-10-05 15:49:17,360 - root - INFO - Epoch: 286
2024-10-05 15:49:17,786 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2381443977355957
2024-10-05 15:49:17,946 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:18,098 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:18,258 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:18,260 - root - INFO - Best val result: {'epoch': 286, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:18,261 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 286}
2024-10-05 15:49:18,261 - root - INFO - Epoch: 287
2024-10-05 15:49:18,771 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.30791544914245605
2024-10-05 15:49:18,957 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:19,111 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:19,298 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:19,301 - root - INFO - Best val result: {'epoch': 287, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:19,301 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 287}
2024-10-05 15:49:19,301 - root - INFO - Epoch: 288
2024-10-05 15:49:19,788 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2894165515899658
2024-10-05 15:49:19,935 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:20,084 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:20,243 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:20,247 - root - INFO - Best val result: {'epoch': 288, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:20,248 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 288}
2024-10-05 15:49:20,248 - root - INFO - Epoch: 289
2024-10-05 15:49:20,732 - root - INFO - Avg loss: tensor(0.0088, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.269970178604126
2024-10-05 15:49:20,907 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:21,075 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:21,241 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:21,245 - root - INFO - Best val result: {'epoch': 289, 'loss': tensor(0.0088, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:21,245 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 289}
2024-10-05 15:49:21,246 - root - INFO - Epoch: 290
2024-10-05 15:49:21,780 - root - INFO - Avg loss: tensor(0.0092, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.34164929389953613
2024-10-05 15:49:21,945 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:22,098 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:22,264 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:22,267 - root - INFO - Best val result: {'epoch': 290, 'loss': tensor(0.0092, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:22,269 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 290}
2024-10-05 15:49:22,269 - root - INFO - Epoch: 291
2024-10-05 15:49:22,720 - root - INFO - Avg loss: tensor(0.0059, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2606468200683594
2024-10-05 15:49:22,906 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:23,070 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:23,227 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:23,230 - root - INFO - Best val result: {'epoch': 291, 'loss': tensor(0.0059, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:23,231 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 291}
2024-10-05 15:49:23,231 - root - INFO - Epoch: 292
2024-10-05 15:49:23,671 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25356221199035645
2024-10-05 15:49:23,826 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:23,979 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:24,153 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:24,156 - root - INFO - Best val result: {'epoch': 292, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:24,157 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 292}
2024-10-05 15:49:24,157 - root - INFO - Epoch: 293
2024-10-05 15:49:24,605 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25785088539123535
2024-10-05 15:49:24,753 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:24,908 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:25,067 - root - INFO - Test accuracy: 0.98
2024-10-05 15:49:25,071 - root - INFO - Best val result: {'epoch': 293, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:25,071 - root - INFO - Test result: {'prec': np.float64(0.9803921568627452), 'recall': np.float64(0.9803921568627452), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 293}
2024-10-05 15:49:25,072 - root - INFO - Epoch: 294
2024-10-05 15:49:25,521 - root - INFO - Avg loss: tensor(0.0088, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2577934265136719
2024-10-05 15:49:25,683 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:25,834 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:26,022 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:26,025 - root - INFO - Best val result: {'epoch': 294, 'loss': tensor(0.0088, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:26,026 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 294}
2024-10-05 15:49:26,026 - root - INFO - Epoch: 295
2024-10-05 15:49:26,431 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2326364517211914
2024-10-05 15:49:26,586 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:26,739 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:26,894 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:26,897 - root - INFO - Best val result: {'epoch': 295, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:26,898 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 295}
2024-10-05 15:49:26,899 - root - INFO - Epoch: 296
2024-10-05 15:49:27,313 - root - INFO - Avg loss: tensor(0.0099, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23322749137878418
2024-10-05 15:49:27,476 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:27,624 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:27,788 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:27,791 - root - INFO - Best val result: {'epoch': 296, 'loss': tensor(0.0099, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:27,792 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 296}
2024-10-05 15:49:27,792 - root - INFO - Epoch: 297
2024-10-05 15:49:28,204 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22873139381408691
2024-10-05 15:49:28,359 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:28,510 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:28,666 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:28,670 - root - INFO - Best val result: {'epoch': 297, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:28,671 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 297}
2024-10-05 15:49:28,671 - root - INFO - Epoch: 298
2024-10-05 15:49:29,091 - root - INFO - Avg loss: tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2295818328857422
2024-10-05 15:49:29,244 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:29,392 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:29,537 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:29,540 - root - INFO - Best val result: {'epoch': 298, 'loss': tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:29,541 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 298}
2024-10-05 15:49:29,541 - root - INFO - Epoch: 299
2024-10-05 15:49:29,957 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23106598854064941
2024-10-05 15:49:30,139 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:30,282 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:30,450 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:30,453 - root - INFO - Best val result: {'epoch': 299, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:30,454 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 299}
2024-10-05 15:49:30,455 - root - INFO - Epoch: 300
2024-10-05 15:49:30,864 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23471689224243164
2024-10-05 15:49:31,018 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:31,166 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:31,324 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:31,328 - root - INFO - Best val result: {'epoch': 300, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:31,329 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 300}
2024-10-05 15:49:31,329 - root - INFO - Epoch: 301
2024-10-05 15:49:31,743 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23433971405029297
2024-10-05 15:49:31,895 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:32,047 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:32,208 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:32,211 - root - INFO - Best val result: {'epoch': 301, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:32,212 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 301}
2024-10-05 15:49:32,212 - root - INFO - Epoch: 302
2024-10-05 15:49:32,631 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23955368995666504
2024-10-05 15:49:32,782 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:32,929 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:33,079 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:33,082 - root - INFO - Best val result: {'epoch': 302, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:33,083 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 302}
2024-10-05 15:49:33,083 - root - INFO - Epoch: 303
2024-10-05 15:49:33,517 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24200916290283203
2024-10-05 15:49:33,704 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:33,880 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:34,044 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:34,047 - root - INFO - Best val result: {'epoch': 303, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:34,048 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 303}
2024-10-05 15:49:34,048 - root - INFO - Epoch: 304
2024-10-05 15:49:34,518 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2699141502380371
2024-10-05 15:49:34,685 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:34,840 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:35,013 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:35,016 - root - INFO - Best val result: {'epoch': 304, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:35,016 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 304}
2024-10-05 15:49:35,017 - root - INFO - Epoch: 305
2024-10-05 15:49:35,446 - root - INFO - Avg loss: tensor(0.0067, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23652386665344238
2024-10-05 15:49:35,607 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:35,772 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:35,958 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:35,961 - root - INFO - Best val result: {'epoch': 305, 'loss': tensor(0.0067, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:35,962 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 305}
2024-10-05 15:49:35,963 - root - INFO - Epoch: 306
2024-10-05 15:49:36,395 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24202656745910645
2024-10-05 15:49:36,557 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:49:36,708 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:36,872 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:36,875 - root - INFO - Best val result: {'epoch': 306, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:36,876 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 306}
2024-10-05 15:49:36,876 - root - INFO - Epoch: 307
2024-10-05 15:49:37,288 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2331383228302002
2024-10-05 15:49:37,437 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:37,585 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:37,740 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:37,743 - root - INFO - Best val result: {'epoch': 307, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:37,744 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 307}
2024-10-05 15:49:37,744 - root - INFO - Epoch: 308
2024-10-05 15:49:38,152 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23397159576416016
2024-10-05 15:49:38,309 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:38,456 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:38,614 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:38,618 - root - INFO - Best val result: {'epoch': 308, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:38,619 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 308}
2024-10-05 15:49:38,619 - root - INFO - Epoch: 309
2024-10-05 15:49:39,038 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23270869255065918
2024-10-05 15:49:39,211 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:39,361 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:49:39,513 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:39,516 - root - INFO - Best val result: {'epoch': 308, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:39,517 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 309}
2024-10-05 15:49:39,520 - root - INFO - Epoch: 310
2024-10-05 15:49:39,945 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23247623443603516
2024-10-05 15:49:40,091 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:40,244 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:40,418 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:40,421 - root - INFO - Best val result: {'epoch': 310, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:40,422 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 310}
2024-10-05 15:49:40,422 - root - INFO - Epoch: 311
2024-10-05 15:49:40,839 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23480796813964844
2024-10-05 15:49:40,998 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:41,165 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:41,327 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:41,330 - root - INFO - Best val result: {'epoch': 311, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:41,331 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 311}
2024-10-05 15:49:41,331 - root - INFO - Epoch: 312
2024-10-05 15:49:41,739 - root - INFO - Avg loss: tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23166728019714355
2024-10-05 15:49:41,891 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:49:42,067 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:42,228 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:42,232 - root - INFO - Best val result: {'epoch': 312, 'loss': tensor(0.0021, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:42,233 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 312}
2024-10-05 15:49:42,233 - root - INFO - Epoch: 313
2024-10-05 15:49:42,695 - root - INFO - Avg loss: tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24270129203796387
2024-10-05 15:49:42,882 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:43,046 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:43,199 - root - INFO - Test accuracy: 0.99
2024-10-05 15:49:43,203 - root - INFO - Best val result: {'epoch': 313, 'loss': tensor(0.0048, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:43,204 - root - INFO - Test result: {'prec': np.float64(0.9903846153846154), 'recall': np.float64(0.9897959183673469), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 313}
2024-10-05 15:49:43,204 - root - INFO - Epoch: 314
2024-10-05 15:49:43,644 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2468719482421875
2024-10-05 15:49:43,804 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:43,952 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:44,138 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:44,140 - root - INFO - Best val result: {'epoch': 314, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:44,141 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 314}
2024-10-05 15:49:44,141 - root - INFO - Epoch: 315
2024-10-05 15:49:44,557 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23270487785339355
2024-10-05 15:49:44,727 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:44,876 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:45,033 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:45,036 - root - INFO - Best val result: {'epoch': 315, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:45,037 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 315}
2024-10-05 15:49:45,037 - root - INFO - Epoch: 316
2024-10-05 15:49:45,451 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23205924034118652
2024-10-05 15:49:45,603 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:45,744 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:45,889 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:45,892 - root - INFO - Best val result: {'epoch': 316, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:45,892 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 316}
2024-10-05 15:49:45,893 - root - INFO - Epoch: 317
2024-10-05 15:49:46,313 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23333525657653809
2024-10-05 15:49:46,478 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:46,630 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:46,800 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:46,803 - root - INFO - Best val result: {'epoch': 317, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:46,804 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 317}
2024-10-05 15:49:46,804 - root - INFO - Epoch: 318
2024-10-05 15:49:47,216 - root - INFO - Avg loss: tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23353290557861328
2024-10-05 15:49:47,370 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:47,526 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:47,684 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:47,687 - root - INFO - Best val result: {'epoch': 318, 'loss': tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:47,688 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 318}
2024-10-05 15:49:47,688 - root - INFO - Epoch: 319
2024-10-05 15:49:48,109 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24019169807434082
2024-10-05 15:49:48,266 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:48,420 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:48,564 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:48,566 - root - INFO - Best val result: {'epoch': 319, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:48,567 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 319}
2024-10-05 15:49:48,567 - root - INFO - Epoch: 320
2024-10-05 15:49:48,996 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23470282554626465
2024-10-05 15:49:49,152 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:49,330 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:49,493 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:49,495 - root - INFO - Best val result: {'epoch': 320, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:49,496 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 320}
2024-10-05 15:49:49,496 - root - INFO - Epoch: 321
2024-10-05 15:49:49,980 - root - INFO - Avg loss: tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2492237091064453
2024-10-05 15:49:50,139 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:50,290 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:50,448 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:50,452 - root - INFO - Best val result: {'epoch': 321, 'loss': tensor(0.0054, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:50,453 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 321}
2024-10-05 15:49:50,453 - root - INFO - Epoch: 322
2024-10-05 15:49:50,906 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23293113708496094
2024-10-05 15:49:51,062 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:49:51,216 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:51,377 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:51,380 - root - INFO - Best val result: {'epoch': 322, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:51,381 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 322}
2024-10-05 15:49:51,381 - root - INFO - Epoch: 323
2024-10-05 15:49:51,798 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330641746520996
2024-10-05 15:49:51,951 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:52,104 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:52,266 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:52,268 - root - INFO - Best val result: {'epoch': 323, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:52,269 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 323}
2024-10-05 15:49:52,269 - root - INFO - Epoch: 324
2024-10-05 15:49:52,689 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23458123207092285
2024-10-05 15:49:52,846 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:52,991 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:53,162 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:53,166 - root - INFO - Best val result: {'epoch': 324, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:53,167 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 324}
2024-10-05 15:49:53,167 - root - INFO - Epoch: 325
2024-10-05 15:49:53,572 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22997021675109863
2024-10-05 15:49:53,727 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:53,862 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:54,030 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:54,033 - root - INFO - Best val result: {'epoch': 325, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:54,034 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 325}
2024-10-05 15:49:54,034 - root - INFO - Epoch: 326
2024-10-05 15:49:54,467 - root - INFO - Avg loss: tensor(0.0096, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24634122848510742
2024-10-05 15:49:54,624 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:54,775 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:54,951 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:54,955 - root - INFO - Best val result: {'epoch': 326, 'loss': tensor(0.0096, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:54,956 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 326}
2024-10-05 15:49:54,956 - root - INFO - Epoch: 327
2024-10-05 15:49:55,377 - root - INFO - Avg loss: tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23325395584106445
2024-10-05 15:49:55,524 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:55,704 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:55,852 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:55,855 - root - INFO - Best val result: {'epoch': 327, 'loss': tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:55,856 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 327}
2024-10-05 15:49:55,856 - root - INFO - Epoch: 328
2024-10-05 15:49:56,268 - root - INFO - Avg loss: tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23042654991149902
2024-10-05 15:49:56,434 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:56,581 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:56,738 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:56,741 - root - INFO - Best val result: {'epoch': 328, 'loss': tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:56,742 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 328}
2024-10-05 15:49:56,742 - root - INFO - Epoch: 329
2024-10-05 15:49:57,154 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2329404354095459
2024-10-05 15:49:57,307 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:57,456 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:57,620 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:57,624 - root - INFO - Best val result: {'epoch': 329, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:57,624 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 329}
2024-10-05 15:49:57,625 - root - INFO - Epoch: 330
2024-10-05 15:49:58,045 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23459863662719727
2024-10-05 15:49:58,216 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:58,367 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:58,522 - root - INFO - Test accuracy: 1.0
2024-10-05 15:49:58,526 - root - INFO - Best val result: {'epoch': 330, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:58,527 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 330}
2024-10-05 15:49:58,527 - root - INFO - Epoch: 331
2024-10-05 15:49:58,931 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23020052909851074
2024-10-05 15:49:59,086 - root - INFO - Train accuracy: 1.0
2024-10-05 15:49:59,240 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:49:59,398 - root - INFO - Test accuracy: 0.99
2024-10-05 15:49:59,401 - root - INFO - Best val result: {'epoch': 331, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:49:59,402 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 331}
2024-10-05 15:49:59,402 - root - INFO - Epoch: 332
2024-10-05 15:49:59,822 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2320547103881836
2024-10-05 15:49:59,979 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:00,155 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:00,304 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:00,307 - root - INFO - Best val result: {'epoch': 332, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:00,308 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 332}
2024-10-05 15:50:00,308 - root - INFO - Epoch: 333
2024-10-05 15:50:00,737 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2337360382080078
2024-10-05 15:50:00,884 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:01,034 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:01,181 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:01,184 - root - INFO - Best val result: {'epoch': 333, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:01,185 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 333}
2024-10-05 15:50:01,185 - root - INFO - Epoch: 334
2024-10-05 15:50:01,604 - root - INFO - Avg loss: tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2345287799835205
2024-10-05 15:50:01,753 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:01,904 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:02,067 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:02,070 - root - INFO - Best val result: {'epoch': 334, 'loss': tensor(0.0024, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:02,071 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 334}
2024-10-05 15:50:02,071 - root - INFO - Epoch: 335
2024-10-05 15:50:02,504 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23967623710632324
2024-10-05 15:50:02,658 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:02,812 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:02,955 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:02,958 - root - INFO - Best val result: {'epoch': 335, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:02,959 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 335}
2024-10-05 15:50:02,959 - root - INFO - Epoch: 336
2024-10-05 15:50:03,372 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23311614990234375
2024-10-05 15:50:03,518 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:03,666 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:03,826 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:03,829 - root - INFO - Best val result: {'epoch': 336, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:03,830 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 336}
2024-10-05 15:50:03,830 - root - INFO - Epoch: 337
2024-10-05 15:50:04,258 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23518133163452148
2024-10-05 15:50:04,420 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:04,568 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:04,727 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:04,730 - root - INFO - Best val result: {'epoch': 337, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:04,731 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 337}
2024-10-05 15:50:04,731 - root - INFO - Epoch: 338
2024-10-05 15:50:05,149 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2352766990661621
2024-10-05 15:50:05,312 - root - INFO - Train accuracy: 0.9666666666666667
2024-10-05 15:50:05,463 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:50:05,604 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:05,607 - root - INFO - Best val result: {'epoch': 337, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:05,608 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 338}
2024-10-05 15:50:05,611 - root - INFO - Epoch: 339
2024-10-05 15:50:06,019 - root - INFO - Avg loss: tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330613136291504
2024-10-05 15:50:06,174 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:06,342 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:06,498 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:06,502 - root - INFO - Best val result: {'epoch': 339, 'loss': tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:06,503 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 339}
2024-10-05 15:50:06,503 - root - INFO - Epoch: 340
2024-10-05 15:50:06,911 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2331559658050537
2024-10-05 15:50:07,075 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:07,224 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:07,388 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:07,391 - root - INFO - Best val result: {'epoch': 340, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:07,391 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 340}
2024-10-05 15:50:07,392 - root - INFO - Epoch: 341
2024-10-05 15:50:07,799 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23218727111816406
2024-10-05 15:50:07,941 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:50:08,094 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:08,249 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:08,252 - root - INFO - Best val result: {'epoch': 341, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:08,252 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 341}
2024-10-05 15:50:08,252 - root - INFO - Epoch: 342
2024-10-05 15:50:08,671 - root - INFO - Avg loss: tensor(0.0061, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23250913619995117
2024-10-05 15:50:08,832 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:08,984 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:09,136 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:09,138 - root - INFO - Best val result: {'epoch': 342, 'loss': tensor(0.0061, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:09,139 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 342}
2024-10-05 15:50:09,139 - root - INFO - Epoch: 343
2024-10-05 15:50:09,550 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23292016983032227
2024-10-05 15:50:09,722 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:09,878 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:10,045 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:10,048 - root - INFO - Best val result: {'epoch': 343, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:10,048 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 343}
2024-10-05 15:50:10,049 - root - INFO - Epoch: 344
2024-10-05 15:50:10,470 - root - INFO - Avg loss: tensor(0.0045, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23212862014770508
2024-10-05 15:50:10,645 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:50:10,802 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:10,959 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:10,962 - root - INFO - Best val result: {'epoch': 344, 'loss': tensor(0.0045, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:10,963 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 344}
2024-10-05 15:50:10,963 - root - INFO - Epoch: 345
2024-10-05 15:50:11,425 - root - INFO - Avg loss: tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2874164581298828
2024-10-05 15:50:11,575 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:11,715 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:11,875 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:11,878 - root - INFO - Best val result: {'epoch': 345, 'loss': tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:11,879 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 345}
2024-10-05 15:50:11,879 - root - INFO - Epoch: 346
2024-10-05 15:50:12,315 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26114583015441895
2024-10-05 15:50:12,474 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:12,624 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:12,784 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:12,788 - root - INFO - Best val result: {'epoch': 346, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:12,788 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 346}
2024-10-05 15:50:12,788 - root - INFO - Epoch: 347
2024-10-05 15:50:13,209 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2377784252166748
2024-10-05 15:50:13,369 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:13,510 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:13,660 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:13,663 - root - INFO - Best val result: {'epoch': 347, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:13,664 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 347}
2024-10-05 15:50:13,664 - root - INFO - Epoch: 348
2024-10-05 15:50:14,122 - root - INFO - Avg loss: tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26199865341186523
2024-10-05 15:50:14,285 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:14,430 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:14,585 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:14,589 - root - INFO - Best val result: {'epoch': 348, 'loss': tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:14,590 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 348}
2024-10-05 15:50:14,590 - root - INFO - Epoch: 349
2024-10-05 15:50:15,070 - root - INFO - Avg loss: tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28275227546691895
2024-10-05 15:50:15,221 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:15,373 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:15,532 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:15,535 - root - INFO - Best val result: {'epoch': 349, 'loss': tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:15,536 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 349}
2024-10-05 15:50:15,536 - root - INFO - Epoch: 350
2024-10-05 15:50:15,955 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23363447189331055
2024-10-05 15:50:16,137 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:16,299 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:16,485 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:16,489 - root - INFO - Best val result: {'epoch': 350, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:16,490 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 350}
2024-10-05 15:50:16,490 - root - INFO - Epoch: 351
2024-10-05 15:50:16,907 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2351057529449463
2024-10-05 15:50:17,062 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:17,205 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:17,362 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:17,365 - root - INFO - Best val result: {'epoch': 351, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:17,366 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 351}
2024-10-05 15:50:17,366 - root - INFO - Epoch: 352
2024-10-05 15:50:17,793 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2342057228088379
2024-10-05 15:50:17,951 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:18,102 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:18,264 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:18,267 - root - INFO - Best val result: {'epoch': 352, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:18,269 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 352}
2024-10-05 15:50:18,269 - root - INFO - Epoch: 353
2024-10-05 15:50:18,702 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2380537986755371
2024-10-05 15:50:18,856 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:19,000 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:19,163 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:19,167 - root - INFO - Best val result: {'epoch': 353, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:19,168 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 353}
2024-10-05 15:50:19,168 - root - INFO - Epoch: 354
2024-10-05 15:50:19,579 - root - INFO - Avg loss: tensor(5.9401e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23398160934448242
2024-10-05 15:50:19,734 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:19,888 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:20,054 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:20,058 - root - INFO - Best val result: {'epoch': 354, 'loss': tensor(5.9401e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:20,058 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 354}
2024-10-05 15:50:20,059 - root - INFO - Epoch: 355
2024-10-05 15:50:20,475 - root - INFO - Avg loss: tensor(6.1123e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2343904972076416
2024-10-05 15:50:20,636 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:20,787 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:20,950 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:20,953 - root - INFO - Best val result: {'epoch': 355, 'loss': tensor(6.1123e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:20,954 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 355}
2024-10-05 15:50:20,954 - root - INFO - Epoch: 356
2024-10-05 15:50:21,365 - root - INFO - Avg loss: tensor(4.9085e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23487615585327148
2024-10-05 15:50:21,522 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:21,668 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:21,817 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:21,821 - root - INFO - Best val result: {'epoch': 356, 'loss': tensor(4.9085e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:21,822 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 356}
2024-10-05 15:50:21,822 - root - INFO - Epoch: 357
2024-10-05 15:50:22,335 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3031325340270996
2024-10-05 15:50:22,509 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:22,672 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:22,843 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:22,847 - root - INFO - Best val result: {'epoch': 357, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:22,848 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 357}
2024-10-05 15:50:22,848 - root - INFO - Epoch: 358
2024-10-05 15:50:23,376 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31131887435913086
2024-10-05 15:50:23,550 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:23,712 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:23,891 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:23,894 - root - INFO - Best val result: {'epoch': 358, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:23,896 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 358}
2024-10-05 15:50:23,896 - root - INFO - Epoch: 359
2024-10-05 15:50:24,310 - root - INFO - Avg loss: tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23671555519104004
2024-10-05 15:50:24,465 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:24,612 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:24,770 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:24,774 - root - INFO - Best val result: {'epoch': 359, 'loss': tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:24,775 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 359}
2024-10-05 15:50:24,775 - root - INFO - Epoch: 360
2024-10-05 15:50:25,206 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23219919204711914
2024-10-05 15:50:25,357 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:25,509 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:25,662 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:25,665 - root - INFO - Best val result: {'epoch': 360, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:25,666 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 360}
2024-10-05 15:50:25,666 - root - INFO - Epoch: 361
2024-10-05 15:50:26,096 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23637843132019043
2024-10-05 15:50:26,248 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:26,399 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:26,559 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:26,562 - root - INFO - Best val result: {'epoch': 361, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:26,564 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 361}
2024-10-05 15:50:26,564 - root - INFO - Epoch: 362
2024-10-05 15:50:26,995 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24163269996643066
2024-10-05 15:50:27,153 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:27,301 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:27,459 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:27,462 - root - INFO - Best val result: {'epoch': 362, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:27,463 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 362}
2024-10-05 15:50:27,463 - root - INFO - Epoch: 363
2024-10-05 15:50:27,884 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23413324356079102
2024-10-05 15:50:28,039 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:28,194 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:28,361 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:28,365 - root - INFO - Best val result: {'epoch': 363, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:28,367 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 363}
2024-10-05 15:50:28,367 - root - INFO - Epoch: 364
2024-10-05 15:50:28,787 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23392319679260254
2024-10-05 15:50:28,949 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:29,095 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:29,251 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:29,255 - root - INFO - Best val result: {'epoch': 364, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:29,256 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 364}
2024-10-05 15:50:29,256 - root - INFO - Epoch: 365
2024-10-05 15:50:29,678 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23262548446655273
2024-10-05 15:50:29,858 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:30,009 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:30,167 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:30,170 - root - INFO - Best val result: {'epoch': 365, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:30,171 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 365}
2024-10-05 15:50:30,171 - root - INFO - Epoch: 366
2024-10-05 15:50:30,586 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2355818748474121
2024-10-05 15:50:30,741 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:30,889 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:31,051 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:31,055 - root - INFO - Best val result: {'epoch': 366, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:31,055 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 366}
2024-10-05 15:50:31,056 - root - INFO - Epoch: 367
2024-10-05 15:50:31,465 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2336266040802002
2024-10-05 15:50:31,620 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:31,758 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:31,916 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:31,919 - root - INFO - Best val result: {'epoch': 367, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:31,920 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 367}
2024-10-05 15:50:31,920 - root - INFO - Epoch: 368
2024-10-05 15:50:32,347 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23880577087402344
2024-10-05 15:50:32,505 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:32,651 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:32,803 - root - INFO - Test accuracy: 0.99
2024-10-05 15:50:32,807 - root - INFO - Best val result: {'epoch': 368, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:32,807 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 368}
2024-10-05 15:50:32,807 - root - INFO - Epoch: 369
2024-10-05 15:50:33,305 - root - INFO - Avg loss: tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3078763484954834
2024-10-05 15:50:33,463 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:33,641 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:33,797 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:33,800 - root - INFO - Best val result: {'epoch': 369, 'loss': tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:33,801 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 369}
2024-10-05 15:50:33,801 - root - INFO - Epoch: 370
2024-10-05 15:50:34,222 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23474860191345215
2024-10-05 15:50:34,380 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:34,528 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:34,687 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:34,690 - root - INFO - Best val result: {'epoch': 370, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:34,691 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 370}
2024-10-05 15:50:34,691 - root - INFO - Epoch: 371
2024-10-05 15:50:35,112 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23656892776489258
2024-10-05 15:50:35,277 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:35,429 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:35,587 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:35,591 - root - INFO - Best val result: {'epoch': 371, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:35,591 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 371}
2024-10-05 15:50:35,592 - root - INFO - Epoch: 372
2024-10-05 15:50:36,019 - root - INFO - Avg loss: tensor(0.0087, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23536372184753418
2024-10-05 15:50:36,175 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:36,321 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:36,475 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:36,478 - root - INFO - Best val result: {'epoch': 372, 'loss': tensor(0.0087, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:36,478 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 372}
2024-10-05 15:50:36,479 - root - INFO - Epoch: 373
2024-10-05 15:50:36,893 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23389363288879395
2024-10-05 15:50:37,040 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:37,187 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:37,359 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:37,361 - root - INFO - Best val result: {'epoch': 373, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:37,362 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 373}
2024-10-05 15:50:37,363 - root - INFO - Epoch: 374
2024-10-05 15:50:37,804 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2533719539642334
2024-10-05 15:50:37,969 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:38,124 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:38,283 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:38,287 - root - INFO - Best val result: {'epoch': 374, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:38,288 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 374}
2024-10-05 15:50:38,288 - root - INFO - Epoch: 375
2024-10-05 15:50:38,757 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25849103927612305
2024-10-05 15:50:38,904 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:39,054 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:39,220 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:39,224 - root - INFO - Best val result: {'epoch': 375, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:39,225 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 375}
2024-10-05 15:50:39,225 - root - INFO - Epoch: 376
2024-10-05 15:50:39,645 - root - INFO - Avg loss: tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2357332706451416
2024-10-05 15:50:39,801 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:39,946 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:40,117 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:40,120 - root - INFO - Best val result: {'epoch': 376, 'loss': tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:40,120 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 376}
2024-10-05 15:50:40,121 - root - INFO - Epoch: 377
2024-10-05 15:50:40,546 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23311114311218262
2024-10-05 15:50:40,700 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:40,851 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:41,000 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:41,003 - root - INFO - Best val result: {'epoch': 377, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:41,004 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 377}
2024-10-05 15:50:41,004 - root - INFO - Epoch: 378
2024-10-05 15:50:41,424 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23378729820251465
2024-10-05 15:50:41,571 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:41,723 - root - INFO - Validation accuracy: 0.98
2024-10-05 15:50:41,885 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:41,887 - root - INFO - Best val result: {'epoch': 377, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:41,888 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 378}
2024-10-05 15:50:41,891 - root - INFO - Epoch: 379
2024-10-05 15:50:42,317 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23459458351135254
2024-10-05 15:50:42,484 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:42,634 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:42,787 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:42,791 - root - INFO - Best val result: {'epoch': 379, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:42,793 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 379}
2024-10-05 15:50:42,793 - root - INFO - Epoch: 380
2024-10-05 15:50:43,218 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23465490341186523
2024-10-05 15:50:43,376 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:43,526 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:43,695 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:43,699 - root - INFO - Best val result: {'epoch': 380, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:43,700 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 380}
2024-10-05 15:50:43,700 - root - INFO - Epoch: 381
2024-10-05 15:50:44,130 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23392987251281738
2024-10-05 15:50:44,291 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:44,436 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:44,587 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:44,590 - root - INFO - Best val result: {'epoch': 381, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:44,591 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 381}
2024-10-05 15:50:44,591 - root - INFO - Epoch: 382
2024-10-05 15:50:45,040 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.250699520111084
2024-10-05 15:50:45,196 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:45,347 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:45,509 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:45,512 - root - INFO - Best val result: {'epoch': 382, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:45,512 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 382}
2024-10-05 15:50:45,512 - root - INFO - Epoch: 383
2024-10-05 15:50:45,933 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23144292831420898
2024-10-05 15:50:46,090 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:46,252 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:46,397 - root - INFO - Test accuracy: 0.99
2024-10-05 15:50:46,401 - root - INFO - Best val result: {'epoch': 383, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:46,402 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 383}
2024-10-05 15:50:46,402 - root - INFO - Epoch: 384
2024-10-05 15:50:46,817 - root - INFO - Avg loss: tensor(0.0071, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23542094230651855
2024-10-05 15:50:46,967 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:47,121 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:47,277 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:47,281 - root - INFO - Best val result: {'epoch': 384, 'loss': tensor(0.0071, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:47,282 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 384}
2024-10-05 15:50:47,282 - root - INFO - Epoch: 385
2024-10-05 15:50:47,704 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23533082008361816
2024-10-05 15:50:47,866 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:48,011 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:48,180 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:48,184 - root - INFO - Best val result: {'epoch': 385, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:48,185 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 385}
2024-10-05 15:50:48,186 - root - INFO - Epoch: 386
2024-10-05 15:50:48,612 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23443889617919922
2024-10-05 15:50:48,774 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:48,939 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:49,101 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:49,104 - root - INFO - Best val result: {'epoch': 386, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:49,105 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 386}
2024-10-05 15:50:49,105 - root - INFO - Epoch: 387
2024-10-05 15:50:49,531 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23528552055358887
2024-10-05 15:50:49,693 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:49,844 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:49,993 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:49,996 - root - INFO - Best val result: {'epoch': 387, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:49,996 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 387}
2024-10-05 15:50:49,997 - root - INFO - Epoch: 388
2024-10-05 15:50:50,468 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24874615669250488
2024-10-05 15:50:50,634 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:50,792 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:50,955 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:50,958 - root - INFO - Best val result: {'epoch': 388, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:50,959 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 388}
2024-10-05 15:50:50,959 - root - INFO - Epoch: 389
2024-10-05 15:50:51,369 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23563027381896973
2024-10-05 15:50:51,520 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:51,671 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:51,821 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:51,825 - root - INFO - Best val result: {'epoch': 389, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:51,826 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 389}
2024-10-05 15:50:51,826 - root - INFO - Epoch: 390
2024-10-05 15:50:52,252 - root - INFO - Avg loss: tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23414921760559082
2024-10-05 15:50:52,404 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:50:52,551 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:52,715 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:52,719 - root - INFO - Best val result: {'epoch': 390, 'loss': tensor(0.0051, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:52,720 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 390}
2024-10-05 15:50:52,720 - root - INFO - Epoch: 391
2024-10-05 15:50:53,138 - root - INFO - Avg loss: tensor(0.0062, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23535752296447754
2024-10-05 15:50:53,287 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:53,437 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:53,597 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:53,599 - root - INFO - Best val result: {'epoch': 391, 'loss': tensor(0.0062, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:53,600 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 391}
2024-10-05 15:50:53,600 - root - INFO - Epoch: 392
2024-10-05 15:50:54,021 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23449969291687012
2024-10-05 15:50:54,179 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:54,330 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:54,500 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:54,503 - root - INFO - Best val result: {'epoch': 392, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:54,504 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 392}
2024-10-05 15:50:54,504 - root - INFO - Epoch: 393
2024-10-05 15:50:54,909 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23264622688293457
2024-10-05 15:50:55,056 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:55,220 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:55,376 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:55,379 - root - INFO - Best val result: {'epoch': 393, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:55,380 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 393}
2024-10-05 15:50:55,380 - root - INFO - Epoch: 394
2024-10-05 15:50:55,800 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23430323600769043
2024-10-05 15:50:55,946 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:56,093 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:56,263 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:56,267 - root - INFO - Best val result: {'epoch': 394, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:56,268 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 394}
2024-10-05 15:50:56,268 - root - INFO - Epoch: 395
2024-10-05 15:50:56,688 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23601698875427246
2024-10-05 15:50:56,844 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:56,993 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:57,173 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:57,177 - root - INFO - Best val result: {'epoch': 395, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:57,178 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 395}
2024-10-05 15:50:57,178 - root - INFO - Epoch: 396
2024-10-05 15:50:57,604 - root - INFO - Avg loss: tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23248553276062012
2024-10-05 15:50:57,763 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:57,942 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:58,093 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:58,096 - root - INFO - Best val result: {'epoch': 396, 'loss': tensor(0.0010, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:58,097 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 396}
2024-10-05 15:50:58,097 - root - INFO - Epoch: 397
2024-10-05 15:50:58,585 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2826821804046631
2024-10-05 15:50:58,733 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:58,877 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:59,030 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:59,033 - root - INFO - Best val result: {'epoch': 397, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:59,034 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 397}
2024-10-05 15:50:59,035 - root - INFO - Epoch: 398
2024-10-05 15:50:59,466 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24360322952270508
2024-10-05 15:50:59,625 - root - INFO - Train accuracy: 1.0
2024-10-05 15:50:59,768 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:50:59,928 - root - INFO - Test accuracy: 1.0
2024-10-05 15:50:59,931 - root - INFO - Best val result: {'epoch': 398, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:50:59,932 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 398}
2024-10-05 15:50:59,932 - root - INFO - Epoch: 399
2024-10-05 15:51:00,357 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23207807540893555
2024-10-05 15:51:00,516 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:51:00,666 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:00,825 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:00,828 - root - INFO - Best val result: {'epoch': 399, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:00,829 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 399}
2024-10-05 15:51:00,829 - root - INFO - Epoch: 400
2024-10-05 15:51:01,268 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2446894645690918
2024-10-05 15:51:01,458 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:01,600 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:01,761 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:01,764 - root - INFO - Best val result: {'epoch': 400, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:01,764 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 400}
2024-10-05 15:51:01,765 - root - INFO - Epoch: 401
2024-10-05 15:51:02,190 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2381448745727539
2024-10-05 15:51:02,353 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:02,506 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:02,662 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:02,665 - root - INFO - Best val result: {'epoch': 401, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:02,666 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 401}
2024-10-05 15:51:02,666 - root - INFO - Epoch: 402
2024-10-05 15:51:03,084 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24094200134277344
2024-10-05 15:51:03,236 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:03,384 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:03,542 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:03,545 - root - INFO - Best val result: {'epoch': 402, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:03,545 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 402}
2024-10-05 15:51:03,546 - root - INFO - Epoch: 403
2024-10-05 15:51:03,971 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23556900024414062
2024-10-05 15:51:04,136 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:04,289 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:04,439 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:04,443 - root - INFO - Best val result: {'epoch': 403, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:04,444 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 403}
2024-10-05 15:51:04,444 - root - INFO - Epoch: 404
2024-10-05 15:51:04,864 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2327883243560791
2024-10-05 15:51:05,011 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:05,163 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:05,316 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:05,319 - root - INFO - Best val result: {'epoch': 404, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:05,320 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 404}
2024-10-05 15:51:05,320 - root - INFO - Epoch: 405
2024-10-05 15:51:05,739 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23478055000305176
2024-10-05 15:51:05,893 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:06,040 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:06,200 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:06,203 - root - INFO - Best val result: {'epoch': 405, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:06,204 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 405}
2024-10-05 15:51:06,204 - root - INFO - Epoch: 406
2024-10-05 15:51:06,608 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23180651664733887
2024-10-05 15:51:06,766 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:06,920 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:07,093 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:07,097 - root - INFO - Best val result: {'epoch': 406, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:07,098 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 406}
2024-10-05 15:51:07,098 - root - INFO - Epoch: 407
2024-10-05 15:51:07,547 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25472164154052734
2024-10-05 15:51:07,708 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:07,857 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:08,016 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:08,020 - root - INFO - Best val result: {'epoch': 407, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:08,021 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 407}
2024-10-05 15:51:08,021 - root - INFO - Epoch: 408
2024-10-05 15:51:08,513 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.30346226692199707
2024-10-05 15:51:08,680 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:08,832 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:08,990 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:08,994 - root - INFO - Best val result: {'epoch': 408, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:08,994 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 408}
2024-10-05 15:51:08,995 - root - INFO - Epoch: 409
2024-10-05 15:51:09,442 - root - INFO - Avg loss: tensor(3.3024e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26171422004699707
2024-10-05 15:51:09,599 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:09,745 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:09,907 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:09,910 - root - INFO - Best val result: {'epoch': 409, 'loss': tensor(3.3024e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:09,911 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 409}
2024-10-05 15:51:09,911 - root - INFO - Epoch: 410
2024-10-05 15:51:10,364 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26630187034606934
2024-10-05 15:51:10,511 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:10,657 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:10,805 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:10,808 - root - INFO - Best val result: {'epoch': 410, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:10,809 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 410}
2024-10-05 15:51:10,809 - root - INFO - Epoch: 411
2024-10-05 15:51:11,250 - root - INFO - Avg loss: tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25711488723754883
2024-10-05 15:51:11,411 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:11,558 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:11,712 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:11,715 - root - INFO - Best val result: {'epoch': 411, 'loss': tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:11,716 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 411}
2024-10-05 15:51:11,716 - root - INFO - Epoch: 412
2024-10-05 15:51:12,141 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2385873794555664
2024-10-05 15:51:12,301 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:12,453 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:12,610 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:12,615 - root - INFO - Best val result: {'epoch': 412, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:12,616 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 412}
2024-10-05 15:51:12,616 - root - INFO - Epoch: 413
2024-10-05 15:51:13,035 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23296904563903809
2024-10-05 15:51:13,195 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:13,345 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:13,501 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:13,504 - root - INFO - Best val result: {'epoch': 413, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:13,505 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 413}
2024-10-05 15:51:13,506 - root - INFO - Epoch: 414
2024-10-05 15:51:13,922 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23267841339111328
2024-10-05 15:51:14,078 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:14,234 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:14,388 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:14,391 - root - INFO - Best val result: {'epoch': 414, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:14,392 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 414}
2024-10-05 15:51:14,392 - root - INFO - Epoch: 415
2024-10-05 15:51:14,812 - root - INFO - Avg loss: tensor(0.0079, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2334132194519043
2024-10-05 15:51:14,966 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:15,108 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:15,267 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:15,271 - root - INFO - Best val result: {'epoch': 415, 'loss': tensor(0.0079, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:15,271 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 415}
2024-10-05 15:51:15,271 - root - INFO - Epoch: 416
2024-10-05 15:51:15,727 - root - INFO - Avg loss: tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25575780868530273
2024-10-05 15:51:15,881 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:16,026 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:16,184 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:16,187 - root - INFO - Best val result: {'epoch': 416, 'loss': tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:16,188 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 416}
2024-10-05 15:51:16,188 - root - INFO - Epoch: 417
2024-10-05 15:51:16,633 - root - INFO - Avg loss: tensor(0.0066, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23273611068725586
2024-10-05 15:51:16,780 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:16,930 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:17,095 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:17,097 - root - INFO - Best val result: {'epoch': 417, 'loss': tensor(0.0066, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:17,098 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 417}
2024-10-05 15:51:17,098 - root - INFO - Epoch: 418
2024-10-05 15:51:17,539 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2535824775695801
2024-10-05 15:51:17,693 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:17,843 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:18,008 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:18,012 - root - INFO - Best val result: {'epoch': 418, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:18,013 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 418}
2024-10-05 15:51:18,013 - root - INFO - Epoch: 419
2024-10-05 15:51:18,441 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23638057708740234
2024-10-05 15:51:18,589 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:18,753 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:18,916 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:18,919 - root - INFO - Best val result: {'epoch': 419, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:18,920 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 419}
2024-10-05 15:51:18,920 - root - INFO - Epoch: 420
2024-10-05 15:51:19,345 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23522448539733887
2024-10-05 15:51:19,500 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:19,653 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:19,813 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:19,816 - root - INFO - Best val result: {'epoch': 420, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:19,817 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 420}
2024-10-05 15:51:19,817 - root - INFO - Epoch: 421
2024-10-05 15:51:20,233 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23334121704101562
2024-10-05 15:51:20,389 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:20,541 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:20,699 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:20,701 - root - INFO - Best val result: {'epoch': 421, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:20,702 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 421}
2024-10-05 15:51:20,702 - root - INFO - Epoch: 422
2024-10-05 15:51:21,125 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23723530769348145
2024-10-05 15:51:21,274 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:21,423 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:21,576 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:21,579 - root - INFO - Best val result: {'epoch': 422, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:21,580 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 422}
2024-10-05 15:51:21,580 - root - INFO - Epoch: 423
2024-10-05 15:51:22,027 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23164963722229004
2024-10-05 15:51:22,174 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:22,314 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:22,474 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:22,477 - root - INFO - Best val result: {'epoch': 423, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:22,479 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 423}
2024-10-05 15:51:22,479 - root - INFO - Epoch: 424
2024-10-05 15:51:22,891 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23458027839660645
2024-10-05 15:51:23,050 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:23,204 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:23,360 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:23,363 - root - INFO - Best val result: {'epoch': 424, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:23,364 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 424}
2024-10-05 15:51:23,364 - root - INFO - Epoch: 425
2024-10-05 15:51:23,776 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2304983139038086
2024-10-05 15:51:23,923 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:51:24,067 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:24,217 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:24,220 - root - INFO - Best val result: {'epoch': 425, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:24,221 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 425}
2024-10-05 15:51:24,221 - root - INFO - Epoch: 426
2024-10-05 15:51:24,639 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23343420028686523
2024-10-05 15:51:24,800 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:24,949 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:25,109 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:25,112 - root - INFO - Best val result: {'epoch': 426, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:25,113 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 426}
2024-10-05 15:51:25,113 - root - INFO - Epoch: 427
2024-10-05 15:51:25,540 - root - INFO - Avg loss: tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23627233505249023
2024-10-05 15:51:25,702 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:25,853 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:26,001 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:26,004 - root - INFO - Best val result: {'epoch': 427, 'loss': tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:26,005 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 427}
2024-10-05 15:51:26,005 - root - INFO - Epoch: 428
2024-10-05 15:51:26,411 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23321819305419922
2024-10-05 15:51:26,569 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:26,724 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:26,880 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:26,883 - root - INFO - Best val result: {'epoch': 428, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:26,884 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 428}
2024-10-05 15:51:26,884 - root - INFO - Epoch: 429
2024-10-05 15:51:27,293 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2343451976776123
2024-10-05 15:51:27,436 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:27,580 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:27,752 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:27,756 - root - INFO - Best val result: {'epoch': 429, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:27,756 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 429}
2024-10-05 15:51:27,757 - root - INFO - Epoch: 430
2024-10-05 15:51:28,195 - root - INFO - Avg loss: tensor(6.0559e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24242448806762695
2024-10-05 15:51:28,360 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:28,507 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:28,663 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:28,666 - root - INFO - Best val result: {'epoch': 430, 'loss': tensor(6.0559e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:28,667 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 430}
2024-10-05 15:51:28,667 - root - INFO - Epoch: 431
2024-10-05 15:51:29,095 - root - INFO - Avg loss: tensor(8.8203e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23810839653015137
2024-10-05 15:51:29,249 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:29,389 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:29,550 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:29,553 - root - INFO - Best val result: {'epoch': 431, 'loss': tensor(8.8203e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:29,554 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 431}
2024-10-05 15:51:29,554 - root - INFO - Epoch: 432
2024-10-05 15:51:29,997 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24810004234313965
2024-10-05 15:51:30,157 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:30,313 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:30,471 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:30,474 - root - INFO - Best val result: {'epoch': 432, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:30,475 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 432}
2024-10-05 15:51:30,475 - root - INFO - Epoch: 433
2024-10-05 15:51:30,902 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24418091773986816
2024-10-05 15:51:31,058 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:31,199 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:31,360 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:31,364 - root - INFO - Best val result: {'epoch': 433, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:31,364 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 433}
2024-10-05 15:51:31,364 - root - INFO - Epoch: 434
2024-10-05 15:51:31,788 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2390003204345703
2024-10-05 15:51:31,941 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:32,102 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:32,265 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:32,268 - root - INFO - Best val result: {'epoch': 434, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:32,269 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 434}
2024-10-05 15:51:32,269 - root - INFO - Epoch: 435
2024-10-05 15:51:32,697 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24023199081420898
2024-10-05 15:51:32,861 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:33,012 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:33,170 - root - INFO - Test accuracy: 0.99
2024-10-05 15:51:33,173 - root - INFO - Best val result: {'epoch': 435, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:33,174 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 435}
2024-10-05 15:51:33,174 - root - INFO - Epoch: 436
2024-10-05 15:51:33,590 - root - INFO - Avg loss: tensor(0.0078, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2375931739807129
2024-10-05 15:51:33,758 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:33,903 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:34,049 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:34,052 - root - INFO - Best val result: {'epoch': 436, 'loss': tensor(0.0078, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:34,053 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 436}
2024-10-05 15:51:34,053 - root - INFO - Epoch: 437
2024-10-05 15:51:34,478 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23477482795715332
2024-10-05 15:51:34,639 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:34,790 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:34,963 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:34,966 - root - INFO - Best val result: {'epoch': 437, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:34,967 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 437}
2024-10-05 15:51:34,967 - root - INFO - Epoch: 438
2024-10-05 15:51:35,375 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23277521133422852
2024-10-05 15:51:35,517 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:35,657 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:35,814 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:35,816 - root - INFO - Best val result: {'epoch': 438, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:35,817 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 438}
2024-10-05 15:51:35,817 - root - INFO - Epoch: 439
2024-10-05 15:51:36,255 - root - INFO - Avg loss: tensor(6.2619e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24146556854248047
2024-10-05 15:51:36,408 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:36,545 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:36,721 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:36,724 - root - INFO - Best val result: {'epoch': 439, 'loss': tensor(6.2619e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:36,725 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 439}
2024-10-05 15:51:36,726 - root - INFO - Epoch: 440
2024-10-05 15:51:37,176 - root - INFO - Avg loss: tensor(4.9064e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2709050178527832
2024-10-05 15:51:37,329 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:37,476 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:37,639 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:37,643 - root - INFO - Best val result: {'epoch': 440, 'loss': tensor(4.9064e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:37,643 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 440}
2024-10-05 15:51:37,644 - root - INFO - Epoch: 441
2024-10-05 15:51:38,057 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23227167129516602
2024-10-05 15:51:38,210 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:38,364 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:38,530 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:38,534 - root - INFO - Best val result: {'epoch': 441, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:38,534 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 441}
2024-10-05 15:51:38,535 - root - INFO - Epoch: 442
2024-10-05 15:51:38,950 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23319029808044434
2024-10-05 15:51:39,110 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:39,249 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:39,385 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:39,388 - root - INFO - Best val result: {'epoch': 442, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:39,389 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 442}
2024-10-05 15:51:39,389 - root - INFO - Epoch: 443
2024-10-05 15:51:39,815 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23315167427062988
2024-10-05 15:51:39,969 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:40,117 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:40,275 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:40,278 - root - INFO - Best val result: {'epoch': 443, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:40,279 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 443}
2024-10-05 15:51:40,279 - root - INFO - Epoch: 444
2024-10-05 15:51:40,704 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23514580726623535
2024-10-05 15:51:40,858 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:41,011 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:41,156 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:41,158 - root - INFO - Best val result: {'epoch': 444, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:41,159 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 444}
2024-10-05 15:51:41,159 - root - INFO - Epoch: 445
2024-10-05 15:51:41,574 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23566174507141113
2024-10-05 15:51:41,725 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:41,872 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:42,020 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:42,023 - root - INFO - Best val result: {'epoch': 445, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:42,024 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 445}
2024-10-05 15:51:42,024 - root - INFO - Epoch: 446
2024-10-05 15:51:42,453 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24646949768066406
2024-10-05 15:51:42,620 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:42,766 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:42,930 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:42,934 - root - INFO - Best val result: {'epoch': 446, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:42,935 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 446}
2024-10-05 15:51:42,935 - root - INFO - Epoch: 447
2024-10-05 15:51:43,386 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2412724494934082
2024-10-05 15:51:43,556 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:43,703 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:43,847 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:43,850 - root - INFO - Best val result: {'epoch': 447, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:43,851 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 447}
2024-10-05 15:51:43,851 - root - INFO - Epoch: 448
2024-10-05 15:51:44,283 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24365687370300293
2024-10-05 15:51:44,425 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:44,572 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:44,741 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:44,744 - root - INFO - Best val result: {'epoch': 448, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:44,745 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 448}
2024-10-05 15:51:44,745 - root - INFO - Epoch: 449
2024-10-05 15:51:45,192 - root - INFO - Avg loss: tensor(0.0064, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2439572811126709
2024-10-05 15:51:45,340 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:45,485 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:45,651 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:45,655 - root - INFO - Best val result: {'epoch': 449, 'loss': tensor(0.0064, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:45,656 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 449}
2024-10-05 15:51:45,656 - root - INFO - Epoch: 450
2024-10-05 15:51:46,173 - root - INFO - Avg loss: tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31723737716674805
2024-10-05 15:51:46,335 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:46,510 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:46,678 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:46,680 - root - INFO - Best val result: {'epoch': 450, 'loss': tensor(0.0028, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:46,681 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 450}
2024-10-05 15:51:46,681 - root - INFO - Epoch: 451
2024-10-05 15:51:47,207 - root - INFO - Avg loss: tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3223264217376709
2024-10-05 15:51:47,372 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:47,523 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:47,694 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:47,697 - root - INFO - Best val result: {'epoch': 451, 'loss': tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:47,698 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 451}
2024-10-05 15:51:47,698 - root - INFO - Epoch: 452
2024-10-05 15:51:48,225 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3250160217285156
2024-10-05 15:51:48,371 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:48,522 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:48,682 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:48,684 - root - INFO - Best val result: {'epoch': 452, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:48,685 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 452}
2024-10-05 15:51:48,685 - root - INFO - Epoch: 453
2024-10-05 15:51:49,113 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24185752868652344
2024-10-05 15:51:49,273 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:51:49,424 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:49,581 - root - INFO - Test accuracy: 0.98
2024-10-05 15:51:49,584 - root - INFO - Best val result: {'epoch': 453, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:49,585 - root - INFO - Test result: {'prec': np.float64(0.9803921568627452), 'recall': np.float64(0.9803921568627452), 'acc': 0.98, 'F1': np.float64(0.98), 'epoch': 453}
2024-10-05 15:51:49,585 - root - INFO - Epoch: 454
2024-10-05 15:51:50,097 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31163740158081055
2024-10-05 15:51:50,249 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:50,400 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:50,557 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:50,560 - root - INFO - Best val result: {'epoch': 454, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:50,561 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 454}
2024-10-05 15:51:50,562 - root - INFO - Epoch: 455
2024-10-05 15:51:50,982 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23726987838745117
2024-10-05 15:51:51,124 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:51,264 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:51,415 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:51,418 - root - INFO - Best val result: {'epoch': 455, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:51,419 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 455}
2024-10-05 15:51:51,419 - root - INFO - Epoch: 456
2024-10-05 15:51:51,839 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2373661994934082
2024-10-05 15:51:51,992 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:52,141 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:52,296 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:52,299 - root - INFO - Best val result: {'epoch': 456, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:52,300 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 456}
2024-10-05 15:51:52,300 - root - INFO - Epoch: 457
2024-10-05 15:51:52,724 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23865485191345215
2024-10-05 15:51:52,876 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:53,025 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:53,182 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:53,185 - root - INFO - Best val result: {'epoch': 457, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:53,186 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 457}
2024-10-05 15:51:53,187 - root - INFO - Epoch: 458
2024-10-05 15:51:53,628 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24623823165893555
2024-10-05 15:51:53,778 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:53,930 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:54,084 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:54,087 - root - INFO - Best val result: {'epoch': 458, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:54,088 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 458}
2024-10-05 15:51:54,088 - root - INFO - Epoch: 459
2024-10-05 15:51:54,513 - root - INFO - Avg loss: tensor(5.6874e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.238234281539917
2024-10-05 15:51:54,668 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:54,825 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:54,991 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:54,994 - root - INFO - Best val result: {'epoch': 459, 'loss': tensor(5.6874e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:54,995 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 459}
2024-10-05 15:51:54,995 - root - INFO - Epoch: 460
2024-10-05 15:51:55,513 - root - INFO - Avg loss: tensor(5.6029e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3194899559020996
2024-10-05 15:51:55,668 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:55,821 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:55,979 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:55,982 - root - INFO - Best val result: {'epoch': 460, 'loss': tensor(5.6029e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:55,982 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 460}
2024-10-05 15:51:55,983 - root - INFO - Epoch: 461
2024-10-05 15:51:56,421 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24044346809387207
2024-10-05 15:51:56,613 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:56,771 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:56,941 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:56,944 - root - INFO - Best val result: {'epoch': 461, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:56,945 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 461}
2024-10-05 15:51:56,945 - root - INFO - Epoch: 462
2024-10-05 15:51:57,364 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23441004753112793
2024-10-05 15:51:57,520 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:57,677 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:57,842 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:57,845 - root - INFO - Best val result: {'epoch': 462, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:57,846 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 462}
2024-10-05 15:51:57,846 - root - INFO - Epoch: 463
2024-10-05 15:51:58,257 - root - INFO - Avg loss: tensor(7.6430e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23462581634521484
2024-10-05 15:51:58,416 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:58,557 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:58,725 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:58,728 - root - INFO - Best val result: {'epoch': 463, 'loss': tensor(7.6430e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:58,729 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 463}
2024-10-05 15:51:58,729 - root - INFO - Epoch: 464
2024-10-05 15:51:59,162 - root - INFO - Avg loss: tensor(5.6827e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23775172233581543
2024-10-05 15:51:59,330 - root - INFO - Train accuracy: 1.0
2024-10-05 15:51:59,487 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:51:59,638 - root - INFO - Test accuracy: 1.0
2024-10-05 15:51:59,641 - root - INFO - Best val result: {'epoch': 464, 'loss': tensor(5.6827e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:51:59,642 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 464}
2024-10-05 15:51:59,642 - root - INFO - Epoch: 465
2024-10-05 15:52:00,064 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24112224578857422
2024-10-05 15:52:00,229 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:00,377 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:00,538 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:00,541 - root - INFO - Best val result: {'epoch': 465, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:00,542 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 465}
2024-10-05 15:52:00,542 - root - INFO - Epoch: 466
2024-10-05 15:52:00,963 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23903322219848633
2024-10-05 15:52:01,139 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:01,289 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:01,442 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:01,446 - root - INFO - Best val result: {'epoch': 466, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:01,447 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 466}
2024-10-05 15:52:01,447 - root - INFO - Epoch: 467
2024-10-05 15:52:01,920 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26451921463012695
2024-10-05 15:52:02,065 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:02,217 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:02,375 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:02,379 - root - INFO - Best val result: {'epoch': 467, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:02,381 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 467}
2024-10-05 15:52:02,381 - root - INFO - Epoch: 468
2024-10-05 15:52:02,824 - root - INFO - Avg loss: tensor(6.5532e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2577686309814453
2024-10-05 15:52:02,979 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:03,128 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:03,284 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:03,287 - root - INFO - Best val result: {'epoch': 468, 'loss': tensor(6.5532e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:03,287 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 468}
2024-10-05 15:52:03,288 - root - INFO - Epoch: 469
2024-10-05 15:52:03,747 - root - INFO - Avg loss: tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23417448997497559
2024-10-05 15:52:03,909 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:04,054 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:04,210 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:04,214 - root - INFO - Best val result: {'epoch': 469, 'loss': tensor(0.0019, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:04,214 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 469}
2024-10-05 15:52:04,215 - root - INFO - Epoch: 470
2024-10-05 15:52:04,656 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24334120750427246
2024-10-05 15:52:04,827 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:05,004 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:05,163 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:05,165 - root - INFO - Best val result: {'epoch': 470, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:05,166 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 470}
2024-10-05 15:52:05,166 - root - INFO - Epoch: 471
2024-10-05 15:52:05,620 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2606215476989746
2024-10-05 15:52:05,782 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:05,937 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:06,102 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:06,106 - root - INFO - Best val result: {'epoch': 471, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:06,107 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 471}
2024-10-05 15:52:06,107 - root - INFO - Epoch: 472
2024-10-05 15:52:06,527 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23552513122558594
2024-10-05 15:52:06,696 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:06,843 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:07,007 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:07,009 - root - INFO - Best val result: {'epoch': 472, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:07,010 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 472}
2024-10-05 15:52:07,010 - root - INFO - Epoch: 473
2024-10-05 15:52:07,471 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25883030891418457
2024-10-05 15:52:07,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:07,767 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:07,919 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:07,922 - root - INFO - Best val result: {'epoch': 473, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:07,923 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 473}
2024-10-05 15:52:07,923 - root - INFO - Epoch: 474
2024-10-05 15:52:08,369 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2507491111755371
2024-10-05 15:52:08,530 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:08,698 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:08,852 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:08,855 - root - INFO - Best val result: {'epoch': 474, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:08,856 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 474}
2024-10-05 15:52:08,856 - root - INFO - Epoch: 475
2024-10-05 15:52:09,282 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2338240146636963
2024-10-05 15:52:09,439 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:09,588 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:09,746 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:09,749 - root - INFO - Best val result: {'epoch': 475, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:09,750 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 475}
2024-10-05 15:52:09,751 - root - INFO - Epoch: 476
2024-10-05 15:52:10,159 - root - INFO - Avg loss: tensor(3.9744e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2318892478942871
2024-10-05 15:52:10,310 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:10,463 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:10,628 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:10,631 - root - INFO - Best val result: {'epoch': 476, 'loss': tensor(3.9744e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:10,632 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 476}
2024-10-05 15:52:10,632 - root - INFO - Epoch: 477
2024-10-05 15:52:11,046 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22987818717956543
2024-10-05 15:52:11,196 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:11,344 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:11,503 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:11,506 - root - INFO - Best val result: {'epoch': 477, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:11,507 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 477}
2024-10-05 15:52:11,507 - root - INFO - Epoch: 478
2024-10-05 15:52:11,922 - root - INFO - Avg loss: tensor(3.0752e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22966313362121582
2024-10-05 15:52:12,079 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:12,229 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:12,402 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:12,405 - root - INFO - Best val result: {'epoch': 478, 'loss': tensor(3.0752e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:12,406 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 478}
2024-10-05 15:52:12,406 - root - INFO - Epoch: 479
2024-10-05 15:52:12,827 - root - INFO - Avg loss: tensor(4.4369e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23108816146850586
2024-10-05 15:52:12,985 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:13,140 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:13,299 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:13,302 - root - INFO - Best val result: {'epoch': 479, 'loss': tensor(4.4369e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:13,303 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 479}
2024-10-05 15:52:13,303 - root - INFO - Epoch: 480
2024-10-05 15:52:13,770 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2612936496734619
2024-10-05 15:52:13,932 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:14,083 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:14,232 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:14,235 - root - INFO - Best val result: {'epoch': 480, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:14,236 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 480}
2024-10-05 15:52:14,236 - root - INFO - Epoch: 481
2024-10-05 15:52:14,650 - root - INFO - Avg loss: tensor(4.5691e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23490595817565918
2024-10-05 15:52:14,811 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:14,957 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:15,118 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:15,121 - root - INFO - Best val result: {'epoch': 481, 'loss': tensor(4.5691e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:15,121 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 481}
2024-10-05 15:52:15,121 - root - INFO - Epoch: 482
2024-10-05 15:52:15,546 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23786163330078125
2024-10-05 15:52:15,696 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:15,882 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:16,074 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:16,077 - root - INFO - Best val result: {'epoch': 482, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:16,078 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 482}
2024-10-05 15:52:16,078 - root - INFO - Epoch: 483
2024-10-05 15:52:16,546 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2696866989135742
2024-10-05 15:52:16,706 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:16,857 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:17,021 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:17,024 - root - INFO - Best val result: {'epoch': 483, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:17,025 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 483}
2024-10-05 15:52:17,025 - root - INFO - Epoch: 484
2024-10-05 15:52:17,461 - root - INFO - Avg loss: tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24152588844299316
2024-10-05 15:52:17,619 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:17,795 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:17,955 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:17,959 - root - INFO - Best val result: {'epoch': 484, 'loss': tensor(0.0033, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:17,960 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 484}
2024-10-05 15:52:17,960 - root - INFO - Epoch: 485
2024-10-05 15:52:18,383 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2354440689086914
2024-10-05 15:52:18,543 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:18,694 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:18,850 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:18,853 - root - INFO - Best val result: {'epoch': 485, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:18,853 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 485}
2024-10-05 15:52:18,853 - root - INFO - Epoch: 486
2024-10-05 15:52:19,286 - root - INFO - Avg loss: tensor(0.0082, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24412918090820312
2024-10-05 15:52:19,443 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:19,595 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:19,759 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:19,762 - root - INFO - Best val result: {'epoch': 486, 'loss': tensor(0.0082, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:19,763 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 486}
2024-10-05 15:52:19,763 - root - INFO - Epoch: 487
2024-10-05 15:52:20,191 - root - INFO - Avg loss: tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2459094524383545
2024-10-05 15:52:20,352 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:20,490 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:20,653 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:20,657 - root - INFO - Best val result: {'epoch': 487, 'loss': tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:20,658 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 487}
2024-10-05 15:52:20,658 - root - INFO - Epoch: 488
2024-10-05 15:52:21,081 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2382190227508545
2024-10-05 15:52:21,237 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:21,379 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:21,533 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:21,536 - root - INFO - Best val result: {'epoch': 488, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:21,536 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 488}
2024-10-05 15:52:21,537 - root - INFO - Epoch: 489
2024-10-05 15:52:21,993 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26862049102783203
2024-10-05 15:52:22,160 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:22,318 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:22,484 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:22,487 - root - INFO - Best val result: {'epoch': 489, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:22,488 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 489}
2024-10-05 15:52:22,488 - root - INFO - Epoch: 490
2024-10-05 15:52:22,906 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23259973526000977
2024-10-05 15:52:23,053 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:23,208 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:23,364 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:23,367 - root - INFO - Best val result: {'epoch': 490, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:23,368 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 490}
2024-10-05 15:52:23,368 - root - INFO - Epoch: 491
2024-10-05 15:52:23,812 - root - INFO - Avg loss: tensor(9.3110e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23141217231750488
2024-10-05 15:52:23,964 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:24,112 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:24,269 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:24,273 - root - INFO - Best val result: {'epoch': 491, 'loss': tensor(9.3110e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:24,274 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 491}
2024-10-05 15:52:24,274 - root - INFO - Epoch: 492
2024-10-05 15:52:24,702 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23746681213378906
2024-10-05 15:52:24,866 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:25,015 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:25,168 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:25,172 - root - INFO - Best val result: {'epoch': 492, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:25,172 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 492}
2024-10-05 15:52:25,173 - root - INFO - Epoch: 493
2024-10-05 15:52:25,671 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2989368438720703
2024-10-05 15:52:25,829 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:25,975 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:26,136 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:26,139 - root - INFO - Best val result: {'epoch': 493, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:26,140 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 493}
2024-10-05 15:52:26,140 - root - INFO - Epoch: 494
2024-10-05 15:52:26,548 - root - INFO - Avg loss: tensor(5.9261e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2344646453857422
2024-10-05 15:52:26,697 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:26,861 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:27,018 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:27,020 - root - INFO - Best val result: {'epoch': 494, 'loss': tensor(5.9261e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:27,021 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 494}
2024-10-05 15:52:27,021 - root - INFO - Epoch: 495
2024-10-05 15:52:27,470 - root - INFO - Avg loss: tensor(3.6149e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2582523822784424
2024-10-05 15:52:27,626 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:27,776 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:27,932 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:27,935 - root - INFO - Best val result: {'epoch': 495, 'loss': tensor(3.6149e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:27,936 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 495}
2024-10-05 15:52:27,936 - root - INFO - Epoch: 496
2024-10-05 15:52:28,396 - root - INFO - Avg loss: tensor(3.2403e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2718939781188965
2024-10-05 15:52:28,549 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:28,700 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:28,863 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:28,866 - root - INFO - Best val result: {'epoch': 496, 'loss': tensor(3.2403e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:28,867 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 496}
2024-10-05 15:52:28,868 - root - INFO - Epoch: 497
2024-10-05 15:52:29,306 - root - INFO - Avg loss: tensor(3.3264e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2592954635620117
2024-10-05 15:52:29,472 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:29,622 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:29,770 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:29,773 - root - INFO - Best val result: {'epoch': 497, 'loss': tensor(3.3264e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:29,774 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 497}
2024-10-05 15:52:29,774 - root - INFO - Epoch: 498
2024-10-05 15:52:30,215 - root - INFO - Avg loss: tensor(6.5520e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25693321228027344
2024-10-05 15:52:30,381 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:30,529 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:30,681 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:30,684 - root - INFO - Best val result: {'epoch': 498, 'loss': tensor(6.5520e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:30,685 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 498}
2024-10-05 15:52:30,685 - root - INFO - Epoch: 499
2024-10-05 15:52:31,133 - root - INFO - Avg loss: tensor(5.4191e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.260387659072876
2024-10-05 15:52:31,282 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:31,430 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:31,586 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:31,590 - root - INFO - Best val result: {'epoch': 499, 'loss': tensor(5.4191e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:31,591 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 499}
2024-10-05 15:52:31,591 - root - INFO - Epoch: 500
2024-10-05 15:52:32,041 - root - INFO - Avg loss: tensor(5.8603e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26615405082702637
2024-10-05 15:52:32,188 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:32,335 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:32,487 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:32,490 - root - INFO - Best val result: {'epoch': 500, 'loss': tensor(5.8603e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:32,491 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 500}
2024-10-05 15:52:32,491 - root - INFO - Epoch: 501
2024-10-05 15:52:32,901 - root - INFO - Avg loss: tensor(4.5398e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2356865406036377
2024-10-05 15:52:33,071 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:33,222 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:33,372 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:33,375 - root - INFO - Best val result: {'epoch': 501, 'loss': tensor(4.5398e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:33,376 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 501}
2024-10-05 15:52:33,376 - root - INFO - Epoch: 502
2024-10-05 15:52:33,785 - root - INFO - Avg loss: tensor(7.2815e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23293781280517578
2024-10-05 15:52:33,941 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:34,089 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:34,245 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:34,248 - root - INFO - Best val result: {'epoch': 502, 'loss': tensor(7.2815e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:34,249 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 502}
2024-10-05 15:52:34,249 - root - INFO - Epoch: 503
2024-10-05 15:52:34,675 - root - INFO - Avg loss: tensor(2.7087e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2336442470550537
2024-10-05 15:52:34,843 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:34,992 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:35,149 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:35,152 - root - INFO - Best val result: {'epoch': 503, 'loss': tensor(2.7087e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:35,152 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 503}
2024-10-05 15:52:35,153 - root - INFO - Epoch: 504
2024-10-05 15:52:35,575 - root - INFO - Avg loss: tensor(1.7538e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2345895767211914
2024-10-05 15:52:35,723 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:35,874 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:36,037 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:36,040 - root - INFO - Best val result: {'epoch': 504, 'loss': tensor(1.7538e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:36,041 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 504}
2024-10-05 15:52:36,041 - root - INFO - Epoch: 505
2024-10-05 15:52:36,461 - root - INFO - Avg loss: tensor(7.2770e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23283624649047852
2024-10-05 15:52:36,605 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:36,761 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:36,917 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:36,920 - root - INFO - Best val result: {'epoch': 505, 'loss': tensor(7.2770e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:36,921 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 505}
2024-10-05 15:52:36,921 - root - INFO - Epoch: 506
2024-10-05 15:52:37,330 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23500561714172363
2024-10-05 15:52:37,480 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:37,627 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:37,777 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:37,780 - root - INFO - Best val result: {'epoch': 506, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:37,781 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 506}
2024-10-05 15:52:37,781 - root - INFO - Epoch: 507
2024-10-05 15:52:38,205 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23897171020507812
2024-10-05 15:52:38,386 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:38,523 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:38,669 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:38,673 - root - INFO - Best val result: {'epoch': 507, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:38,674 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 507}
2024-10-05 15:52:38,674 - root - INFO - Epoch: 508
2024-10-05 15:52:39,167 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3084087371826172
2024-10-05 15:52:39,324 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:39,475 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:39,622 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:39,625 - root - INFO - Best val result: {'epoch': 508, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:39,625 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 508}
2024-10-05 15:52:39,626 - root - INFO - Epoch: 509
2024-10-05 15:52:40,048 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23546552658081055
2024-10-05 15:52:40,206 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:40,351 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:40,511 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:40,514 - root - INFO - Best val result: {'epoch': 509, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:40,515 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 509}
2024-10-05 15:52:40,515 - root - INFO - Epoch: 510
2024-10-05 15:52:40,938 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2344515323638916
2024-10-05 15:52:41,096 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:41,248 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:41,409 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:41,412 - root - INFO - Best val result: {'epoch': 510, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:41,412 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 510}
2024-10-05 15:52:41,413 - root - INFO - Epoch: 511
2024-10-05 15:52:41,836 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2373495101928711
2024-10-05 15:52:41,992 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:42,149 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:42,306 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:42,309 - root - INFO - Best val result: {'epoch': 511, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:42,310 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 511}
2024-10-05 15:52:42,310 - root - INFO - Epoch: 512
2024-10-05 15:52:42,741 - root - INFO - Avg loss: tensor(6.6930e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23851680755615234
2024-10-05 15:52:42,889 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:43,038 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:43,194 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:43,198 - root - INFO - Best val result: {'epoch': 512, 'loss': tensor(6.6930e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:43,199 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 512}
2024-10-05 15:52:43,199 - root - INFO - Epoch: 513
2024-10-05 15:52:43,627 - root - INFO - Avg loss: tensor(9.7397e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24237728118896484
2024-10-05 15:52:43,784 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:43,934 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:44,092 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:44,095 - root - INFO - Best val result: {'epoch': 513, 'loss': tensor(9.7397e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:44,095 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 513}
2024-10-05 15:52:44,096 - root - INFO - Epoch: 514
2024-10-05 15:52:44,504 - root - INFO - Avg loss: tensor(6.6090e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23728561401367188
2024-10-05 15:52:44,664 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:44,814 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:44,962 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:44,965 - root - INFO - Best val result: {'epoch': 514, 'loss': tensor(6.6090e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:44,966 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 514}
2024-10-05 15:52:44,966 - root - INFO - Epoch: 515
2024-10-05 15:52:45,416 - root - INFO - Avg loss: tensor(3.1354e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25418519973754883
2024-10-05 15:52:45,571 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:45,725 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:45,901 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:45,904 - root - INFO - Best val result: {'epoch': 515, 'loss': tensor(3.1354e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:45,905 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 515}
2024-10-05 15:52:45,905 - root - INFO - Epoch: 516
2024-10-05 15:52:46,319 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23368477821350098
2024-10-05 15:52:46,472 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:46,621 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:46,792 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:46,796 - root - INFO - Best val result: {'epoch': 516, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:46,798 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 516}
2024-10-05 15:52:46,798 - root - INFO - Epoch: 517
2024-10-05 15:52:47,219 - root - INFO - Avg loss: tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23768162727355957
2024-10-05 15:52:47,381 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:47,534 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:47,695 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:47,699 - root - INFO - Best val result: {'epoch': 517, 'loss': tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:47,700 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 517}
2024-10-05 15:52:47,700 - root - INFO - Epoch: 518
2024-10-05 15:52:48,115 - root - INFO - Avg loss: tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2327282428741455
2024-10-05 15:52:48,284 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:48,435 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:48,587 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:48,590 - root - INFO - Best val result: {'epoch': 518, 'loss': tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:48,591 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 518}
2024-10-05 15:52:48,591 - root - INFO - Epoch: 519
2024-10-05 15:52:49,025 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.233353853225708
2024-10-05 15:52:49,194 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:49,343 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:49,494 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:49,497 - root - INFO - Best val result: {'epoch': 519, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:49,497 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 519}
2024-10-05 15:52:49,498 - root - INFO - Epoch: 520
2024-10-05 15:52:49,925 - root - INFO - Avg loss: tensor(6.5679e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24600768089294434
2024-10-05 15:52:50,089 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:50,245 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:50,411 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:50,414 - root - INFO - Best val result: {'epoch': 520, 'loss': tensor(6.5679e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:50,415 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 520}
2024-10-05 15:52:50,416 - root - INFO - Epoch: 521
2024-10-05 15:52:50,853 - root - INFO - Avg loss: tensor(4.6476e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24458789825439453
2024-10-05 15:52:51,009 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:51,159 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:51,320 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:51,323 - root - INFO - Best val result: {'epoch': 521, 'loss': tensor(4.6476e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:51,324 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 521}
2024-10-05 15:52:51,324 - root - INFO - Epoch: 522
2024-10-05 15:52:51,770 - root - INFO - Avg loss: tensor(3.6270e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2529873847961426
2024-10-05 15:52:51,926 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:52,085 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:52,245 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:52,248 - root - INFO - Best val result: {'epoch': 522, 'loss': tensor(3.6270e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:52,249 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 522}
2024-10-05 15:52:52,250 - root - INFO - Epoch: 523
2024-10-05 15:52:52,681 - root - INFO - Avg loss: tensor(7.3601e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2463059425354004
2024-10-05 15:52:52,841 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:52,990 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:53,145 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:53,147 - root - INFO - Best val result: {'epoch': 523, 'loss': tensor(7.3601e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:53,148 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 523}
2024-10-05 15:52:53,148 - root - INFO - Epoch: 524
2024-10-05 15:52:53,597 - root - INFO - Avg loss: tensor(5.0148e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2603414058685303
2024-10-05 15:52:53,758 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:53,912 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:54,074 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:54,076 - root - INFO - Best val result: {'epoch': 524, 'loss': tensor(5.0148e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:54,077 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 524}
2024-10-05 15:52:54,078 - root - INFO - Epoch: 525
2024-10-05 15:52:54,507 - root - INFO - Avg loss: tensor(2.8378e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23331332206726074
2024-10-05 15:52:54,662 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:54,810 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:54,956 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:54,959 - root - INFO - Best val result: {'epoch': 525, 'loss': tensor(2.8378e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:54,960 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 525}
2024-10-05 15:52:54,960 - root - INFO - Epoch: 526
2024-10-05 15:52:55,376 - root - INFO - Avg loss: tensor(3.8090e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.230818510055542
2024-10-05 15:52:55,531 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:55,680 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:55,841 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:55,844 - root - INFO - Best val result: {'epoch': 526, 'loss': tensor(3.8090e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:55,845 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 526}
2024-10-05 15:52:55,845 - root - INFO - Epoch: 527
2024-10-05 15:52:56,257 - root - INFO - Avg loss: tensor(5.8407e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2318897247314453
2024-10-05 15:52:56,415 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:56,566 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:56,722 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:56,725 - root - INFO - Best val result: {'epoch': 527, 'loss': tensor(5.8407e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:56,726 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 527}
2024-10-05 15:52:56,726 - root - INFO - Epoch: 528
2024-10-05 15:52:57,151 - root - INFO - Avg loss: tensor(4.6518e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23450446128845215
2024-10-05 15:52:57,300 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:57,459 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:57,620 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:57,623 - root - INFO - Best val result: {'epoch': 528, 'loss': tensor(4.6518e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:57,624 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 528}
2024-10-05 15:52:57,624 - root - INFO - Epoch: 529
2024-10-05 15:52:58,045 - root - INFO - Avg loss: tensor(2.3536e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2325894832611084
2024-10-05 15:52:58,233 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:58,391 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:58,542 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:58,545 - root - INFO - Best val result: {'epoch': 529, 'loss': tensor(2.3536e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:58,546 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 529}
2024-10-05 15:52:58,546 - root - INFO - Epoch: 530
2024-10-05 15:52:58,966 - root - INFO - Avg loss: tensor(2.3294e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2336139678955078
2024-10-05 15:52:59,122 - root - INFO - Train accuracy: 1.0
2024-10-05 15:52:59,276 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:52:59,432 - root - INFO - Test accuracy: 1.0
2024-10-05 15:52:59,435 - root - INFO - Best val result: {'epoch': 530, 'loss': tensor(2.3294e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:52:59,436 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 530}
2024-10-05 15:52:59,436 - root - INFO - Epoch: 531
2024-10-05 15:52:59,875 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23163390159606934
2024-10-05 15:53:00,034 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:00,176 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:00,331 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:00,334 - root - INFO - Best val result: {'epoch': 531, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:00,335 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 531}
2024-10-05 15:53:00,336 - root - INFO - Epoch: 532
2024-10-05 15:53:00,761 - root - INFO - Avg loss: tensor(3.8172e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23444080352783203
2024-10-05 15:53:00,914 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:01,066 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:01,230 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:01,233 - root - INFO - Best val result: {'epoch': 532, 'loss': tensor(3.8172e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:01,234 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 532}
2024-10-05 15:53:01,235 - root - INFO - Epoch: 533
2024-10-05 15:53:01,657 - root - INFO - Avg loss: tensor(3.1457e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23297405242919922
2024-10-05 15:53:01,834 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:02,026 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:02,182 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:02,185 - root - INFO - Best val result: {'epoch': 533, 'loss': tensor(3.1457e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:02,185 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 533}
2024-10-05 15:53:02,186 - root - INFO - Epoch: 534
2024-10-05 15:53:02,610 - root - INFO - Avg loss: tensor(5.6651e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23476839065551758
2024-10-05 15:53:02,767 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:02,922 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:03,086 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:03,089 - root - INFO - Best val result: {'epoch': 534, 'loss': tensor(5.6651e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:03,090 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 534}
2024-10-05 15:53:03,090 - root - INFO - Epoch: 535
2024-10-05 15:53:03,509 - root - INFO - Avg loss: tensor(3.1488e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24248504638671875
2024-10-05 15:53:03,665 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:03,815 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:03,975 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:03,978 - root - INFO - Best val result: {'epoch': 535, 'loss': tensor(3.1488e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:03,979 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 535}
2024-10-05 15:53:03,979 - root - INFO - Epoch: 536
2024-10-05 15:53:04,404 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24042272567749023
2024-10-05 15:53:04,552 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:04,697 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:04,866 - root - INFO - Test accuracy: 0.99
2024-10-05 15:53:04,870 - root - INFO - Best val result: {'epoch': 536, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:04,870 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 536}
2024-10-05 15:53:04,870 - root - INFO - Epoch: 537
2024-10-05 15:53:05,306 - root - INFO - Avg loss: tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24016261100769043
2024-10-05 15:53:05,473 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:05,621 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:05,798 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:05,801 - root - INFO - Best val result: {'epoch': 537, 'loss': tensor(0.0023, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:05,802 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 537}
2024-10-05 15:53:05,802 - root - INFO - Epoch: 538
2024-10-05 15:53:06,328 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.29554033279418945
2024-10-05 15:53:06,494 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:06,654 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:06,814 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:06,817 - root - INFO - Best val result: {'epoch': 538, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:06,818 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 538}
2024-10-05 15:53:06,818 - root - INFO - Epoch: 539
2024-10-05 15:53:07,250 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2522733211517334
2024-10-05 15:53:07,426 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:07,583 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:07,744 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:07,747 - root - INFO - Best val result: {'epoch': 539, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:07,748 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 539}
2024-10-05 15:53:07,748 - root - INFO - Epoch: 540
2024-10-05 15:53:08,217 - root - INFO - Avg loss: tensor(9.4867e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25404834747314453
2024-10-05 15:53:08,388 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:08,535 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:08,685 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:08,688 - root - INFO - Best val result: {'epoch': 540, 'loss': tensor(9.4867e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:08,689 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 540}
2024-10-05 15:53:08,689 - root - INFO - Epoch: 541
2024-10-05 15:53:09,143 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25746917724609375
2024-10-05 15:53:09,317 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:09,486 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:09,639 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:09,642 - root - INFO - Best val result: {'epoch': 541, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:09,643 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 541}
2024-10-05 15:53:09,643 - root - INFO - Epoch: 542
2024-10-05 15:53:10,065 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23371148109436035
2024-10-05 15:53:10,218 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:10,367 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:10,526 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:10,530 - root - INFO - Best val result: {'epoch': 542, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:10,530 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 542}
2024-10-05 15:53:10,531 - root - INFO - Epoch: 543
2024-10-05 15:53:10,946 - root - INFO - Avg loss: tensor(5.7920e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2339003086090088
2024-10-05 15:53:11,107 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:11,259 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:11,414 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:11,416 - root - INFO - Best val result: {'epoch': 543, 'loss': tensor(5.7920e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:11,417 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 543}
2024-10-05 15:53:11,417 - root - INFO - Epoch: 544
2024-10-05 15:53:11,832 - root - INFO - Avg loss: tensor(2.2083e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2323436737060547
2024-10-05 15:53:11,979 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:12,120 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:12,277 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:12,280 - root - INFO - Best val result: {'epoch': 544, 'loss': tensor(2.2083e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:12,281 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 544}
2024-10-05 15:53:12,281 - root - INFO - Epoch: 545
2024-10-05 15:53:12,699 - root - INFO - Avg loss: tensor(4.6084e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2333836555480957
2024-10-05 15:53:12,861 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:13,016 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:13,174 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:13,176 - root - INFO - Best val result: {'epoch': 545, 'loss': tensor(4.6084e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:13,177 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 545}
2024-10-05 15:53:13,177 - root - INFO - Epoch: 546
2024-10-05 15:53:13,603 - root - INFO - Avg loss: tensor(2.2318e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2379460334777832
2024-10-05 15:53:13,761 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:13,909 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:14,060 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:14,063 - root - INFO - Best val result: {'epoch': 546, 'loss': tensor(2.2318e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:14,064 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 546}
2024-10-05 15:53:14,064 - root - INFO - Epoch: 547
2024-10-05 15:53:14,507 - root - INFO - Avg loss: tensor(6.8146e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24974751472473145
2024-10-05 15:53:14,664 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:14,817 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:14,981 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:14,984 - root - INFO - Best val result: {'epoch': 547, 'loss': tensor(6.8146e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:14,985 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 547}
2024-10-05 15:53:14,985 - root - INFO - Epoch: 548
2024-10-05 15:53:15,407 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23417973518371582
2024-10-05 15:53:15,562 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:15,707 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:15,856 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:15,860 - root - INFO - Best val result: {'epoch': 548, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:15,861 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 548}
2024-10-05 15:53:15,862 - root - INFO - Epoch: 549
2024-10-05 15:53:16,281 - root - INFO - Avg loss: tensor(9.8029e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23474478721618652
2024-10-05 15:53:16,431 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:16,584 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:16,750 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:16,753 - root - INFO - Best val result: {'epoch': 549, 'loss': tensor(9.8029e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:16,753 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 549}
2024-10-05 15:53:16,754 - root - INFO - Epoch: 550
2024-10-05 15:53:17,181 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.235093355178833
2024-10-05 15:53:17,332 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:17,480 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:17,625 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:17,628 - root - INFO - Best val result: {'epoch': 550, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:17,629 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 550}
2024-10-05 15:53:17,629 - root - INFO - Epoch: 551
2024-10-05 15:53:18,053 - root - INFO - Avg loss: tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23940634727478027
2024-10-05 15:53:18,211 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:53:18,367 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:18,527 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:18,530 - root - INFO - Best val result: {'epoch': 551, 'loss': tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:18,531 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 551}
2024-10-05 15:53:18,531 - root - INFO - Epoch: 552
2024-10-05 15:53:18,942 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2331387996673584
2024-10-05 15:53:19,097 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:19,248 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:19,405 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:19,409 - root - INFO - Best val result: {'epoch': 552, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:19,410 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 552}
2024-10-05 15:53:19,410 - root - INFO - Epoch: 553
2024-10-05 15:53:19,823 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23311448097229004
2024-10-05 15:53:19,988 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:20,145 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:20,311 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:20,314 - root - INFO - Best val result: {'epoch': 553, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:20,315 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 553}
2024-10-05 15:53:20,315 - root - INFO - Epoch: 554
2024-10-05 15:53:20,774 - root - INFO - Avg loss: tensor(4.6547e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25939273834228516
2024-10-05 15:53:20,936 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:21,096 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:21,262 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:21,264 - root - INFO - Best val result: {'epoch': 554, 'loss': tensor(4.6547e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:21,265 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 554}
2024-10-05 15:53:21,265 - root - INFO - Epoch: 555
2024-10-05 15:53:21,691 - root - INFO - Avg loss: tensor(7.1666e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23412680625915527
2024-10-05 15:53:21,839 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:21,989 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:22,147 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:22,150 - root - INFO - Best val result: {'epoch': 555, 'loss': tensor(7.1666e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:22,151 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 555}
2024-10-05 15:53:22,151 - root - INFO - Epoch: 556
2024-10-05 15:53:22,608 - root - INFO - Avg loss: tensor(2.0335e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25316667556762695
2024-10-05 15:53:22,800 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:22,950 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:23,108 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:23,111 - root - INFO - Best val result: {'epoch': 556, 'loss': tensor(2.0335e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:23,112 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 556}
2024-10-05 15:53:23,112 - root - INFO - Epoch: 557
2024-10-05 15:53:23,536 - root - INFO - Avg loss: tensor(3.6927e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23408293724060059
2024-10-05 15:53:23,725 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:23,877 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:24,034 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:24,037 - root - INFO - Best val result: {'epoch': 557, 'loss': tensor(3.6927e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:24,038 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 557}
2024-10-05 15:53:24,038 - root - INFO - Epoch: 558
2024-10-05 15:53:24,461 - root - INFO - Avg loss: tensor(3.5326e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2321314811706543
2024-10-05 15:53:24,607 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:24,756 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:24,918 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:24,921 - root - INFO - Best val result: {'epoch': 558, 'loss': tensor(3.5326e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:24,922 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 558}
2024-10-05 15:53:24,922 - root - INFO - Epoch: 559
2024-10-05 15:53:25,341 - root - INFO - Avg loss: tensor(2.0572e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23366665840148926
2024-10-05 15:53:25,498 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:25,650 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:25,806 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:25,809 - root - INFO - Best val result: {'epoch': 559, 'loss': tensor(2.0572e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:25,810 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 559}
2024-10-05 15:53:25,810 - root - INFO - Epoch: 560
2024-10-05 15:53:26,229 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.231489896774292
2024-10-05 15:53:26,418 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:26,563 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:26,726 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:26,730 - root - INFO - Best val result: {'epoch': 560, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:26,730 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 560}
2024-10-05 15:53:26,731 - root - INFO - Epoch: 561
2024-10-05 15:53:27,154 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2378520965576172
2024-10-05 15:53:27,317 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:27,472 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:27,633 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:27,636 - root - INFO - Best val result: {'epoch': 561, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:27,637 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 561}
2024-10-05 15:53:27,637 - root - INFO - Epoch: 562
2024-10-05 15:53:28,093 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2690310478210449
2024-10-05 15:53:28,285 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:28,443 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:28,609 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:28,612 - root - INFO - Best val result: {'epoch': 562, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:28,613 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 562}
2024-10-05 15:53:28,613 - root - INFO - Epoch: 563
2024-10-05 15:53:29,079 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2808971405029297
2024-10-05 15:53:29,266 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:29,423 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:29,590 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:29,593 - root - INFO - Best val result: {'epoch': 563, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:29,594 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 563}
2024-10-05 15:53:29,594 - root - INFO - Epoch: 564
2024-10-05 15:53:30,018 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23385930061340332
2024-10-05 15:53:30,173 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:30,325 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:30,481 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:30,484 - root - INFO - Best val result: {'epoch': 564, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:30,485 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 564}
2024-10-05 15:53:30,485 - root - INFO - Epoch: 565
2024-10-05 15:53:30,909 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23378372192382812
2024-10-05 15:53:31,096 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:31,245 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:31,408 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:31,411 - root - INFO - Best val result: {'epoch': 565, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:31,412 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 565}
2024-10-05 15:53:31,412 - root - INFO - Epoch: 566
2024-10-05 15:53:31,827 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23159313201904297
2024-10-05 15:53:31,969 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:32,119 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:32,265 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:32,268 - root - INFO - Best val result: {'epoch': 566, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:32,269 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 566}
2024-10-05 15:53:32,269 - root - INFO - Epoch: 567
2024-10-05 15:53:32,684 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23225688934326172
2024-10-05 15:53:32,840 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:32,988 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:33,135 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:33,139 - root - INFO - Best val result: {'epoch': 567, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:33,140 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 567}
2024-10-05 15:53:33,140 - root - INFO - Epoch: 568
2024-10-05 15:53:33,571 - root - INFO - Avg loss: tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23273062705993652
2024-10-05 15:53:33,741 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:33,890 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:34,048 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:34,052 - root - INFO - Best val result: {'epoch': 568, 'loss': tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:34,052 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 568}
2024-10-05 15:53:34,053 - root - INFO - Epoch: 569
2024-10-05 15:53:34,481 - root - INFO - Avg loss: tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23675751686096191
2024-10-05 15:53:34,634 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:34,788 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:34,949 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:34,952 - root - INFO - Best val result: {'epoch': 569, 'loss': tensor(0.0034, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:34,953 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 569}
2024-10-05 15:53:34,953 - root - INFO - Epoch: 570
2024-10-05 15:53:35,372 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23473405838012695
2024-10-05 15:53:35,531 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:35,681 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:35,844 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:35,847 - root - INFO - Best val result: {'epoch': 570, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:35,848 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 570}
2024-10-05 15:53:35,848 - root - INFO - Epoch: 571
2024-10-05 15:53:36,268 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23566436767578125
2024-10-05 15:53:36,428 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:36,577 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:36,725 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:36,728 - root - INFO - Best val result: {'epoch': 571, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:36,729 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 571}
2024-10-05 15:53:36,730 - root - INFO - Epoch: 572
2024-10-05 15:53:37,156 - root - INFO - Avg loss: tensor(6.5084e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23474979400634766
2024-10-05 15:53:37,313 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:37,467 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:37,657 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:37,660 - root - INFO - Best val result: {'epoch': 572, 'loss': tensor(6.5084e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:37,661 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 572}
2024-10-05 15:53:37,661 - root - INFO - Epoch: 573
2024-10-05 15:53:38,077 - root - INFO - Avg loss: tensor(5.9148e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23215150833129883
2024-10-05 15:53:38,236 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:38,385 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:38,542 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:38,544 - root - INFO - Best val result: {'epoch': 573, 'loss': tensor(5.9148e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:38,545 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 573}
2024-10-05 15:53:38,545 - root - INFO - Epoch: 574
2024-10-05 15:53:38,957 - root - INFO - Avg loss: tensor(3.5201e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22977781295776367
2024-10-05 15:53:39,131 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:39,286 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:39,448 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:39,451 - root - INFO - Best val result: {'epoch': 574, 'loss': tensor(3.5201e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:39,452 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 574}
2024-10-05 15:53:39,452 - root - INFO - Epoch: 575
2024-10-05 15:53:39,875 - root - INFO - Avg loss: tensor(0.0071, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23346543312072754
2024-10-05 15:53:40,032 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:40,176 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:40,335 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:40,339 - root - INFO - Best val result: {'epoch': 575, 'loss': tensor(0.0071, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:40,340 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 575}
2024-10-05 15:53:40,340 - root - INFO - Epoch: 576
2024-10-05 15:53:40,765 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2341477870941162
2024-10-05 15:53:40,925 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:41,073 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:41,221 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:41,224 - root - INFO - Best val result: {'epoch': 576, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:41,225 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 576}
2024-10-05 15:53:41,225 - root - INFO - Epoch: 577
2024-10-05 15:53:41,652 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2495269775390625
2024-10-05 15:53:41,805 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:41,951 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:42,101 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:42,104 - root - INFO - Best val result: {'epoch': 577, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:42,104 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 577}
2024-10-05 15:53:42,104 - root - INFO - Epoch: 578
2024-10-05 15:53:42,616 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3065495491027832
2024-10-05 15:53:42,770 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:42,921 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:43,084 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:43,088 - root - INFO - Best val result: {'epoch': 578, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:43,088 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 578}
2024-10-05 15:53:43,088 - root - INFO - Epoch: 579
2024-10-05 15:53:43,509 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23120975494384766
2024-10-05 15:53:43,679 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:43,819 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:43,981 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:43,984 - root - INFO - Best val result: {'epoch': 579, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:43,985 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 579}
2024-10-05 15:53:43,985 - root - INFO - Epoch: 580
2024-10-05 15:53:44,404 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23105096817016602
2024-10-05 15:53:44,573 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:44,720 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:44,878 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:44,881 - root - INFO - Best val result: {'epoch': 580, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:44,882 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 580}
2024-10-05 15:53:44,882 - root - INFO - Epoch: 581
2024-10-05 15:53:45,345 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26033592224121094
2024-10-05 15:53:45,519 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:45,664 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:45,850 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:45,853 - root - INFO - Best val result: {'epoch': 581, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:45,854 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 581}
2024-10-05 15:53:45,854 - root - INFO - Epoch: 582
2024-10-05 15:53:46,274 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2321462631225586
2024-10-05 15:53:46,444 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:46,587 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:46,750 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:46,753 - root - INFO - Best val result: {'epoch': 582, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:46,754 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 582}
2024-10-05 15:53:46,754 - root - INFO - Epoch: 583
2024-10-05 15:53:47,211 - root - INFO - Avg loss: tensor(8.3648e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2660844326019287
2024-10-05 15:53:47,363 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:47,514 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:47,694 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:47,697 - root - INFO - Best val result: {'epoch': 583, 'loss': tensor(8.3648e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:47,698 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 583}
2024-10-05 15:53:47,698 - root - INFO - Epoch: 584
2024-10-05 15:53:48,137 - root - INFO - Avg loss: tensor(6.3719e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2462613582611084
2024-10-05 15:53:48,296 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:48,442 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:48,604 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:48,608 - root - INFO - Best val result: {'epoch': 584, 'loss': tensor(6.3719e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:48,608 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 584}
2024-10-05 15:53:48,609 - root - INFO - Epoch: 585
2024-10-05 15:53:49,067 - root - INFO - Avg loss: tensor(4.4664e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26035499572753906
2024-10-05 15:53:49,234 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:49,383 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:49,552 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:49,556 - root - INFO - Best val result: {'epoch': 585, 'loss': tensor(4.4664e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:49,557 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 585}
2024-10-05 15:53:49,557 - root - INFO - Epoch: 586
2024-10-05 15:53:50,012 - root - INFO - Avg loss: tensor(1.3826e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25179457664489746
2024-10-05 15:53:50,185 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:50,332 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:50,489 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:50,493 - root - INFO - Best val result: {'epoch': 586, 'loss': tensor(1.3826e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:50,494 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 586}
2024-10-05 15:53:50,494 - root - INFO - Epoch: 587
2024-10-05 15:53:50,917 - root - INFO - Avg loss: tensor(2.8290e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23423123359680176
2024-10-05 15:53:51,077 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:51,216 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:51,372 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:51,376 - root - INFO - Best val result: {'epoch': 587, 'loss': tensor(2.8290e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:51,376 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 587}
2024-10-05 15:53:51,377 - root - INFO - Epoch: 588
2024-10-05 15:53:51,812 - root - INFO - Avg loss: tensor(3.0888e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25327634811401367
2024-10-05 15:53:51,968 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:52,132 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:52,299 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:52,301 - root - INFO - Best val result: {'epoch': 588, 'loss': tensor(3.0888e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:52,302 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 588}
2024-10-05 15:53:52,302 - root - INFO - Epoch: 589
2024-10-05 15:53:52,731 - root - INFO - Avg loss: tensor(2.7217e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23816657066345215
2024-10-05 15:53:52,890 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:53,039 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:53,188 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:53,191 - root - INFO - Best val result: {'epoch': 589, 'loss': tensor(2.7217e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:53,192 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 589}
2024-10-05 15:53:53,192 - root - INFO - Epoch: 590
2024-10-05 15:53:53,631 - root - INFO - Avg loss: tensor(1.2288e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23905730247497559
2024-10-05 15:53:53,780 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:53,930 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:54,080 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:54,084 - root - INFO - Best val result: {'epoch': 590, 'loss': tensor(1.2288e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:54,084 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 590}
2024-10-05 15:53:54,084 - root - INFO - Epoch: 591
2024-10-05 15:53:54,495 - root - INFO - Avg loss: tensor(3.0714e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23503375053405762
2024-10-05 15:53:54,655 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:54,804 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:54,968 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:54,971 - root - INFO - Best val result: {'epoch': 591, 'loss': tensor(3.0714e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:54,971 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 591}
2024-10-05 15:53:54,972 - root - INFO - Epoch: 592
2024-10-05 15:53:55,381 - root - INFO - Avg loss: tensor(8.3248e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23370718955993652
2024-10-05 15:53:55,540 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:55,690 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:55,846 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:55,849 - root - INFO - Best val result: {'epoch': 592, 'loss': tensor(8.3248e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:55,851 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 592}
2024-10-05 15:53:55,851 - root - INFO - Epoch: 593
2024-10-05 15:53:56,260 - root - INFO - Avg loss: tensor(5.1150e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23484253883361816
2024-10-05 15:53:56,413 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:56,562 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:56,711 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:56,714 - root - INFO - Best val result: {'epoch': 593, 'loss': tensor(5.1150e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:56,715 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 593}
2024-10-05 15:53:56,716 - root - INFO - Epoch: 594
2024-10-05 15:53:57,130 - root - INFO - Avg loss: tensor(1.5887e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2308189868927002
2024-10-05 15:53:57,294 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:57,442 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:57,602 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:57,605 - root - INFO - Best val result: {'epoch': 594, 'loss': tensor(1.5887e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:57,606 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 594}
2024-10-05 15:53:57,606 - root - INFO - Epoch: 595
2024-10-05 15:53:58,030 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2340543270111084
2024-10-05 15:53:58,209 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:58,359 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:58,521 - root - INFO - Test accuracy: 1.0
2024-10-05 15:53:58,524 - root - INFO - Best val result: {'epoch': 595, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:58,525 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 595}
2024-10-05 15:53:58,525 - root - INFO - Epoch: 596
2024-10-05 15:53:58,948 - root - INFO - Avg loss: tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23325538635253906
2024-10-05 15:53:59,106 - root - INFO - Train accuracy: 1.0
2024-10-05 15:53:59,262 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:53:59,459 - root - INFO - Test accuracy: 0.99
2024-10-05 15:53:59,462 - root - INFO - Best val result: {'epoch': 596, 'loss': tensor(0.0037, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:53:59,463 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 596}
2024-10-05 15:53:59,463 - root - INFO - Epoch: 597
2024-10-05 15:53:59,898 - root - INFO - Avg loss: tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24098873138427734
2024-10-05 15:54:00,064 - root - INFO - Train accuracy: 0.9833333333333333
2024-10-05 15:54:00,205 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:00,373 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:00,377 - root - INFO - Best val result: {'epoch': 597, 'loss': tensor(0.0030, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:00,378 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 597}
2024-10-05 15:54:00,378 - root - INFO - Epoch: 598
2024-10-05 15:54:00,837 - root - INFO - Avg loss: tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2494964599609375
2024-10-05 15:54:00,993 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:01,138 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:01,289 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:01,293 - root - INFO - Best val result: {'epoch': 598, 'loss': tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:01,294 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 598}
2024-10-05 15:54:01,294 - root - INFO - Epoch: 599
2024-10-05 15:54:01,730 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2460765838623047
2024-10-05 15:54:01,887 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:54:02,066 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:54:02,210 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:02,213 - root - INFO - Best val result: {'epoch': 598, 'loss': tensor(0.0056, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:02,214 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 599}
2024-10-05 15:54:02,217 - root - INFO - Epoch: 600
2024-10-05 15:54:02,647 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23443317413330078
2024-10-05 15:54:02,805 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:02,954 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:03,107 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:03,109 - root - INFO - Best val result: {'epoch': 600, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:03,110 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 600}
2024-10-05 15:54:03,110 - root - INFO - Epoch: 601
2024-10-05 15:54:03,530 - root - INFO - Avg loss: tensor(9.8205e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23535799980163574
2024-10-05 15:54:03,704 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:54:03,848 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:04,010 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:04,013 - root - INFO - Best val result: {'epoch': 601, 'loss': tensor(9.8205e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:04,014 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 601}
2024-10-05 15:54:04,014 - root - INFO - Epoch: 602
2024-10-05 15:54:04,541 - root - INFO - Avg loss: tensor(6.7631e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31856417655944824
2024-10-05 15:54:04,700 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:04,852 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:05,014 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:05,017 - root - INFO - Best val result: {'epoch': 602, 'loss': tensor(6.7631e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:05,018 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 602}
2024-10-05 15:54:05,018 - root - INFO - Epoch: 603
2024-10-05 15:54:05,489 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23713302612304688
2024-10-05 15:54:05,648 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:05,796 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:05,957 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:05,960 - root - INFO - Best val result: {'epoch': 603, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:05,961 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 603}
2024-10-05 15:54:05,961 - root - INFO - Epoch: 604
2024-10-05 15:54:06,413 - root - INFO - Avg loss: tensor(7.0318e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24396038055419922
2024-10-05 15:54:06,563 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:06,724 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:06,897 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:06,901 - root - INFO - Best val result: {'epoch': 604, 'loss': tensor(7.0318e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:06,902 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 604}
2024-10-05 15:54:06,902 - root - INFO - Epoch: 605
2024-10-05 15:54:07,401 - root - INFO - Avg loss: tensor(5.4151e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24182462692260742
2024-10-05 15:54:07,552 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:07,699 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:07,854 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:07,857 - root - INFO - Best val result: {'epoch': 605, 'loss': tensor(5.4151e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:07,857 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 605}
2024-10-05 15:54:07,858 - root - INFO - Epoch: 606
2024-10-05 15:54:08,282 - root - INFO - Avg loss: tensor(9.7975e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2332758903503418
2024-10-05 15:54:08,427 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:08,582 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:08,737 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:08,740 - root - INFO - Best val result: {'epoch': 606, 'loss': tensor(9.7975e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:08,740 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 606}
2024-10-05 15:54:08,740 - root - INFO - Epoch: 607
2024-10-05 15:54:09,150 - root - INFO - Avg loss: tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23511219024658203
2024-10-05 15:54:09,309 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:09,463 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:09,623 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:09,627 - root - INFO - Best val result: {'epoch': 607, 'loss': tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:09,628 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 607}
2024-10-05 15:54:09,628 - root - INFO - Epoch: 608
2024-10-05 15:54:10,060 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24104094505310059
2024-10-05 15:54:10,219 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:10,370 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:10,537 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:10,541 - root - INFO - Best val result: {'epoch': 608, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:10,541 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 608}
2024-10-05 15:54:10,541 - root - INFO - Epoch: 609
2024-10-05 15:54:10,987 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.241837739944458
2024-10-05 15:54:11,151 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:11,312 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:11,471 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:11,474 - root - INFO - Best val result: {'epoch': 609, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:11,475 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 609}
2024-10-05 15:54:11,475 - root - INFO - Epoch: 610
2024-10-05 15:54:11,901 - root - INFO - Avg loss: tensor(4.8064e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23683476448059082
2024-10-05 15:54:12,057 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:12,209 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:12,366 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:12,369 - root - INFO - Best val result: {'epoch': 610, 'loss': tensor(4.8064e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:12,369 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 610}
2024-10-05 15:54:12,370 - root - INFO - Epoch: 611
2024-10-05 15:54:12,792 - root - INFO - Avg loss: tensor(9.6736e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2438499927520752
2024-10-05 15:54:12,948 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:13,096 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:13,245 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:13,249 - root - INFO - Best val result: {'epoch': 611, 'loss': tensor(9.6736e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:13,250 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 611}
2024-10-05 15:54:13,250 - root - INFO - Epoch: 612
2024-10-05 15:54:13,741 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24915838241577148
2024-10-05 15:54:13,888 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:14,030 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:14,196 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:14,199 - root - INFO - Best val result: {'epoch': 612, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:14,201 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 612}
2024-10-05 15:54:14,201 - root - INFO - Epoch: 613
2024-10-05 15:54:14,684 - root - INFO - Avg loss: tensor(6.2521e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23267579078674316
2024-10-05 15:54:14,839 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:14,991 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:15,150 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:15,153 - root - INFO - Best val result: {'epoch': 613, 'loss': tensor(6.2521e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:15,153 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 613}
2024-10-05 15:54:15,153 - root - INFO - Epoch: 614
2024-10-05 15:54:15,580 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23721551895141602
2024-10-05 15:54:15,732 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:15,875 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:16,021 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:16,024 - root - INFO - Best val result: {'epoch': 614, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:16,024 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 614}
2024-10-05 15:54:16,025 - root - INFO - Epoch: 615
2024-10-05 15:54:16,459 - root - INFO - Avg loss: tensor(0.0058, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23390531539916992
2024-10-05 15:54:16,614 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:16,756 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:16,903 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:16,906 - root - INFO - Best val result: {'epoch': 615, 'loss': tensor(0.0058, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:16,907 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 615}
2024-10-05 15:54:16,907 - root - INFO - Epoch: 616
2024-10-05 15:54:17,408 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2367551326751709
2024-10-05 15:54:17,568 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:17,717 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:17,880 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:17,884 - root - INFO - Best val result: {'epoch': 616, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:17,884 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 616}
2024-10-05 15:54:17,885 - root - INFO - Epoch: 617
2024-10-05 15:54:18,396 - root - INFO - Avg loss: tensor(5.7999e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3178544044494629
2024-10-05 15:54:18,540 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:18,681 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:18,845 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:18,848 - root - INFO - Best val result: {'epoch': 617, 'loss': tensor(5.7999e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:18,849 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 617}
2024-10-05 15:54:18,849 - root - INFO - Epoch: 618
2024-10-05 15:54:19,325 - root - INFO - Avg loss: tensor(3.5673e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.238358736038208
2024-10-05 15:54:19,482 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:19,630 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:19,777 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:19,780 - root - INFO - Best val result: {'epoch': 618, 'loss': tensor(3.5673e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:19,781 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 618}
2024-10-05 15:54:19,781 - root - INFO - Epoch: 619
2024-10-05 15:54:20,243 - root - INFO - Avg loss: tensor(4.9393e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24358677864074707
2024-10-05 15:54:20,398 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:20,546 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:20,715 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:20,718 - root - INFO - Best val result: {'epoch': 619, 'loss': tensor(4.9393e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:20,719 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 619}
2024-10-05 15:54:20,719 - root - INFO - Epoch: 620
2024-10-05 15:54:21,171 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23662137985229492
2024-10-05 15:54:21,357 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:21,507 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:21,671 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:21,674 - root - INFO - Best val result: {'epoch': 620, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:21,675 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 620}
2024-10-05 15:54:21,675 - root - INFO - Epoch: 621
2024-10-05 15:54:22,201 - root - INFO - Avg loss: tensor(3.5501e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3190145492553711
2024-10-05 15:54:22,348 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:22,504 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:22,664 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:22,668 - root - INFO - Best val result: {'epoch': 621, 'loss': tensor(3.5501e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:22,669 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 621}
2024-10-05 15:54:22,669 - root - INFO - Epoch: 622
2024-10-05 15:54:23,094 - root - INFO - Avg loss: tensor(1.8086e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2364957332611084
2024-10-05 15:54:23,249 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:23,398 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:23,559 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:23,562 - root - INFO - Best val result: {'epoch': 622, 'loss': tensor(1.8086e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:23,563 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 622}
2024-10-05 15:54:23,564 - root - INFO - Epoch: 623
2024-10-05 15:54:23,984 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2345867156982422
2024-10-05 15:54:24,133 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:24,277 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:24,444 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:24,448 - root - INFO - Best val result: {'epoch': 623, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:24,448 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 623}
2024-10-05 15:54:24,448 - root - INFO - Epoch: 624
2024-10-05 15:54:24,909 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23415446281433105
2024-10-05 15:54:25,058 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:25,199 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:25,354 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:25,357 - root - INFO - Best val result: {'epoch': 624, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:25,358 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 624}
2024-10-05 15:54:25,358 - root - INFO - Epoch: 625
2024-10-05 15:54:25,782 - root - INFO - Avg loss: tensor(5.7508e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2376391887664795
2024-10-05 15:54:25,937 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:26,079 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:26,240 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:26,242 - root - INFO - Best val result: {'epoch': 625, 'loss': tensor(5.7508e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:26,243 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 625}
2024-10-05 15:54:26,243 - root - INFO - Epoch: 626
2024-10-05 15:54:26,728 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23795652389526367
2024-10-05 15:54:26,889 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:27,036 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:27,183 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:27,187 - root - INFO - Best val result: {'epoch': 626, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:27,188 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 626}
2024-10-05 15:54:27,188 - root - INFO - Epoch: 627
2024-10-05 15:54:27,607 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23954987525939941
2024-10-05 15:54:27,760 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:27,911 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:28,067 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:28,071 - root - INFO - Best val result: {'epoch': 627, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:28,072 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 627}
2024-10-05 15:54:28,072 - root - INFO - Epoch: 628
2024-10-05 15:54:28,519 - root - INFO - Avg loss: tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2585780620574951
2024-10-05 15:54:28,690 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:28,848 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:29,005 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:29,008 - root - INFO - Best val result: {'epoch': 628, 'loss': tensor(0.0094, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:29,009 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 628}
2024-10-05 15:54:29,009 - root - INFO - Epoch: 629
2024-10-05 15:54:29,511 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24851465225219727
2024-10-05 15:54:29,671 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:29,829 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:29,990 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:29,993 - root - INFO - Best val result: {'epoch': 629, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:29,994 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 629}
2024-10-05 15:54:29,994 - root - INFO - Epoch: 630
2024-10-05 15:54:30,436 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25571751594543457
2024-10-05 15:54:30,584 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:30,734 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:30,906 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:30,908 - root - INFO - Best val result: {'epoch': 630, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:30,909 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 630}
2024-10-05 15:54:30,909 - root - INFO - Epoch: 631
2024-10-05 15:54:31,403 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25822949409484863
2024-10-05 15:54:31,567 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:31,724 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:31,881 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:31,885 - root - INFO - Best val result: {'epoch': 631, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:31,886 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 631}
2024-10-05 15:54:31,886 - root - INFO - Epoch: 632
2024-10-05 15:54:32,357 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2656667232513428
2024-10-05 15:54:32,518 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:32,666 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:32,826 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:32,829 - root - INFO - Best val result: {'epoch': 632, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:32,830 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 632}
2024-10-05 15:54:32,830 - root - INFO - Epoch: 633
2024-10-05 15:54:33,252 - root - INFO - Avg loss: tensor(8.5638e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24326848983764648
2024-10-05 15:54:33,414 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:33,552 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:33,707 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:33,710 - root - INFO - Best val result: {'epoch': 633, 'loss': tensor(8.5638e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:33,711 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 633}
2024-10-05 15:54:33,711 - root - INFO - Epoch: 634
2024-10-05 15:54:34,149 - root - INFO - Avg loss: tensor(3.9826e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24308180809020996
2024-10-05 15:54:34,298 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:34,451 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:34,599 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:34,602 - root - INFO - Best val result: {'epoch': 634, 'loss': tensor(3.9826e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:34,604 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 634}
2024-10-05 15:54:34,604 - root - INFO - Epoch: 635
2024-10-05 15:54:35,029 - root - INFO - Avg loss: tensor(3.3667e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2376408576965332
2024-10-05 15:54:35,188 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:35,340 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:35,496 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:35,499 - root - INFO - Best val result: {'epoch': 635, 'loss': tensor(3.3667e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:35,500 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 635}
2024-10-05 15:54:35,500 - root - INFO - Epoch: 636
2024-10-05 15:54:36,006 - root - INFO - Avg loss: tensor(2.2082e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24125313758850098
2024-10-05 15:54:36,171 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:36,323 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:36,471 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:36,474 - root - INFO - Best val result: {'epoch': 636, 'loss': tensor(2.2082e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:36,475 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 636}
2024-10-05 15:54:36,475 - root - INFO - Epoch: 637
2024-10-05 15:54:36,903 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24325013160705566
2024-10-05 15:54:37,048 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:37,198 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:37,362 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:37,365 - root - INFO - Best val result: {'epoch': 637, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:37,366 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 637}
2024-10-05 15:54:37,366 - root - INFO - Epoch: 638
2024-10-05 15:54:37,809 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24775052070617676
2024-10-05 15:54:37,960 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:38,110 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:38,262 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:38,265 - root - INFO - Best val result: {'epoch': 638, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:38,265 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 638}
2024-10-05 15:54:38,265 - root - INFO - Epoch: 639
2024-10-05 15:54:38,685 - root - INFO - Avg loss: tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23433542251586914
2024-10-05 15:54:38,832 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:38,994 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:39,162 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:39,165 - root - INFO - Best val result: {'epoch': 639, 'loss': tensor(0.0031, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:39,165 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 639}
2024-10-05 15:54:39,166 - root - INFO - Epoch: 640
2024-10-05 15:54:39,589 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23572325706481934
2024-10-05 15:54:39,736 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:39,884 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:40,045 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:40,048 - root - INFO - Best val result: {'epoch': 640, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:40,049 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 640}
2024-10-05 15:54:40,049 - root - INFO - Epoch: 641
2024-10-05 15:54:40,469 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.230757474899292
2024-10-05 15:54:40,626 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:40,784 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:40,941 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:40,943 - root - INFO - Best val result: {'epoch': 641, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:40,944 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 641}
2024-10-05 15:54:40,944 - root - INFO - Epoch: 642
2024-10-05 15:54:41,421 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23459267616271973
2024-10-05 15:54:41,569 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:41,724 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:41,884 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:41,887 - root - INFO - Best val result: {'epoch': 642, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:41,888 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 642}
2024-10-05 15:54:41,888 - root - INFO - Epoch: 643
2024-10-05 15:54:42,427 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25456690788269043
2024-10-05 15:54:42,584 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:42,735 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:42,888 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:42,892 - root - INFO - Best val result: {'epoch': 643, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:42,892 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 643}
2024-10-05 15:54:42,893 - root - INFO - Epoch: 644
2024-10-05 15:54:43,323 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.237440824508667
2024-10-05 15:54:43,478 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:43,626 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:43,777 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:43,780 - root - INFO - Best val result: {'epoch': 644, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:43,781 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 644}
2024-10-05 15:54:43,781 - root - INFO - Epoch: 645
2024-10-05 15:54:44,271 - root - INFO - Avg loss: tensor(7.7318e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24165606498718262
2024-10-05 15:54:44,422 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:44,578 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:44,737 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:44,740 - root - INFO - Best val result: {'epoch': 645, 'loss': tensor(7.7318e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:44,741 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 645}
2024-10-05 15:54:44,741 - root - INFO - Epoch: 646
2024-10-05 15:54:45,169 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2381443977355957
2024-10-05 15:54:45,319 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:45,482 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:45,631 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:45,635 - root - INFO - Best val result: {'epoch': 646, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:45,636 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 646}
2024-10-05 15:54:45,636 - root - INFO - Epoch: 647
2024-10-05 15:54:46,092 - root - INFO - Avg loss: tensor(6.5620e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24547863006591797
2024-10-05 15:54:46,249 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:46,396 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:46,553 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:46,556 - root - INFO - Best val result: {'epoch': 647, 'loss': tensor(6.5620e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:46,557 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 647}
2024-10-05 15:54:46,557 - root - INFO - Epoch: 648
2024-10-05 15:54:47,032 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2411947250366211
2024-10-05 15:54:47,182 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:47,341 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:47,513 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:47,516 - root - INFO - Best val result: {'epoch': 648, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:47,517 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 648}
2024-10-05 15:54:47,517 - root - INFO - Epoch: 649
2024-10-05 15:54:47,948 - root - INFO - Avg loss: tensor(7.5818e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23476266860961914
2024-10-05 15:54:48,105 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:48,258 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:48,412 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:48,415 - root - INFO - Best val result: {'epoch': 649, 'loss': tensor(7.5818e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:48,416 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 649}
2024-10-05 15:54:48,416 - root - INFO - Epoch: 650
2024-10-05 15:54:48,850 - root - INFO - Avg loss: tensor(8.7866e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23645281791687012
2024-10-05 15:54:48,997 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:49,161 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:49,318 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:49,322 - root - INFO - Best val result: {'epoch': 650, 'loss': tensor(8.7866e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:49,323 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 650}
2024-10-05 15:54:49,323 - root - INFO - Epoch: 651
2024-10-05 15:54:49,749 - root - INFO - Avg loss: tensor(5.3836e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2313065528869629
2024-10-05 15:54:49,910 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:50,050 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:50,199 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:50,202 - root - INFO - Best val result: {'epoch': 651, 'loss': tensor(5.3836e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:50,204 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 651}
2024-10-05 15:54:50,204 - root - INFO - Epoch: 652
2024-10-05 15:54:50,696 - root - INFO - Avg loss: tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2355363368988037
2024-10-05 15:54:50,884 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:51,051 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:51,205 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:51,208 - root - INFO - Best val result: {'epoch': 652, 'loss': tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:51,209 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 652}
2024-10-05 15:54:51,210 - root - INFO - Epoch: 653
2024-10-05 15:54:51,647 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24708056449890137
2024-10-05 15:54:51,805 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:51,969 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:52,131 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:52,135 - root - INFO - Best val result: {'epoch': 653, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:52,136 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 653}
2024-10-05 15:54:52,136 - root - INFO - Epoch: 654
2024-10-05 15:54:52,582 - root - INFO - Avg loss: tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23996424674987793
2024-10-05 15:54:52,740 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:52,898 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:53,057 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:53,061 - root - INFO - Best val result: {'epoch': 654, 'loss': tensor(0.0005, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:53,062 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 654}
2024-10-05 15:54:53,062 - root - INFO - Epoch: 655
2024-10-05 15:54:53,496 - root - INFO - Avg loss: tensor(3.9366e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23325181007385254
2024-10-05 15:54:53,652 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:53,802 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:53,964 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:53,968 - root - INFO - Best val result: {'epoch': 655, 'loss': tensor(3.9366e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:53,969 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 655}
2024-10-05 15:54:53,969 - root - INFO - Epoch: 656
2024-10-05 15:54:54,398 - root - INFO - Avg loss: tensor(4.0873e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23850035667419434
2024-10-05 15:54:54,563 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:54,733 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:54,915 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:54,918 - root - INFO - Best val result: {'epoch': 656, 'loss': tensor(4.0873e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:54,919 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 656}
2024-10-05 15:54:54,919 - root - INFO - Epoch: 657
2024-10-05 15:54:55,343 - root - INFO - Avg loss: tensor(6.8775e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23417949676513672
2024-10-05 15:54:55,492 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:55,645 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:55,812 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:55,815 - root - INFO - Best val result: {'epoch': 657, 'loss': tensor(6.8775e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:55,816 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 657}
2024-10-05 15:54:55,816 - root - INFO - Epoch: 658
2024-10-05 15:54:56,248 - root - INFO - Avg loss: tensor(4.8432e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24746918678283691
2024-10-05 15:54:56,411 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:56,563 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:56,731 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:56,735 - root - INFO - Best val result: {'epoch': 658, 'loss': tensor(4.8432e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:56,736 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 658}
2024-10-05 15:54:56,736 - root - INFO - Epoch: 659
2024-10-05 15:54:57,154 - root - INFO - Avg loss: tensor(2.2466e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23327398300170898
2024-10-05 15:54:57,310 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:57,456 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:57,603 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:57,606 - root - INFO - Best val result: {'epoch': 659, 'loss': tensor(2.2466e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:57,606 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 659}
2024-10-05 15:54:57,607 - root - INFO - Epoch: 660
2024-10-05 15:54:58,021 - root - INFO - Avg loss: tensor(4.7636e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2352769374847412
2024-10-05 15:54:58,178 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:58,323 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:58,470 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:58,473 - root - INFO - Best val result: {'epoch': 660, 'loss': tensor(4.7636e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:58,475 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 660}
2024-10-05 15:54:58,475 - root - INFO - Epoch: 661
2024-10-05 15:54:58,919 - root - INFO - Avg loss: tensor(2.4901e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24530673027038574
2024-10-05 15:54:59,068 - root - INFO - Train accuracy: 1.0
2024-10-05 15:54:59,220 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:54:59,403 - root - INFO - Test accuracy: 1.0
2024-10-05 15:54:59,406 - root - INFO - Best val result: {'epoch': 661, 'loss': tensor(2.4901e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:54:59,407 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 661}
2024-10-05 15:54:59,407 - root - INFO - Epoch: 662
2024-10-05 15:54:59,867 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2630739212036133
2024-10-05 15:55:00,046 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:00,213 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:00,367 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:00,370 - root - INFO - Best val result: {'epoch': 662, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:00,371 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 662}
2024-10-05 15:55:00,371 - root - INFO - Epoch: 663
2024-10-05 15:55:00,791 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23072052001953125
2024-10-05 15:55:00,974 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:01,116 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:01,275 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:01,279 - root - INFO - Best val result: {'epoch': 663, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:01,280 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 663}
2024-10-05 15:55:01,280 - root - INFO - Epoch: 664
2024-10-05 15:55:01,700 - root - INFO - Avg loss: tensor(4.8005e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2328321933746338
2024-10-05 15:55:01,843 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:01,990 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:02,136 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:02,139 - root - INFO - Best val result: {'epoch': 664, 'loss': tensor(4.8005e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:02,140 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 664}
2024-10-05 15:55:02,140 - root - INFO - Epoch: 665
2024-10-05 15:55:02,556 - root - INFO - Avg loss: tensor(7.5540e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23181772232055664
2024-10-05 15:55:02,708 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:02,876 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:03,034 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:03,037 - root - INFO - Best val result: {'epoch': 665, 'loss': tensor(7.5540e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:03,038 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 665}
2024-10-05 15:55:03,038 - root - INFO - Epoch: 666
2024-10-05 15:55:03,467 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23184990882873535
2024-10-05 15:55:03,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:03,762 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:03,920 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:03,923 - root - INFO - Best val result: {'epoch': 666, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:03,924 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 666}
2024-10-05 15:55:03,924 - root - INFO - Epoch: 667
2024-10-05 15:55:04,357 - root - INFO - Avg loss: tensor(2.3686e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330608367919922
2024-10-05 15:55:04,508 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:04,662 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:04,816 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:04,819 - root - INFO - Best val result: {'epoch': 667, 'loss': tensor(2.3686e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:04,819 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 667}
2024-10-05 15:55:04,820 - root - INFO - Epoch: 668
2024-10-05 15:55:05,241 - root - INFO - Avg loss: tensor(2.0107e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2348783016204834
2024-10-05 15:55:05,395 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:05,547 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:05,709 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:05,712 - root - INFO - Best val result: {'epoch': 668, 'loss': tensor(2.0107e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:05,713 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 668}
2024-10-05 15:55:05,713 - root - INFO - Epoch: 669
2024-10-05 15:55:06,128 - root - INFO - Avg loss: tensor(1.7504e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23046517372131348
2024-10-05 15:55:06,293 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:06,456 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:06,614 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:06,617 - root - INFO - Best val result: {'epoch': 669, 'loss': tensor(1.7504e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:06,617 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 669}
2024-10-05 15:55:06,618 - root - INFO - Epoch: 670
2024-10-05 15:55:07,031 - root - INFO - Avg loss: tensor(1.7136e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23088383674621582
2024-10-05 15:55:07,187 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:07,346 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:07,510 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:07,513 - root - INFO - Best val result: {'epoch': 670, 'loss': tensor(1.7136e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:07,513 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 670}
2024-10-05 15:55:07,514 - root - INFO - Epoch: 671
2024-10-05 15:55:07,933 - root - INFO - Avg loss: tensor(2.5054e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22938919067382812
2024-10-05 15:55:08,093 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:08,245 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:08,413 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:08,416 - root - INFO - Best val result: {'epoch': 671, 'loss': tensor(2.5054e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:08,418 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 671}
2024-10-05 15:55:08,418 - root - INFO - Epoch: 672
2024-10-05 15:55:08,844 - root - INFO - Avg loss: tensor(6.4111e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23581910133361816
2024-10-05 15:55:08,997 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:09,138 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:09,284 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:09,287 - root - INFO - Best val result: {'epoch': 672, 'loss': tensor(6.4111e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:09,288 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 672}
2024-10-05 15:55:09,288 - root - INFO - Epoch: 673
2024-10-05 15:55:09,722 - root - INFO - Avg loss: tensor(3.1114e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23714733123779297
2024-10-05 15:55:09,881 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:10,031 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:10,195 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:10,198 - root - INFO - Best val result: {'epoch': 673, 'loss': tensor(3.1114e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:10,199 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 673}
2024-10-05 15:55:10,199 - root - INFO - Epoch: 674
2024-10-05 15:55:10,611 - root - INFO - Avg loss: tensor(1.7174e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23427510261535645
2024-10-05 15:55:10,767 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:10,917 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:11,075 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:11,078 - root - INFO - Best val result: {'epoch': 674, 'loss': tensor(1.7174e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:11,080 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 674}
2024-10-05 15:55:11,080 - root - INFO - Epoch: 675
2024-10-05 15:55:11,501 - root - INFO - Avg loss: tensor(1.7098e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23990321159362793
2024-10-05 15:55:11,669 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:11,819 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:11,972 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:11,975 - root - INFO - Best val result: {'epoch': 675, 'loss': tensor(1.7098e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:11,976 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 675}
2024-10-05 15:55:11,976 - root - INFO - Epoch: 676
2024-10-05 15:55:12,399 - root - INFO - Avg loss: tensor(2.0794e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23627090454101562
2024-10-05 15:55:12,555 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:12,704 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:12,869 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:12,872 - root - INFO - Best val result: {'epoch': 676, 'loss': tensor(2.0794e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:12,873 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 676}
2024-10-05 15:55:12,873 - root - INFO - Epoch: 677
2024-10-05 15:55:13,307 - root - INFO - Avg loss: tensor(1.0563e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23849177360534668
2024-10-05 15:55:13,464 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:13,615 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:13,779 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:13,782 - root - INFO - Best val result: {'epoch': 677, 'loss': tensor(1.0563e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:13,783 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 677}
2024-10-05 15:55:13,783 - root - INFO - Epoch: 678
2024-10-05 15:55:14,316 - root - INFO - Avg loss: tensor(9.4349e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.30335164070129395
2024-10-05 15:55:14,488 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:14,638 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:14,799 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:14,802 - root - INFO - Best val result: {'epoch': 678, 'loss': tensor(9.4349e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:14,802 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 678}
2024-10-05 15:55:14,802 - root - INFO - Epoch: 679
2024-10-05 15:55:15,250 - root - INFO - Avg loss: tensor(3.8893e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24943113327026367
2024-10-05 15:55:15,414 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:15,571 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:15,729 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:15,732 - root - INFO - Best val result: {'epoch': 679, 'loss': tensor(3.8893e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:15,732 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 679}
2024-10-05 15:55:15,733 - root - INFO - Epoch: 680
2024-10-05 15:55:16,166 - root - INFO - Avg loss: tensor(8.6450e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24651217460632324
2024-10-05 15:55:16,322 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:16,477 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:16,632 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:16,635 - root - INFO - Best val result: {'epoch': 680, 'loss': tensor(8.6450e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:16,636 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 680}
2024-10-05 15:55:16,636 - root - INFO - Epoch: 681
2024-10-05 15:55:17,060 - root - INFO - Avg loss: tensor(3.6646e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2431344985961914
2024-10-05 15:55:17,218 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:17,380 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:17,538 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:17,542 - root - INFO - Best val result: {'epoch': 681, 'loss': tensor(3.6646e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:17,543 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 681}
2024-10-05 15:55:17,543 - root - INFO - Epoch: 682
2024-10-05 15:55:17,956 - root - INFO - Avg loss: tensor(1.8177e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23492813110351562
2024-10-05 15:55:18,118 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:18,279 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:18,433 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:18,436 - root - INFO - Best val result: {'epoch': 682, 'loss': tensor(1.8177e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:18,436 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 682}
2024-10-05 15:55:18,437 - root - INFO - Epoch: 683
2024-10-05 15:55:18,924 - root - INFO - Avg loss: tensor(2.3433e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2844569683074951
2024-10-05 15:55:19,092 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:19,236 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:19,412 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:19,415 - root - INFO - Best val result: {'epoch': 683, 'loss': tensor(2.3433e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:19,416 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 683}
2024-10-05 15:55:19,416 - root - INFO - Epoch: 684
2024-10-05 15:55:19,853 - root - INFO - Avg loss: tensor(1.0099e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24151611328125
2024-10-05 15:55:20,004 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:20,153 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:20,311 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:20,314 - root - INFO - Best val result: {'epoch': 684, 'loss': tensor(1.0099e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:20,314 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 684}
2024-10-05 15:55:20,315 - root - INFO - Epoch: 685
2024-10-05 15:55:20,731 - root - INFO - Avg loss: tensor(3.6332e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23426413536071777
2024-10-05 15:55:20,892 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:21,042 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:21,193 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:21,196 - root - INFO - Best val result: {'epoch': 685, 'loss': tensor(3.6332e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:21,197 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 685}
2024-10-05 15:55:21,197 - root - INFO - Epoch: 686
2024-10-05 15:55:21,616 - root - INFO - Avg loss: tensor(8.0763e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23474574089050293
2024-10-05 15:55:21,771 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:21,928 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:22,085 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:22,088 - root - INFO - Best val result: {'epoch': 686, 'loss': tensor(8.0763e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:22,089 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 686}
2024-10-05 15:55:22,089 - root - INFO - Epoch: 687
2024-10-05 15:55:22,505 - root - INFO - Avg loss: tensor(4.4036e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23248863220214844
2024-10-05 15:55:22,676 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:22,824 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:22,979 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:22,982 - root - INFO - Best val result: {'epoch': 687, 'loss': tensor(4.4036e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:22,983 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 687}
2024-10-05 15:55:22,983 - root - INFO - Epoch: 688
2024-10-05 15:55:23,400 - root - INFO - Avg loss: tensor(3.6602e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23193025588989258
2024-10-05 15:55:23,560 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:23,711 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:23,864 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:23,867 - root - INFO - Best val result: {'epoch': 688, 'loss': tensor(3.6602e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:23,868 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 688}
2024-10-05 15:55:23,868 - root - INFO - Epoch: 689
2024-10-05 15:55:24,326 - root - INFO - Avg loss: tensor(4.9113e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27033329010009766
2024-10-05 15:55:24,488 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:24,668 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:24,826 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:24,829 - root - INFO - Best val result: {'epoch': 689, 'loss': tensor(4.9113e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:24,830 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 689}
2024-10-05 15:55:24,830 - root - INFO - Epoch: 690
2024-10-05 15:55:25,257 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23396658897399902
2024-10-05 15:55:25,417 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:25,582 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:25,744 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:25,748 - root - INFO - Best val result: {'epoch': 690, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:25,748 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 690}
2024-10-05 15:55:25,749 - root - INFO - Epoch: 691
2024-10-05 15:55:26,176 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24018168449401855
2024-10-05 15:55:26,323 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:26,479 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:26,633 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:26,636 - root - INFO - Best val result: {'epoch': 691, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:26,637 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 691}
2024-10-05 15:55:26,637 - root - INFO - Epoch: 692
2024-10-05 15:55:27,063 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23351001739501953
2024-10-05 15:55:27,223 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:27,383 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:27,536 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:27,540 - root - INFO - Best val result: {'epoch': 692, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:27,541 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 692}
2024-10-05 15:55:27,541 - root - INFO - Epoch: 693
2024-10-05 15:55:27,966 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23926091194152832
2024-10-05 15:55:28,123 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:55:28,282 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:28,443 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:28,447 - root - INFO - Best val result: {'epoch': 693, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:28,447 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 693}
2024-10-05 15:55:28,448 - root - INFO - Epoch: 694
2024-10-05 15:55:28,868 - root - INFO - Avg loss: tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23322772979736328
2024-10-05 15:55:29,055 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:29,218 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:29,370 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:29,374 - root - INFO - Best val result: {'epoch': 694, 'loss': tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:29,375 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 694}
2024-10-05 15:55:29,375 - root - INFO - Epoch: 695
2024-10-05 15:55:29,802 - root - INFO - Avg loss: tensor(0.0128, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23749852180480957
2024-10-05 15:55:29,959 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:30,110 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:30,259 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:30,262 - root - INFO - Best val result: {'epoch': 695, 'loss': tensor(0.0128, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:30,263 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 695}
2024-10-05 15:55:30,263 - root - INFO - Epoch: 696
2024-10-05 15:55:30,695 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23150300979614258
2024-10-05 15:55:30,854 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:31,012 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:31,172 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:31,176 - root - INFO - Best val result: {'epoch': 696, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:31,176 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 696}
2024-10-05 15:55:31,176 - root - INFO - Epoch: 697
2024-10-05 15:55:31,605 - root - INFO - Avg loss: tensor(9.9219e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24827122688293457
2024-10-05 15:55:31,761 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:31,912 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:32,078 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:32,081 - root - INFO - Best val result: {'epoch': 697, 'loss': tensor(9.9219e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:32,082 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 697}
2024-10-05 15:55:32,082 - root - INFO - Epoch: 698
2024-10-05 15:55:32,511 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2446727752685547
2024-10-05 15:55:32,669 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:32,827 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:33,001 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:33,004 - root - INFO - Best val result: {'epoch': 698, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:33,005 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 698}
2024-10-05 15:55:33,005 - root - INFO - Epoch: 699
2024-10-05 15:55:33,468 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2708261013031006
2024-10-05 15:55:33,619 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:33,768 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:33,929 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:33,932 - root - INFO - Best val result: {'epoch': 699, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:33,933 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 699}
2024-10-05 15:55:33,933 - root - INFO - Epoch: 700
2024-10-05 15:55:34,382 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2658102512359619
2024-10-05 15:55:34,556 - root - INFO - Train accuracy: 0.9916666666666667
2024-10-05 15:55:34,705 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:34,868 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:34,871 - root - INFO - Best val result: {'epoch': 700, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:34,871 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 700}
2024-10-05 15:55:34,871 - root - INFO - Epoch: 701
2024-10-05 15:55:35,328 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28237056732177734
2024-10-05 15:55:35,471 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:35,616 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:35,772 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:35,775 - root - INFO - Best val result: {'epoch': 701, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:35,776 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 701}
2024-10-05 15:55:35,776 - root - INFO - Epoch: 702
2024-10-05 15:55:36,243 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2812373638153076
2024-10-05 15:55:36,399 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:36,533 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:36,691 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:36,694 - root - INFO - Best val result: {'epoch': 702, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:36,695 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 702}
2024-10-05 15:55:36,696 - root - INFO - Epoch: 703
2024-10-05 15:55:37,174 - root - INFO - Avg loss: tensor(9.7459e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2850923538208008
2024-10-05 15:55:37,351 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:37,503 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:37,657 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:37,660 - root - INFO - Best val result: {'epoch': 703, 'loss': tensor(9.7459e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:37,661 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 703}
2024-10-05 15:55:37,661 - root - INFO - Epoch: 704
2024-10-05 15:55:38,147 - root - INFO - Avg loss: tensor(7.4000e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28513145446777344
2024-10-05 15:55:38,320 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:38,471 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:38,633 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:38,636 - root - INFO - Best val result: {'epoch': 704, 'loss': tensor(7.4000e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:38,637 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 704}
2024-10-05 15:55:38,637 - root - INFO - Epoch: 705
2024-10-05 15:55:39,103 - root - INFO - Avg loss: tensor(4.7450e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28324317932128906
2024-10-05 15:55:39,258 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:39,422 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:39,578 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:39,581 - root - INFO - Best val result: {'epoch': 705, 'loss': tensor(4.7450e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:39,582 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 705}
2024-10-05 15:55:39,582 - root - INFO - Epoch: 706
2024-10-05 15:55:40,047 - root - INFO - Avg loss: tensor(9.2034e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2864246368408203
2024-10-05 15:55:40,207 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:40,344 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:40,499 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:40,503 - root - INFO - Best val result: {'epoch': 706, 'loss': tensor(9.2034e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:40,504 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 706}
2024-10-05 15:55:40,504 - root - INFO - Epoch: 707
2024-10-05 15:55:40,973 - root - INFO - Avg loss: tensor(5.6100e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28316283226013184
2024-10-05 15:55:41,128 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:41,275 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:41,436 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:41,439 - root - INFO - Best val result: {'epoch': 707, 'loss': tensor(5.6100e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:41,440 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 707}
2024-10-05 15:55:41,440 - root - INFO - Epoch: 708
2024-10-05 15:55:41,928 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3128335475921631
2024-10-05 15:55:42,077 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:42,225 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:42,415 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:42,418 - root - INFO - Best val result: {'epoch': 708, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:42,418 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 708}
2024-10-05 15:55:42,419 - root - INFO - Epoch: 709
2024-10-05 15:55:42,881 - root - INFO - Avg loss: tensor(6.4199e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2696976661682129
2024-10-05 15:55:43,046 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:43,186 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:43,351 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:43,354 - root - INFO - Best val result: {'epoch': 709, 'loss': tensor(6.4199e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:43,355 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 709}
2024-10-05 15:55:43,355 - root - INFO - Epoch: 710
2024-10-05 15:55:43,766 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23509836196899414
2024-10-05 15:55:43,911 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:44,063 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:44,227 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:44,230 - root - INFO - Best val result: {'epoch': 710, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:44,231 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 710}
2024-10-05 15:55:44,231 - root - INFO - Epoch: 711
2024-10-05 15:55:44,665 - root - INFO - Avg loss: tensor(9.6794e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24268126487731934
2024-10-05 15:55:44,824 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:44,980 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:45,144 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:45,148 - root - INFO - Best val result: {'epoch': 711, 'loss': tensor(9.6794e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:45,148 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 711}
2024-10-05 15:55:45,149 - root - INFO - Epoch: 712
2024-10-05 15:55:45,582 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23837947845458984
2024-10-05 15:55:45,744 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:45,892 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:46,059 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:46,062 - root - INFO - Best val result: {'epoch': 712, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:46,063 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 712}
2024-10-05 15:55:46,064 - root - INFO - Epoch: 713
2024-10-05 15:55:46,516 - root - INFO - Avg loss: tensor(9.6384e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2616109848022461
2024-10-05 15:55:46,683 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:46,829 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:46,993 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:46,996 - root - INFO - Best val result: {'epoch': 713, 'loss': tensor(9.6384e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:46,997 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 713}
2024-10-05 15:55:46,997 - root - INFO - Epoch: 714
2024-10-05 15:55:47,455 - root - INFO - Avg loss: tensor(3.6221e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2629268169403076
2024-10-05 15:55:47,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:47,780 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:47,926 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:47,929 - root - INFO - Best val result: {'epoch': 714, 'loss': tensor(3.6221e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:47,929 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 714}
2024-10-05 15:55:47,929 - root - INFO - Epoch: 715
2024-10-05 15:55:48,396 - root - INFO - Avg loss: tensor(3.0252e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26732730865478516
2024-10-05 15:55:48,550 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:48,698 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:48,860 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:48,863 - root - INFO - Best val result: {'epoch': 715, 'loss': tensor(3.0252e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:48,864 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 715}
2024-10-05 15:55:48,864 - root - INFO - Epoch: 716
2024-10-05 15:55:49,338 - root - INFO - Avg loss: tensor(2.5315e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.276853084564209
2024-10-05 15:55:49,492 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:49,640 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:49,801 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:49,804 - root - INFO - Best val result: {'epoch': 716, 'loss': tensor(2.5315e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:49,805 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 716}
2024-10-05 15:55:49,805 - root - INFO - Epoch: 717
2024-10-05 15:55:50,282 - root - INFO - Avg loss: tensor(2.5677e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2716488838195801
2024-10-05 15:55:50,444 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:50,601 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:50,772 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:50,775 - root - INFO - Best val result: {'epoch': 717, 'loss': tensor(2.5677e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:50,776 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 717}
2024-10-05 15:55:50,776 - root - INFO - Epoch: 718
2024-10-05 15:55:51,228 - root - INFO - Avg loss: tensor(2.4147e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24889183044433594
2024-10-05 15:55:51,383 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:51,534 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:51,697 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:51,700 - root - INFO - Best val result: {'epoch': 718, 'loss': tensor(2.4147e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:51,701 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 718}
2024-10-05 15:55:51,701 - root - INFO - Epoch: 719
2024-10-05 15:55:52,122 - root - INFO - Avg loss: tensor(5.6076e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23475193977355957
2024-10-05 15:55:52,273 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:52,420 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:52,576 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:52,580 - root - INFO - Best val result: {'epoch': 719, 'loss': tensor(5.6076e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:52,581 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 719}
2024-10-05 15:55:52,581 - root - INFO - Epoch: 720
2024-10-05 15:55:53,008 - root - INFO - Avg loss: tensor(8.3695e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23717641830444336
2024-10-05 15:55:53,159 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:53,336 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:53,494 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:53,496 - root - INFO - Best val result: {'epoch': 720, 'loss': tensor(8.3695e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:53,497 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 720}
2024-10-05 15:55:53,497 - root - INFO - Epoch: 721
2024-10-05 15:55:53,915 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23395991325378418
2024-10-05 15:55:54,063 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:54,213 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:54,371 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:54,374 - root - INFO - Best val result: {'epoch': 721, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:54,375 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 721}
2024-10-05 15:55:54,375 - root - INFO - Epoch: 722
2024-10-05 15:55:54,787 - root - INFO - Avg loss: tensor(5.6124e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23241329193115234
2024-10-05 15:55:54,942 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:55,088 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:55,245 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:55,248 - root - INFO - Best val result: {'epoch': 722, 'loss': tensor(5.6124e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:55,249 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 722}
2024-10-05 15:55:55,249 - root - INFO - Epoch: 723
2024-10-05 15:55:55,669 - root - INFO - Avg loss: tensor(2.0192e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2355794906616211
2024-10-05 15:55:55,816 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:55,962 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:56,121 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:56,124 - root - INFO - Best val result: {'epoch': 723, 'loss': tensor(2.0192e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:56,125 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 723}
2024-10-05 15:55:56,125 - root - INFO - Epoch: 724
2024-10-05 15:55:56,572 - root - INFO - Avg loss: tensor(1.8296e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23339080810546875
2024-10-05 15:55:56,731 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:56,868 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:57,040 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:57,044 - root - INFO - Best val result: {'epoch': 724, 'loss': tensor(1.8296e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:57,045 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 724}
2024-10-05 15:55:57,045 - root - INFO - Epoch: 725
2024-10-05 15:55:57,484 - root - INFO - Avg loss: tensor(1.4503e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23960661888122559
2024-10-05 15:55:57,634 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:57,775 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:57,933 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:57,936 - root - INFO - Best val result: {'epoch': 725, 'loss': tensor(1.4503e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:57,937 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 725}
2024-10-05 15:55:57,937 - root - INFO - Epoch: 726
2024-10-05 15:55:58,371 - root - INFO - Avg loss: tensor(2.4617e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23883891105651855
2024-10-05 15:55:58,532 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:58,682 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:58,852 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:58,855 - root - INFO - Best val result: {'epoch': 726, 'loss': tensor(2.4617e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:58,856 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 726}
2024-10-05 15:55:58,856 - root - INFO - Epoch: 727
2024-10-05 15:55:59,288 - root - INFO - Avg loss: tensor(3.2941e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23737096786499023
2024-10-05 15:55:59,447 - root - INFO - Train accuracy: 1.0
2024-10-05 15:55:59,592 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:55:59,753 - root - INFO - Test accuracy: 1.0
2024-10-05 15:55:59,757 - root - INFO - Best val result: {'epoch': 727, 'loss': tensor(3.2941e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:55:59,758 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 727}
2024-10-05 15:55:59,758 - root - INFO - Epoch: 728
2024-10-05 15:56:00,188 - root - INFO - Avg loss: tensor(2.2997e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2377924919128418
2024-10-05 15:56:00,335 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:00,479 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:00,625 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:00,628 - root - INFO - Best val result: {'epoch': 728, 'loss': tensor(2.2997e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:00,629 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 728}
2024-10-05 15:56:00,629 - root - INFO - Epoch: 729
2024-10-05 15:56:01,059 - root - INFO - Avg loss: tensor(1.3558e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24103403091430664
2024-10-05 15:56:01,209 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:01,359 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:01,504 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:01,507 - root - INFO - Best val result: {'epoch': 729, 'loss': tensor(1.3558e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:01,508 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 729}
2024-10-05 15:56:01,508 - root - INFO - Epoch: 730
2024-10-05 15:56:01,932 - root - INFO - Avg loss: tensor(3.0691e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23607635498046875
2024-10-05 15:56:02,083 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:02,221 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:02,377 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:02,380 - root - INFO - Best val result: {'epoch': 730, 'loss': tensor(3.0691e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:02,381 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 730}
2024-10-05 15:56:02,381 - root - INFO - Epoch: 731
2024-10-05 15:56:02,806 - root - INFO - Avg loss: tensor(2.1946e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23520588874816895
2024-10-05 15:56:02,968 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:03,119 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:03,265 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:03,267 - root - INFO - Best val result: {'epoch': 731, 'loss': tensor(2.1946e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:03,268 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 731}
2024-10-05 15:56:03,268 - root - INFO - Epoch: 732
2024-10-05 15:56:03,685 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23508095741271973
2024-10-05 15:56:03,831 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:03,979 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:04,138 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:04,141 - root - INFO - Best val result: {'epoch': 732, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:04,142 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 732}
2024-10-05 15:56:04,142 - root - INFO - Epoch: 733
2024-10-05 15:56:04,576 - root - INFO - Avg loss: tensor(6.0703e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24290060997009277
2024-10-05 15:56:04,743 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:04,895 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:05,050 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:05,053 - root - INFO - Best val result: {'epoch': 733, 'loss': tensor(6.0703e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:05,054 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 733}
2024-10-05 15:56:05,054 - root - INFO - Epoch: 734
2024-10-05 15:56:05,480 - root - INFO - Avg loss: tensor(7.0085e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2414112091064453
2024-10-05 15:56:05,634 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:05,787 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:05,956 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:05,959 - root - INFO - Best val result: {'epoch': 734, 'loss': tensor(7.0085e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:05,960 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 734}
2024-10-05 15:56:05,960 - root - INFO - Epoch: 735
2024-10-05 15:56:06,384 - root - INFO - Avg loss: tensor(2.2461e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23792266845703125
2024-10-05 15:56:06,554 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:06,695 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:06,852 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:06,855 - root - INFO - Best val result: {'epoch': 735, 'loss': tensor(2.2461e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:06,856 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 735}
2024-10-05 15:56:06,856 - root - INFO - Epoch: 736
2024-10-05 15:56:07,288 - root - INFO - Avg loss: tensor(8.9074e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24291062355041504
2024-10-05 15:56:07,448 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:07,586 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:07,747 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:07,750 - root - INFO - Best val result: {'epoch': 736, 'loss': tensor(8.9074e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:07,751 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 736}
2024-10-05 15:56:07,751 - root - INFO - Epoch: 737
2024-10-05 15:56:08,177 - root - INFO - Avg loss: tensor(1.1754e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23413372039794922
2024-10-05 15:56:08,327 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:08,477 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:08,641 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:08,644 - root - INFO - Best val result: {'epoch': 737, 'loss': tensor(1.1754e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:08,645 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 737}
2024-10-05 15:56:08,646 - root - INFO - Epoch: 738
2024-10-05 15:56:09,068 - root - INFO - Avg loss: tensor(1.8586e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23447203636169434
2024-10-05 15:56:09,222 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:09,389 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:09,544 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:09,547 - root - INFO - Best val result: {'epoch': 738, 'loss': tensor(1.8586e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:09,547 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 738}
2024-10-05 15:56:09,548 - root - INFO - Epoch: 739
2024-10-05 15:56:09,972 - root - INFO - Avg loss: tensor(1.6142e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23463916778564453
2024-10-05 15:56:10,127 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:10,280 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:10,437 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:10,440 - root - INFO - Best val result: {'epoch': 739, 'loss': tensor(1.6142e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:10,441 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 739}
2024-10-05 15:56:10,441 - root - INFO - Epoch: 740
2024-10-05 15:56:10,862 - root - INFO - Avg loss: tensor(1.0839e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2324826717376709
2024-10-05 15:56:11,041 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:11,191 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:11,354 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:11,356 - root - INFO - Best val result: {'epoch': 740, 'loss': tensor(1.0839e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:11,357 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 740}
2024-10-05 15:56:11,357 - root - INFO - Epoch: 741
2024-10-05 15:56:11,813 - root - INFO - Avg loss: tensor(1.0132e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26535463333129883
2024-10-05 15:56:11,983 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:12,137 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:12,302 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:12,306 - root - INFO - Best val result: {'epoch': 741, 'loss': tensor(1.0132e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:12,307 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 741}
2024-10-05 15:56:12,307 - root - INFO - Epoch: 742
2024-10-05 15:56:12,729 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330315113067627
2024-10-05 15:56:12,882 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:13,058 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:13,248 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:13,251 - root - INFO - Best val result: {'epoch': 742, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:13,252 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 742}
2024-10-05 15:56:13,252 - root - INFO - Epoch: 743
2024-10-05 15:56:13,678 - root - INFO - Avg loss: tensor(8.8167e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2353534698486328
2024-10-05 15:56:13,862 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:14,021 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:14,184 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:14,188 - root - INFO - Best val result: {'epoch': 743, 'loss': tensor(8.8167e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:14,188 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 743}
2024-10-05 15:56:14,188 - root - INFO - Epoch: 744
2024-10-05 15:56:14,645 - root - INFO - Avg loss: tensor(3.1678e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26715683937072754
2024-10-05 15:56:14,800 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:14,949 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:15,097 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:15,101 - root - INFO - Best val result: {'epoch': 744, 'loss': tensor(3.1678e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:15,102 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 744}
2024-10-05 15:56:15,102 - root - INFO - Epoch: 745
2024-10-05 15:56:15,527 - root - INFO - Avg loss: tensor(7.5335e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23892879486083984
2024-10-05 15:56:15,686 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:15,866 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:16,030 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:16,032 - root - INFO - Best val result: {'epoch': 745, 'loss': tensor(7.5335e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:16,033 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 745}
2024-10-05 15:56:16,033 - root - INFO - Epoch: 746
2024-10-05 15:56:16,472 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24325132369995117
2024-10-05 15:56:16,620 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:16,777 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:16,945 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:16,948 - root - INFO - Best val result: {'epoch': 746, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:16,949 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 746}
2024-10-05 15:56:16,949 - root - INFO - Epoch: 747
2024-10-05 15:56:17,379 - root - INFO - Avg loss: tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2419431209564209
2024-10-05 15:56:17,536 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:17,689 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:17,845 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:17,848 - root - INFO - Best val result: {'epoch': 747, 'loss': tensor(0.0055, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:17,849 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 747}
2024-10-05 15:56:17,849 - root - INFO - Epoch: 748
2024-10-05 15:56:18,267 - root - INFO - Avg loss: tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23421859741210938
2024-10-05 15:56:18,423 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:18,575 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:18,744 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:18,747 - root - INFO - Best val result: {'epoch': 748, 'loss': tensor(0.0018, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:18,748 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 748}
2024-10-05 15:56:18,748 - root - INFO - Epoch: 749
2024-10-05 15:56:19,165 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23445701599121094
2024-10-05 15:56:19,331 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:19,485 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:19,635 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:19,638 - root - INFO - Best val result: {'epoch': 749, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:19,639 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 749}
2024-10-05 15:56:19,639 - root - INFO - Epoch: 750
2024-10-05 15:56:20,045 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23268723487854004
2024-10-05 15:56:20,199 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:20,335 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:20,498 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:20,501 - root - INFO - Best val result: {'epoch': 750, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:20,502 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 750}
2024-10-05 15:56:20,502 - root - INFO - Epoch: 751
2024-10-05 15:56:20,936 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2352008819580078
2024-10-05 15:56:21,100 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:21,252 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:21,409 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:21,412 - root - INFO - Best val result: {'epoch': 751, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:21,412 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 751}
2024-10-05 15:56:21,412 - root - INFO - Epoch: 752
2024-10-05 15:56:21,828 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23240399360656738
2024-10-05 15:56:21,981 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:22,129 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:22,291 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:22,295 - root - INFO - Best val result: {'epoch': 752, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:22,296 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 752}
2024-10-05 15:56:22,296 - root - INFO - Epoch: 753
2024-10-05 15:56:22,727 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2326664924621582
2024-10-05 15:56:22,870 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:23,024 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:23,174 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:23,177 - root - INFO - Best val result: {'epoch': 753, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:23,178 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 753}
2024-10-05 15:56:23,178 - root - INFO - Epoch: 754
2024-10-05 15:56:23,592 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23137187957763672
2024-10-05 15:56:23,747 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:23,889 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:24,048 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:24,052 - root - INFO - Best val result: {'epoch': 754, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:24,053 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 754}
2024-10-05 15:56:24,053 - root - INFO - Epoch: 755
2024-10-05 15:56:24,470 - root - INFO - Avg loss: tensor(5.0264e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23385095596313477
2024-10-05 15:56:24,623 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:24,772 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:24,932 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:24,936 - root - INFO - Best val result: {'epoch': 755, 'loss': tensor(5.0264e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:24,936 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 755}
2024-10-05 15:56:24,937 - root - INFO - Epoch: 756
2024-10-05 15:56:25,350 - root - INFO - Avg loss: tensor(8.4630e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23321294784545898
2024-10-05 15:56:25,503 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:25,639 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:25,802 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:25,804 - root - INFO - Best val result: {'epoch': 756, 'loss': tensor(8.4630e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:25,805 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 756}
2024-10-05 15:56:25,805 - root - INFO - Epoch: 757
2024-10-05 15:56:26,222 - root - INFO - Avg loss: tensor(3.8378e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23395895957946777
2024-10-05 15:56:26,386 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:26,532 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:26,693 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:26,696 - root - INFO - Best val result: {'epoch': 757, 'loss': tensor(3.8378e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:26,697 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 757}
2024-10-05 15:56:26,697 - root - INFO - Epoch: 758
2024-10-05 15:56:27,115 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2369086742401123
2024-10-05 15:56:27,272 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:27,421 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:27,578 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:27,581 - root - INFO - Best val result: {'epoch': 758, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:27,582 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 758}
2024-10-05 15:56:27,583 - root - INFO - Epoch: 759
2024-10-05 15:56:28,001 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2389087677001953
2024-10-05 15:56:28,151 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:28,310 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:28,468 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:28,471 - root - INFO - Best val result: {'epoch': 759, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:28,471 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 759}
2024-10-05 15:56:28,472 - root - INFO - Epoch: 760
2024-10-05 15:56:28,915 - root - INFO - Avg loss: tensor(6.7800e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23502159118652344
2024-10-05 15:56:29,079 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:29,230 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:29,376 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:29,379 - root - INFO - Best val result: {'epoch': 760, 'loss': tensor(6.7800e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:29,380 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 760}
2024-10-05 15:56:29,380 - root - INFO - Epoch: 761
2024-10-05 15:56:29,826 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23257660865783691
2024-10-05 15:56:29,983 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:30,130 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:30,279 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:30,283 - root - INFO - Best val result: {'epoch': 761, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:30,283 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 761}
2024-10-05 15:56:30,284 - root - INFO - Epoch: 762
2024-10-05 15:56:30,711 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23618078231811523
2024-10-05 15:56:30,862 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:31,000 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:31,163 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:31,166 - root - INFO - Best val result: {'epoch': 762, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:31,168 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 762}
2024-10-05 15:56:31,168 - root - INFO - Epoch: 763
2024-10-05 15:56:31,578 - root - INFO - Avg loss: tensor(3.6951e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2344822883605957
2024-10-05 15:56:31,755 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:31,885 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:32,042 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:32,045 - root - INFO - Best val result: {'epoch': 763, 'loss': tensor(3.6951e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:32,046 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 763}
2024-10-05 15:56:32,046 - root - INFO - Epoch: 764
2024-10-05 15:56:32,512 - root - INFO - Avg loss: tensor(4.5499e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26741480827331543
2024-10-05 15:56:32,669 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:32,827 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:32,972 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:32,975 - root - INFO - Best val result: {'epoch': 764, 'loss': tensor(4.5499e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:32,976 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 764}
2024-10-05 15:56:32,976 - root - INFO - Epoch: 765
2024-10-05 15:56:33,394 - root - INFO - Avg loss: tensor(5.8786e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23523521423339844
2024-10-05 15:56:33,574 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:33,719 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:33,872 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:33,875 - root - INFO - Best val result: {'epoch': 765, 'loss': tensor(5.8786e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:33,876 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 765}
2024-10-05 15:56:33,876 - root - INFO - Epoch: 766
2024-10-05 15:56:34,290 - root - INFO - Avg loss: tensor(3.3416e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23362493515014648
2024-10-05 15:56:34,449 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:34,589 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:34,753 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:34,756 - root - INFO - Best val result: {'epoch': 766, 'loss': tensor(3.3416e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:34,757 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 766}
2024-10-05 15:56:34,757 - root - INFO - Epoch: 767
2024-10-05 15:56:35,179 - root - INFO - Avg loss: tensor(2.7381e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2369091510772705
2024-10-05 15:56:35,327 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:35,474 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:35,628 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:35,632 - root - INFO - Best val result: {'epoch': 767, 'loss': tensor(2.7381e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:35,632 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 767}
2024-10-05 15:56:35,633 - root - INFO - Epoch: 768
2024-10-05 15:56:36,101 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25021791458129883
2024-10-05 15:56:36,271 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:36,436 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:36,594 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:36,597 - root - INFO - Best val result: {'epoch': 768, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:36,598 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 768}
2024-10-05 15:56:36,598 - root - INFO - Epoch: 769
2024-10-05 15:56:37,022 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23409390449523926
2024-10-05 15:56:37,179 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:37,329 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:37,480 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:37,484 - root - INFO - Best val result: {'epoch': 769, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:37,484 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 769}
2024-10-05 15:56:37,484 - root - INFO - Epoch: 770
2024-10-05 15:56:37,901 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.232865571975708
2024-10-05 15:56:38,055 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:38,211 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:38,371 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:38,374 - root - INFO - Best val result: {'epoch': 770, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:38,375 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 770}
2024-10-05 15:56:38,375 - root - INFO - Epoch: 771
2024-10-05 15:56:38,801 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23618006706237793
2024-10-05 15:56:38,959 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:39,110 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:39,279 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:39,283 - root - INFO - Best val result: {'epoch': 771, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:39,284 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 771}
2024-10-05 15:56:39,284 - root - INFO - Epoch: 772
2024-10-05 15:56:39,703 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23415279388427734
2024-10-05 15:56:39,863 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:40,029 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:40,193 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:40,196 - root - INFO - Best val result: {'epoch': 772, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:40,197 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 772}
2024-10-05 15:56:40,197 - root - INFO - Epoch: 773
2024-10-05 15:56:40,621 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23488473892211914
2024-10-05 15:56:40,783 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:40,974 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:41,133 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:41,136 - root - INFO - Best val result: {'epoch': 773, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:41,137 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 773}
2024-10-05 15:56:41,137 - root - INFO - Epoch: 774
2024-10-05 15:56:41,563 - root - INFO - Avg loss: tensor(3.3895e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2352275848388672
2024-10-05 15:56:41,711 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:41,859 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:42,004 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:42,008 - root - INFO - Best val result: {'epoch': 774, 'loss': tensor(3.3895e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:42,009 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 774}
2024-10-05 15:56:42,009 - root - INFO - Epoch: 775
2024-10-05 15:56:42,473 - root - INFO - Avg loss: tensor(3.6075e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2560710906982422
2024-10-05 15:56:42,643 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:42,804 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:42,963 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:42,966 - root - INFO - Best val result: {'epoch': 775, 'loss': tensor(3.6075e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:42,967 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 775}
2024-10-05 15:56:42,967 - root - INFO - Epoch: 776
2024-10-05 15:56:43,402 - root - INFO - Avg loss: tensor(2.8036e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23871922492980957
2024-10-05 15:56:43,584 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:43,730 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:43,885 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:43,888 - root - INFO - Best val result: {'epoch': 776, 'loss': tensor(2.8036e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:43,889 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 776}
2024-10-05 15:56:43,889 - root - INFO - Epoch: 777
2024-10-05 15:56:44,312 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.233320951461792
2024-10-05 15:56:44,474 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:44,616 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:44,773 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:44,777 - root - INFO - Best val result: {'epoch': 777, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:44,778 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 777}
2024-10-05 15:56:44,778 - root - INFO - Epoch: 778
2024-10-05 15:56:45,217 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24036550521850586
2024-10-05 15:56:45,363 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:45,513 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:45,671 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:45,675 - root - INFO - Best val result: {'epoch': 778, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:45,675 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 778}
2024-10-05 15:56:45,676 - root - INFO - Epoch: 779
2024-10-05 15:56:46,122 - root - INFO - Avg loss: tensor(2.5787e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23614287376403809
2024-10-05 15:56:46,278 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:46,424 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:46,584 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:46,587 - root - INFO - Best val result: {'epoch': 779, 'loss': tensor(2.5787e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:46,588 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 779}
2024-10-05 15:56:46,588 - root - INFO - Epoch: 780
2024-10-05 15:56:47,010 - root - INFO - Avg loss: tensor(3.3184e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23638582229614258
2024-10-05 15:56:47,167 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:47,316 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:47,479 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:47,483 - root - INFO - Best val result: {'epoch': 780, 'loss': tensor(3.3184e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:47,484 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 780}
2024-10-05 15:56:47,484 - root - INFO - Epoch: 781
2024-10-05 15:56:47,903 - root - INFO - Avg loss: tensor(2.5783e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2355356216430664
2024-10-05 15:56:48,067 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:48,209 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:48,373 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:48,376 - root - INFO - Best val result: {'epoch': 781, 'loss': tensor(2.5783e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:48,377 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 781}
2024-10-05 15:56:48,377 - root - INFO - Epoch: 782
2024-10-05 15:56:48,795 - root - INFO - Avg loss: tensor(0.0045, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23562169075012207
2024-10-05 15:56:48,957 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:49,104 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:49,279 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:49,282 - root - INFO - Best val result: {'epoch': 782, 'loss': tensor(0.0045, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:49,283 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 782}
2024-10-05 15:56:49,283 - root - INFO - Epoch: 783
2024-10-05 15:56:49,701 - root - INFO - Avg loss: tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2330472469329834
2024-10-05 15:56:49,859 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:50,022 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:50,182 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:50,184 - root - INFO - Best val result: {'epoch': 783, 'loss': tensor(0.0040, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:50,185 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 783}
2024-10-05 15:56:50,185 - root - INFO - Epoch: 784
2024-10-05 15:56:50,620 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23572635650634766
2024-10-05 15:56:50,806 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:50,949 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:51,105 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:51,108 - root - INFO - Best val result: {'epoch': 784, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:51,109 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 784}
2024-10-05 15:56:51,109 - root - INFO - Epoch: 785
2024-10-05 15:56:51,544 - root - INFO - Avg loss: tensor(6.9697e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24167752265930176
2024-10-05 15:56:51,707 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:51,857 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:52,023 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:52,026 - root - INFO - Best val result: {'epoch': 785, 'loss': tensor(6.9697e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:52,027 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 785}
2024-10-05 15:56:52,027 - root - INFO - Epoch: 786
2024-10-05 15:56:52,449 - root - INFO - Avg loss: tensor(5.8843e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24142050743103027
2024-10-05 15:56:52,636 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:52,785 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:52,956 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:52,959 - root - INFO - Best val result: {'epoch': 786, 'loss': tensor(5.8843e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:52,961 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 786}
2024-10-05 15:56:52,961 - root - INFO - Epoch: 787
2024-10-05 15:56:53,403 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24202394485473633
2024-10-05 15:56:53,560 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:53,737 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:53,901 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:53,905 - root - INFO - Best val result: {'epoch': 787, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:53,906 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 787}
2024-10-05 15:56:53,906 - root - INFO - Epoch: 788
2024-10-05 15:56:54,351 - root - INFO - Avg loss: tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2472989559173584
2024-10-05 15:56:54,513 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:54,665 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:54,831 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:54,834 - root - INFO - Best val result: {'epoch': 788, 'loss': tensor(0.0017, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:54,835 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 788}
2024-10-05 15:56:54,835 - root - INFO - Epoch: 789
2024-10-05 15:56:55,297 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2582278251647949
2024-10-05 15:56:55,483 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:55,635 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:55,803 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:55,807 - root - INFO - Best val result: {'epoch': 789, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:55,808 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 789}
2024-10-05 15:56:55,808 - root - INFO - Epoch: 790
2024-10-05 15:56:56,271 - root - INFO - Avg loss: tensor(9.2712e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2575833797454834
2024-10-05 15:56:56,455 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:56,602 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:56,752 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:56,756 - root - INFO - Best val result: {'epoch': 790, 'loss': tensor(9.2712e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:56,756 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 790}
2024-10-05 15:56:56,756 - root - INFO - Epoch: 791
2024-10-05 15:56:57,171 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23222851753234863
2024-10-05 15:56:57,323 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:57,479 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:57,645 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:57,648 - root - INFO - Best val result: {'epoch': 791, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:57,649 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 791}
2024-10-05 15:56:57,649 - root - INFO - Epoch: 792
2024-10-05 15:56:58,105 - root - INFO - Avg loss: tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2686038017272949
2024-10-05 15:56:58,282 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:58,432 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:58,602 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:58,605 - root - INFO - Best val result: {'epoch': 792, 'loss': tensor(0.0022, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:58,606 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 792}
2024-10-05 15:56:58,606 - root - INFO - Epoch: 793
2024-10-05 15:56:59,068 - root - INFO - Avg loss: tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26131129264831543
2024-10-05 15:56:59,231 - root - INFO - Train accuracy: 1.0
2024-10-05 15:56:59,388 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:56:59,535 - root - INFO - Test accuracy: 1.0
2024-10-05 15:56:59,538 - root - INFO - Best val result: {'epoch': 793, 'loss': tensor(0.0007, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:56:59,540 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 793}
2024-10-05 15:56:59,540 - root - INFO - Epoch: 794
2024-10-05 15:56:59,970 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2392585277557373
2024-10-05 15:57:00,133 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:00,300 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:00,444 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:00,447 - root - INFO - Best val result: {'epoch': 794, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:00,447 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 794}
2024-10-05 15:57:00,447 - root - INFO - Epoch: 795
2024-10-05 15:57:00,884 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2536354064941406
2024-10-05 15:57:01,050 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:01,201 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:01,357 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:01,360 - root - INFO - Best val result: {'epoch': 795, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:01,361 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 795}
2024-10-05 15:57:01,361 - root - INFO - Epoch: 796
2024-10-05 15:57:01,771 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23253536224365234
2024-10-05 15:57:01,926 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:02,064 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:02,235 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:02,238 - root - INFO - Best val result: {'epoch': 796, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:02,239 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 796}
2024-10-05 15:57:02,239 - root - INFO - Epoch: 797
2024-10-05 15:57:02,659 - root - INFO - Avg loss: tensor(2.9904e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23314380645751953
2024-10-05 15:57:02,823 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:02,980 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:03,123 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:03,126 - root - INFO - Best val result: {'epoch': 797, 'loss': tensor(2.9904e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:03,127 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 797}
2024-10-05 15:57:03,127 - root - INFO - Epoch: 798
2024-10-05 15:57:03,579 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26850008964538574
2024-10-05 15:57:03,736 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:03,885 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:04,038 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:04,041 - root - INFO - Best val result: {'epoch': 798, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:04,042 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 798}
2024-10-05 15:57:04,042 - root - INFO - Epoch: 799
2024-10-05 15:57:04,464 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23306512832641602
2024-10-05 15:57:04,615 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:04,757 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:04,909 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:04,912 - root - INFO - Best val result: {'epoch': 799, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:04,913 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 799}
2024-10-05 15:57:04,913 - root - INFO - Epoch: 800
2024-10-05 15:57:05,328 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23115921020507812
2024-10-05 15:57:05,519 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:05,673 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:05,839 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:05,842 - root - INFO - Best val result: {'epoch': 800, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:05,842 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 800}
2024-10-05 15:57:05,842 - root - INFO - Epoch: 801
2024-10-05 15:57:06,284 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24794507026672363
2024-10-05 15:57:06,445 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:06,594 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:06,756 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:06,760 - root - INFO - Best val result: {'epoch': 801, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:06,760 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 801}
2024-10-05 15:57:06,761 - root - INFO - Epoch: 802
2024-10-05 15:57:07,172 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22905540466308594
2024-10-05 15:57:07,328 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:07,479 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:07,636 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:07,639 - root - INFO - Best val result: {'epoch': 802, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:07,640 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 802}
2024-10-05 15:57:07,640 - root - INFO - Epoch: 803
2024-10-05 15:57:08,049 - root - INFO - Avg loss: tensor(4.0305e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23370647430419922
2024-10-05 15:57:08,202 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:08,357 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:08,513 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:08,516 - root - INFO - Best val result: {'epoch': 803, 'loss': tensor(4.0305e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:08,517 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 803}
2024-10-05 15:57:08,517 - root - INFO - Epoch: 804
2024-10-05 15:57:08,936 - root - INFO - Avg loss: tensor(2.2418e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2332301139831543
2024-10-05 15:57:09,110 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:09,264 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:09,420 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:09,423 - root - INFO - Best val result: {'epoch': 804, 'loss': tensor(2.2418e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:09,424 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 804}
2024-10-05 15:57:09,424 - root - INFO - Epoch: 805
2024-10-05 15:57:09,827 - root - INFO - Avg loss: tensor(2.2136e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23138713836669922
2024-10-05 15:57:09,985 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:10,140 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:10,296 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:10,300 - root - INFO - Best val result: {'epoch': 805, 'loss': tensor(2.2136e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:10,302 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 805}
2024-10-05 15:57:10,302 - root - INFO - Epoch: 806
2024-10-05 15:57:10,724 - root - INFO - Avg loss: tensor(3.1401e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2328031063079834
2024-10-05 15:57:10,880 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:11,027 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:11,186 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:11,189 - root - INFO - Best val result: {'epoch': 806, 'loss': tensor(3.1401e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:11,189 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 806}
2024-10-05 15:57:11,190 - root - INFO - Epoch: 807
2024-10-05 15:57:11,631 - root - INFO - Avg loss: tensor(1.5924e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24583172798156738
2024-10-05 15:57:11,787 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:11,948 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:12,106 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:12,108 - root - INFO - Best val result: {'epoch': 807, 'loss': tensor(1.5924e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:12,109 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 807}
2024-10-05 15:57:12,109 - root - INFO - Epoch: 808
2024-10-05 15:57:12,536 - root - INFO - Avg loss: tensor(1.8640e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23087382316589355
2024-10-05 15:57:12,702 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:12,844 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:13,000 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:13,003 - root - INFO - Best val result: {'epoch': 808, 'loss': tensor(1.8640e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:13,004 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 808}
2024-10-05 15:57:13,004 - root - INFO - Epoch: 809
2024-10-05 15:57:13,415 - root - INFO - Avg loss: tensor(5.0784e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23158669471740723
2024-10-05 15:57:13,561 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:13,715 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:13,901 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:13,904 - root - INFO - Best val result: {'epoch': 809, 'loss': tensor(5.0784e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:13,905 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 809}
2024-10-05 15:57:13,905 - root - INFO - Epoch: 810
2024-10-05 15:57:14,318 - root - INFO - Avg loss: tensor(2.7216e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22829508781433105
2024-10-05 15:57:14,459 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:14,613 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:14,769 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:14,772 - root - INFO - Best val result: {'epoch': 810, 'loss': tensor(2.7216e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:14,773 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 810}
2024-10-05 15:57:14,773 - root - INFO - Epoch: 811
2024-10-05 15:57:15,192 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2310492992401123
2024-10-05 15:57:15,377 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:15,530 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:15,692 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:15,695 - root - INFO - Best val result: {'epoch': 811, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:15,695 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 811}
2024-10-05 15:57:15,696 - root - INFO - Epoch: 812
2024-10-05 15:57:16,108 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23129034042358398
2024-10-05 15:57:16,271 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:16,431 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:16,589 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:16,592 - root - INFO - Best val result: {'epoch': 812, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:16,593 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 812}
2024-10-05 15:57:16,593 - root - INFO - Epoch: 813
2024-10-05 15:57:17,011 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2308950424194336
2024-10-05 15:57:17,170 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:17,311 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:17,471 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:17,474 - root - INFO - Best val result: {'epoch': 813, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:17,475 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 813}
2024-10-05 15:57:17,475 - root - INFO - Epoch: 814
2024-10-05 15:57:17,907 - root - INFO - Avg loss: tensor(7.3214e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24267864227294922
2024-10-05 15:57:18,063 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:18,216 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:18,375 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:18,379 - root - INFO - Best val result: {'epoch': 814, 'loss': tensor(7.3214e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:18,380 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 814}
2024-10-05 15:57:18,380 - root - INFO - Epoch: 815
2024-10-05 15:57:18,794 - root - INFO - Avg loss: tensor(6.7149e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2303614616394043
2024-10-05 15:57:18,981 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:19,139 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:19,296 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:19,300 - root - INFO - Best val result: {'epoch': 815, 'loss': tensor(6.7149e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:19,301 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 815}
2024-10-05 15:57:19,301 - root - INFO - Epoch: 816
2024-10-05 15:57:19,712 - root - INFO - Avg loss: tensor(4.3892e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23088979721069336
2024-10-05 15:57:19,900 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:20,040 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:20,201 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:20,204 - root - INFO - Best val result: {'epoch': 816, 'loss': tensor(4.3892e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:20,205 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 816}
2024-10-05 15:57:20,205 - root - INFO - Epoch: 817
2024-10-05 15:57:20,625 - root - INFO - Avg loss: tensor(1.1431e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23447489738464355
2024-10-05 15:57:20,774 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:20,915 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:21,059 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:21,062 - root - INFO - Best val result: {'epoch': 817, 'loss': tensor(1.1431e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:21,063 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 817}
2024-10-05 15:57:21,063 - root - INFO - Epoch: 818
2024-10-05 15:57:21,480 - root - INFO - Avg loss: tensor(2.7557e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23144841194152832
2024-10-05 15:57:21,640 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:21,788 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:21,934 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:21,936 - root - INFO - Best val result: {'epoch': 818, 'loss': tensor(2.7557e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:21,937 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 818}
2024-10-05 15:57:21,937 - root - INFO - Epoch: 819
2024-10-05 15:57:22,369 - root - INFO - Avg loss: tensor(9.8646e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.234205961227417
2024-10-05 15:57:22,516 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:22,666 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:22,830 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:22,833 - root - INFO - Best val result: {'epoch': 819, 'loss': tensor(9.8646e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:22,834 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 819}
2024-10-05 15:57:22,834 - root - INFO - Epoch: 820
2024-10-05 15:57:23,268 - root - INFO - Avg loss: tensor(1.5931e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2367701530456543
2024-10-05 15:57:23,448 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:23,625 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:23,775 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:23,778 - root - INFO - Best val result: {'epoch': 820, 'loss': tensor(1.5931e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:23,779 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 820}
2024-10-05 15:57:23,779 - root - INFO - Epoch: 821
2024-10-05 15:57:24,215 - root - INFO - Avg loss: tensor(1.3226e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24387216567993164
2024-10-05 15:57:24,367 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:24,524 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:24,690 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:24,693 - root - INFO - Best val result: {'epoch': 821, 'loss': tensor(1.3226e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:24,694 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 821}
2024-10-05 15:57:24,695 - root - INFO - Epoch: 822
2024-10-05 15:57:25,147 - root - INFO - Avg loss: tensor(4.9396e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2584230899810791
2024-10-05 15:57:25,315 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:25,464 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:25,624 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:25,627 - root - INFO - Best val result: {'epoch': 822, 'loss': tensor(4.9396e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:25,628 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 822}
2024-10-05 15:57:25,628 - root - INFO - Epoch: 823
2024-10-05 15:57:26,052 - root - INFO - Avg loss: tensor(4.6729e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24196553230285645
2024-10-05 15:57:26,212 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:26,373 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:26,533 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:26,536 - root - INFO - Best val result: {'epoch': 823, 'loss': tensor(4.6729e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:26,537 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 823}
2024-10-05 15:57:26,537 - root - INFO - Epoch: 824
2024-10-05 15:57:26,950 - root - INFO - Avg loss: tensor(1.3461e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23197722434997559
2024-10-05 15:57:27,094 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:27,243 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:27,402 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:27,406 - root - INFO - Best val result: {'epoch': 824, 'loss': tensor(1.3461e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:27,407 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 824}
2024-10-05 15:57:27,407 - root - INFO - Epoch: 825
2024-10-05 15:57:27,811 - root - INFO - Avg loss: tensor(3.1066e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23070764541625977
2024-10-05 15:57:27,960 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:28,104 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:28,267 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:28,270 - root - INFO - Best val result: {'epoch': 825, 'loss': tensor(3.1066e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:28,270 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 825}
2024-10-05 15:57:28,271 - root - INFO - Epoch: 826
2024-10-05 15:57:28,689 - root - INFO - Avg loss: tensor(5.3141e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23340201377868652
2024-10-05 15:57:28,867 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:29,005 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:29,163 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:29,167 - root - INFO - Best val result: {'epoch': 826, 'loss': tensor(5.3141e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:29,168 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 826}
2024-10-05 15:57:29,168 - root - INFO - Epoch: 827
2024-10-05 15:57:29,599 - root - INFO - Avg loss: tensor(1.2902e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.241349458694458
2024-10-05 15:57:29,756 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:29,905 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:30,060 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:30,062 - root - INFO - Best val result: {'epoch': 827, 'loss': tensor(1.2902e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:30,063 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 827}
2024-10-05 15:57:30,064 - root - INFO - Epoch: 828
2024-10-05 15:57:30,482 - root - INFO - Avg loss: tensor(1.9083e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2332630157470703
2024-10-05 15:57:30,628 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:30,777 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:30,960 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:30,963 - root - INFO - Best val result: {'epoch': 828, 'loss': tensor(1.9083e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:30,964 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 828}
2024-10-05 15:57:30,964 - root - INFO - Epoch: 829
2024-10-05 15:57:31,376 - root - INFO - Avg loss: tensor(2.2843e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23308682441711426
2024-10-05 15:57:31,521 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:31,669 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:31,841 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:31,844 - root - INFO - Best val result: {'epoch': 829, 'loss': tensor(2.2843e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:31,845 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 829}
2024-10-05 15:57:31,845 - root - INFO - Epoch: 830
2024-10-05 15:57:32,306 - root - INFO - Avg loss: tensor(0.0057, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2775444984436035
2024-10-05 15:57:32,467 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:32,620 - root - INFO - Validation accuracy: 0.99
2024-10-05 15:57:32,760 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:32,763 - root - INFO - Best val result: {'epoch': 829, 'loss': tensor(2.2843e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:32,764 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 830}
2024-10-05 15:57:32,767 - root - INFO - Epoch: 831
2024-10-05 15:57:33,228 - root - INFO - Avg loss: tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27312517166137695
2024-10-05 15:57:33,375 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:33,513 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:33,671 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:33,674 - root - INFO - Best val result: {'epoch': 831, 'loss': tensor(0.0042, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:33,674 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 831}
2024-10-05 15:57:33,675 - root - INFO - Epoch: 832
2024-10-05 15:57:34,099 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23221278190612793
2024-10-05 15:57:34,258 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:34,403 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:34,548 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:34,551 - root - INFO - Best val result: {'epoch': 832, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:34,552 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 832}
2024-10-05 15:57:34,552 - root - INFO - Epoch: 833
2024-10-05 15:57:34,973 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23282480239868164
2024-10-05 15:57:35,122 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:35,271 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:35,457 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:35,460 - root - INFO - Best val result: {'epoch': 833, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:35,461 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 833}
2024-10-05 15:57:35,461 - root - INFO - Epoch: 834
2024-10-05 15:57:35,886 - root - INFO - Avg loss: tensor(8.4119e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23653244972229004
2024-10-05 15:57:36,044 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:36,194 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:36,348 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:36,352 - root - INFO - Best val result: {'epoch': 834, 'loss': tensor(8.4119e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:36,353 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 834}
2024-10-05 15:57:36,353 - root - INFO - Epoch: 835
2024-10-05 15:57:36,773 - root - INFO - Avg loss: tensor(6.5506e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23369288444519043
2024-10-05 15:57:36,920 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:37,069 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:37,228 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:37,231 - root - INFO - Best val result: {'epoch': 835, 'loss': tensor(6.5506e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:37,232 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 835}
2024-10-05 15:57:37,232 - root - INFO - Epoch: 836
2024-10-05 15:57:37,665 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23879742622375488
2024-10-05 15:57:37,816 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:37,967 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:38,113 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:38,116 - root - INFO - Best val result: {'epoch': 836, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:38,117 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 836}
2024-10-05 15:57:38,118 - root - INFO - Epoch: 837
2024-10-05 15:57:38,539 - root - INFO - Avg loss: tensor(6.0338e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23644208908081055
2024-10-05 15:57:38,710 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:38,859 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:39,022 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:39,025 - root - INFO - Best val result: {'epoch': 837, 'loss': tensor(6.0338e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:39,025 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 837}
2024-10-05 15:57:39,026 - root - INFO - Epoch: 838
2024-10-05 15:57:39,473 - root - INFO - Avg loss: tensor(2.8290e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25069117546081543
2024-10-05 15:57:39,650 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:39,798 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:39,979 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:39,982 - root - INFO - Best val result: {'epoch': 838, 'loss': tensor(2.8290e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:39,983 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 838}
2024-10-05 15:57:39,983 - root - INFO - Epoch: 839
2024-10-05 15:57:40,452 - root - INFO - Avg loss: tensor(3.3162e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2582707405090332
2024-10-05 15:57:40,611 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:40,752 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:40,919 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:40,922 - root - INFO - Best val result: {'epoch': 839, 'loss': tensor(3.3162e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:40,923 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 839}
2024-10-05 15:57:40,923 - root - INFO - Epoch: 840
2024-10-05 15:57:41,345 - root - INFO - Avg loss: tensor(1.7707e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2367103099822998
2024-10-05 15:57:41,491 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:41,645 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:41,810 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:41,812 - root - INFO - Best val result: {'epoch': 840, 'loss': tensor(1.7707e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:41,813 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 840}
2024-10-05 15:57:41,813 - root - INFO - Epoch: 841
2024-10-05 15:57:42,237 - root - INFO - Avg loss: tensor(2.8784e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23726582527160645
2024-10-05 15:57:42,386 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:42,534 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:42,701 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:42,704 - root - INFO - Best val result: {'epoch': 841, 'loss': tensor(2.8784e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:42,704 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 841}
2024-10-05 15:57:42,704 - root - INFO - Epoch: 842
2024-10-05 15:57:43,118 - root - INFO - Avg loss: tensor(1.3981e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23639774322509766
2024-10-05 15:57:43,269 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:43,419 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:43,579 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:43,582 - root - INFO - Best val result: {'epoch': 842, 'loss': tensor(1.3981e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:43,583 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 842}
2024-10-05 15:57:43,583 - root - INFO - Epoch: 843
2024-10-05 15:57:44,006 - root - INFO - Avg loss: tensor(1.7131e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23465681076049805
2024-10-05 15:57:44,163 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:44,313 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:44,481 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:44,484 - root - INFO - Best val result: {'epoch': 843, 'loss': tensor(1.7131e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:44,486 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 843}
2024-10-05 15:57:44,486 - root - INFO - Epoch: 844
2024-10-05 15:57:44,911 - root - INFO - Avg loss: tensor(1.4635e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24076247215270996
2024-10-05 15:57:45,067 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:45,222 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:45,382 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:45,385 - root - INFO - Best val result: {'epoch': 844, 'loss': tensor(1.4635e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:45,386 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 844}
2024-10-05 15:57:45,386 - root - INFO - Epoch: 845
2024-10-05 15:57:45,807 - root - INFO - Avg loss: tensor(1.5369e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23537540435791016
2024-10-05 15:57:45,965 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:46,114 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:46,275 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:46,278 - root - INFO - Best val result: {'epoch': 845, 'loss': tensor(1.5369e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:46,278 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 845}
2024-10-05 15:57:46,279 - root - INFO - Epoch: 846
2024-10-05 15:57:46,705 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23487043380737305
2024-10-05 15:57:46,858 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:46,995 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:47,152 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:47,156 - root - INFO - Best val result: {'epoch': 846, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:47,157 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 846}
2024-10-05 15:57:47,157 - root - INFO - Epoch: 847
2024-10-05 15:57:47,577 - root - INFO - Avg loss: tensor(6.9356e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23440957069396973
2024-10-05 15:57:47,723 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:47,877 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:48,019 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:48,022 - root - INFO - Best val result: {'epoch': 847, 'loss': tensor(6.9356e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:48,023 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 847}
2024-10-05 15:57:48,023 - root - INFO - Epoch: 848
2024-10-05 15:57:48,461 - root - INFO - Avg loss: tensor(4.0003e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23842191696166992
2024-10-05 15:57:48,631 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:48,771 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:48,916 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:48,919 - root - INFO - Best val result: {'epoch': 848, 'loss': tensor(4.0003e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:48,920 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 848}
2024-10-05 15:57:48,920 - root - INFO - Epoch: 849
2024-10-05 15:57:49,346 - root - INFO - Avg loss: tensor(6.0241e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23467278480529785
2024-10-05 15:57:49,500 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:49,652 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:49,811 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:49,814 - root - INFO - Best val result: {'epoch': 849, 'loss': tensor(6.0241e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:49,815 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 849}
2024-10-05 15:57:49,815 - root - INFO - Epoch: 850
2024-10-05 15:57:50,240 - root - INFO - Avg loss: tensor(6.4535e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23479461669921875
2024-10-05 15:57:50,414 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:50,554 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:50,711 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:50,715 - root - INFO - Best val result: {'epoch': 850, 'loss': tensor(6.4535e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:50,715 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 850}
2024-10-05 15:57:50,715 - root - INFO - Epoch: 851
2024-10-05 15:57:51,134 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2359604835510254
2024-10-05 15:57:51,278 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:51,419 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:51,588 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:51,591 - root - INFO - Best val result: {'epoch': 851, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:51,592 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 851}
2024-10-05 15:57:51,592 - root - INFO - Epoch: 852
2024-10-05 15:57:52,019 - root - INFO - Avg loss: tensor(6.2678e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23846793174743652
2024-10-05 15:57:52,168 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:52,312 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:52,469 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:52,472 - root - INFO - Best val result: {'epoch': 852, 'loss': tensor(6.2678e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:52,473 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 852}
2024-10-05 15:57:52,473 - root - INFO - Epoch: 853
2024-10-05 15:57:52,905 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23605966567993164
2024-10-05 15:57:53,062 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:53,215 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:53,408 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:53,412 - root - INFO - Best val result: {'epoch': 853, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:53,413 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 853}
2024-10-05 15:57:53,413 - root - INFO - Epoch: 854
2024-10-05 15:57:53,854 - root - INFO - Avg loss: tensor(3.9681e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2406752109527588
2024-10-05 15:57:54,000 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:54,150 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:54,307 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:54,311 - root - INFO - Best val result: {'epoch': 854, 'loss': tensor(3.9681e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:54,312 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 854}
2024-10-05 15:57:54,313 - root - INFO - Epoch: 855
2024-10-05 15:57:54,739 - root - INFO - Avg loss: tensor(2.8067e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23431849479675293
2024-10-05 15:57:54,895 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:55,045 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:55,205 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:55,208 - root - INFO - Best val result: {'epoch': 855, 'loss': tensor(2.8067e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:55,209 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 855}
2024-10-05 15:57:55,210 - root - INFO - Epoch: 856
2024-10-05 15:57:55,734 - root - INFO - Avg loss: tensor(1.1477e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.31847548484802246
2024-10-05 15:57:55,893 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:56,057 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:56,223 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:56,227 - root - INFO - Best val result: {'epoch': 856, 'loss': tensor(1.1477e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:56,227 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 856}
2024-10-05 15:57:56,227 - root - INFO - Epoch: 857
2024-10-05 15:57:56,777 - root - INFO - Avg loss: tensor(6.8607e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3291895389556885
2024-10-05 15:57:56,945 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:57,115 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:57,278 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:57,281 - root - INFO - Best val result: {'epoch': 857, 'loss': tensor(6.8607e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:57,282 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 857}
2024-10-05 15:57:57,283 - root - INFO - Epoch: 858
2024-10-05 15:57:57,721 - root - INFO - Avg loss: tensor(2.6710e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24251079559326172
2024-10-05 15:57:57,880 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:58,024 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:58,183 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:58,186 - root - INFO - Best val result: {'epoch': 858, 'loss': tensor(2.6710e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:58,187 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 858}
2024-10-05 15:57:58,187 - root - INFO - Epoch: 859
2024-10-05 15:57:58,641 - root - INFO - Avg loss: tensor(2.1125e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25974321365356445
2024-10-05 15:57:58,808 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:58,957 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:59,116 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:59,119 - root - INFO - Best val result: {'epoch': 859, 'loss': tensor(2.1125e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:59,121 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 859}
2024-10-05 15:57:59,121 - root - INFO - Epoch: 860
2024-10-05 15:57:59,539 - root - INFO - Avg loss: tensor(2.2441e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23270678520202637
2024-10-05 15:57:59,686 - root - INFO - Train accuracy: 1.0
2024-10-05 15:57:59,839 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:57:59,984 - root - INFO - Test accuracy: 1.0
2024-10-05 15:57:59,988 - root - INFO - Best val result: {'epoch': 860, 'loss': tensor(2.2441e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:57:59,989 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 860}
2024-10-05 15:57:59,989 - root - INFO - Epoch: 861
2024-10-05 15:58:00,420 - root - INFO - Avg loss: tensor(9.9654e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24171686172485352
2024-10-05 15:58:00,578 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:00,719 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:00,890 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:00,893 - root - INFO - Best val result: {'epoch': 861, 'loss': tensor(9.9654e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:00,893 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 861}
2024-10-05 15:58:00,894 - root - INFO - Epoch: 862
2024-10-05 15:58:01,324 - root - INFO - Avg loss: tensor(9.4881e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23732757568359375
2024-10-05 15:58:01,482 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:01,650 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:01,802 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:01,805 - root - INFO - Best val result: {'epoch': 862, 'loss': tensor(9.4881e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:01,806 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 862}
2024-10-05 15:58:01,806 - root - INFO - Epoch: 863
2024-10-05 15:58:02,237 - root - INFO - Avg loss: tensor(6.3544e-06, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2366640567779541
2024-10-05 15:58:02,396 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:02,562 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:02,721 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:02,725 - root - INFO - Best val result: {'epoch': 863, 'loss': tensor(6.3544e-06, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:02,726 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 863}
2024-10-05 15:58:02,726 - root - INFO - Epoch: 864
2024-10-05 15:58:03,145 - root - INFO - Avg loss: tensor(1.5787e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23622751235961914
2024-10-05 15:58:03,311 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:03,490 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:03,653 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:03,657 - root - INFO - Best val result: {'epoch': 864, 'loss': tensor(1.5787e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:03,658 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 864}
2024-10-05 15:58:03,658 - root - INFO - Epoch: 865
2024-10-05 15:58:04,109 - root - INFO - Avg loss: tensor(1.0027e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24893641471862793
2024-10-05 15:58:04,274 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:04,431 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:04,588 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:04,591 - root - INFO - Best val result: {'epoch': 865, 'loss': tensor(1.0027e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:04,592 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 865}
2024-10-05 15:58:04,592 - root - INFO - Epoch: 866
2024-10-05 15:58:05,015 - root - INFO - Avg loss: tensor(1.4031e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.236220121383667
2024-10-05 15:58:05,168 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:05,328 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:05,486 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:05,489 - root - INFO - Best val result: {'epoch': 866, 'loss': tensor(1.4031e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:05,490 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 866}
2024-10-05 15:58:05,490 - root - INFO - Epoch: 867
2024-10-05 15:58:05,919 - root - INFO - Avg loss: tensor(1.8942e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.237044095993042
2024-10-05 15:58:06,072 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:06,223 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:06,370 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:06,374 - root - INFO - Best val result: {'epoch': 867, 'loss': tensor(1.8942e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:06,375 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 867}
2024-10-05 15:58:06,375 - root - INFO - Epoch: 868
2024-10-05 15:58:06,806 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23412775993347168
2024-10-05 15:58:06,964 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:07,119 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:07,280 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:07,283 - root - INFO - Best val result: {'epoch': 868, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:07,284 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 868}
2024-10-05 15:58:07,284 - root - INFO - Epoch: 869
2024-10-05 15:58:07,712 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2377610206604004
2024-10-05 15:58:07,883 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:08,023 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:08,203 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:08,207 - root - INFO - Best val result: {'epoch': 869, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:08,208 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 869}
2024-10-05 15:58:08,208 - root - INFO - Epoch: 870
2024-10-05 15:58:08,630 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23442530632019043
2024-10-05 15:58:08,797 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:08,935 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:09,088 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:09,091 - root - INFO - Best val result: {'epoch': 870, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:09,092 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 870}
2024-10-05 15:58:09,092 - root - INFO - Epoch: 871
2024-10-05 15:58:09,514 - root - INFO - Avg loss: tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2375490665435791
2024-10-05 15:58:09,686 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:09,839 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:09,993 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:09,996 - root - INFO - Best val result: {'epoch': 871, 'loss': tensor(0.0029, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:09,997 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 871}
2024-10-05 15:58:09,997 - root - INFO - Epoch: 872
2024-10-05 15:58:10,428 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2356886863708496
2024-10-05 15:58:10,585 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:10,724 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:10,886 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:10,888 - root - INFO - Best val result: {'epoch': 872, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:10,889 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 872}
2024-10-05 15:58:10,889 - root - INFO - Epoch: 873
2024-10-05 15:58:11,327 - root - INFO - Avg loss: tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23719501495361328
2024-10-05 15:58:11,483 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:11,632 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:11,792 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:11,795 - root - INFO - Best val result: {'epoch': 873, 'loss': tensor(0.0025, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:11,796 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 873}
2024-10-05 15:58:11,796 - root - INFO - Epoch: 874
2024-10-05 15:58:12,217 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23304390907287598
2024-10-05 15:58:12,373 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:12,520 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:12,676 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:12,679 - root - INFO - Best val result: {'epoch': 874, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:12,680 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 874}
2024-10-05 15:58:12,680 - root - INFO - Epoch: 875
2024-10-05 15:58:13,107 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2340700626373291
2024-10-05 15:58:13,251 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:13,402 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:13,568 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:13,571 - root - INFO - Best val result: {'epoch': 875, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:13,572 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 875}
2024-10-05 15:58:13,572 - root - INFO - Epoch: 876
2024-10-05 15:58:13,991 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23310518264770508
2024-10-05 15:58:14,155 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:14,294 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:14,462 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:14,465 - root - INFO - Best val result: {'epoch': 876, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:14,466 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 876}
2024-10-05 15:58:14,467 - root - INFO - Epoch: 877
2024-10-05 15:58:14,909 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.236253023147583
2024-10-05 15:58:15,066 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:15,230 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:15,395 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:15,399 - root - INFO - Best val result: {'epoch': 877, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:15,400 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 877}
2024-10-05 15:58:15,400 - root - INFO - Epoch: 878
2024-10-05 15:58:15,817 - root - INFO - Avg loss: tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2346811294555664
2024-10-05 15:58:15,963 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:16,114 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:16,272 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:16,275 - root - INFO - Best val result: {'epoch': 878, 'loss': tensor(0.0052, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:16,276 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 878}
2024-10-05 15:58:16,276 - root - INFO - Epoch: 879
2024-10-05 15:58:16,691 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23721671104431152
2024-10-05 15:58:16,850 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:16,994 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:17,154 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:17,157 - root - INFO - Best val result: {'epoch': 879, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:17,159 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 879}
2024-10-05 15:58:17,159 - root - INFO - Epoch: 880
2024-10-05 15:58:17,583 - root - INFO - Avg loss: tensor(7.2771e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2339930534362793
2024-10-05 15:58:17,737 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:17,894 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:18,048 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:18,052 - root - INFO - Best val result: {'epoch': 880, 'loss': tensor(7.2771e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:18,053 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 880}
2024-10-05 15:58:18,053 - root - INFO - Epoch: 881
2024-10-05 15:58:18,487 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23678231239318848
2024-10-05 15:58:18,637 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:18,792 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:18,951 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:18,954 - root - INFO - Best val result: {'epoch': 881, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:18,954 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 881}
2024-10-05 15:58:18,955 - root - INFO - Epoch: 882
2024-10-05 15:58:19,379 - root - INFO - Avg loss: tensor(6.7792e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23723626136779785
2024-10-05 15:58:19,535 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:19,688 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:19,853 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:19,857 - root - INFO - Best val result: {'epoch': 882, 'loss': tensor(6.7792e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:19,857 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 882}
2024-10-05 15:58:19,857 - root - INFO - Epoch: 883
2024-10-05 15:58:20,286 - root - INFO - Avg loss: tensor(4.9464e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24200057983398438
2024-10-05 15:58:20,440 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:20,592 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:20,760 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:20,763 - root - INFO - Best val result: {'epoch': 883, 'loss': tensor(4.9464e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:20,764 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 883}
2024-10-05 15:58:20,764 - root - INFO - Epoch: 884
2024-10-05 15:58:21,213 - root - INFO - Avg loss: tensor(8.8858e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23622417449951172
2024-10-05 15:58:21,361 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:21,507 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:21,669 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:21,672 - root - INFO - Best val result: {'epoch': 884, 'loss': tensor(8.8858e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:21,673 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 884}
2024-10-05 15:58:21,673 - root - INFO - Epoch: 885
2024-10-05 15:58:22,094 - root - INFO - Avg loss: tensor(6.6211e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2334606647491455
2024-10-05 15:58:22,251 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:22,404 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:22,566 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:22,570 - root - INFO - Best val result: {'epoch': 885, 'loss': tensor(6.6211e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:22,571 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 885}
2024-10-05 15:58:22,571 - root - INFO - Epoch: 886
2024-10-05 15:58:22,982 - root - INFO - Avg loss: tensor(5.0864e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23471641540527344
2024-10-05 15:58:23,137 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:23,287 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:23,448 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:23,452 - root - INFO - Best val result: {'epoch': 886, 'loss': tensor(5.0864e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:23,453 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 886}
2024-10-05 15:58:23,453 - root - INFO - Epoch: 887
2024-10-05 15:58:23,875 - root - INFO - Avg loss: tensor(4.2569e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2348930835723877
2024-10-05 15:58:24,025 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:24,179 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:24,327 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:24,330 - root - INFO - Best val result: {'epoch': 887, 'loss': tensor(4.2569e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:24,331 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 887}
2024-10-05 15:58:24,332 - root - INFO - Epoch: 888
2024-10-05 15:58:24,759 - root - INFO - Avg loss: tensor(2.2191e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23949551582336426
2024-10-05 15:58:24,920 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:25,070 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:25,222 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:25,227 - root - INFO - Best val result: {'epoch': 888, 'loss': tensor(2.2191e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:25,228 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 888}
2024-10-05 15:58:25,228 - root - INFO - Epoch: 889
2024-10-05 15:58:25,645 - root - INFO - Avg loss: tensor(2.0740e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2334001064300537
2024-10-05 15:58:25,798 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:25,944 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:26,101 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:26,105 - root - INFO - Best val result: {'epoch': 889, 'loss': tensor(2.0740e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:26,106 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 889}
2024-10-05 15:58:26,106 - root - INFO - Epoch: 890
2024-10-05 15:58:26,533 - root - INFO - Avg loss: tensor(3.9889e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2339479923248291
2024-10-05 15:58:26,694 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:26,845 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:26,996 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:26,999 - root - INFO - Best val result: {'epoch': 890, 'loss': tensor(3.9889e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:27,000 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 890}
2024-10-05 15:58:27,000 - root - INFO - Epoch: 891
2024-10-05 15:58:27,417 - root - INFO - Avg loss: tensor(2.6296e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23406434059143066
2024-10-05 15:58:27,576 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:27,725 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:27,887 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:27,890 - root - INFO - Best val result: {'epoch': 891, 'loss': tensor(2.6296e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:27,891 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 891}
2024-10-05 15:58:27,891 - root - INFO - Epoch: 892
2024-10-05 15:58:28,327 - root - INFO - Avg loss: tensor(2.4389e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2477121353149414
2024-10-05 15:58:28,492 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:28,647 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:28,810 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:28,813 - root - INFO - Best val result: {'epoch': 892, 'loss': tensor(2.4389e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:28,814 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 892}
2024-10-05 15:58:28,814 - root - INFO - Epoch: 893
2024-10-05 15:58:29,263 - root - INFO - Avg loss: tensor(1.6536e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2692234516143799
2024-10-05 15:58:29,423 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:29,580 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:29,742 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:29,745 - root - INFO - Best val result: {'epoch': 893, 'loss': tensor(1.6536e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:29,746 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 893}
2024-10-05 15:58:29,746 - root - INFO - Epoch: 894
2024-10-05 15:58:30,166 - root - INFO - Avg loss: tensor(1.8407e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23225927352905273
2024-10-05 15:58:30,349 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:30,497 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:30,651 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:30,654 - root - INFO - Best val result: {'epoch': 894, 'loss': tensor(1.8407e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:30,655 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 894}
2024-10-05 15:58:30,655 - root - INFO - Epoch: 895
2024-10-05 15:58:31,073 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24003338813781738
2024-10-05 15:58:31,215 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:31,364 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:31,514 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:31,517 - root - INFO - Best val result: {'epoch': 895, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:31,518 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 895}
2024-10-05 15:58:31,518 - root - INFO - Epoch: 896
2024-10-05 15:58:31,954 - root - INFO - Avg loss: tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.243574857711792
2024-10-05 15:58:32,112 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:32,261 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:32,418 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:32,421 - root - INFO - Best val result: {'epoch': 896, 'loss': tensor(0.0016, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:32,422 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 896}
2024-10-05 15:58:32,422 - root - INFO - Epoch: 897
2024-10-05 15:58:32,868 - root - INFO - Avg loss: tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24466228485107422
2024-10-05 15:58:33,015 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:33,164 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:33,323 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:33,326 - root - INFO - Best val result: {'epoch': 897, 'loss': tensor(0.0020, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:33,327 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 897}
2024-10-05 15:58:33,327 - root - INFO - Epoch: 898
2024-10-05 15:58:33,778 - root - INFO - Avg loss: tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25121021270751953
2024-10-05 15:58:33,924 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:34,072 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:34,222 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:34,225 - root - INFO - Best val result: {'epoch': 898, 'loss': tensor(0.0008, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:34,226 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 898}
2024-10-05 15:58:34,227 - root - INFO - Epoch: 899
2024-10-05 15:58:34,674 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24394965171813965
2024-10-05 15:58:34,831 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:34,991 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:35,145 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:35,148 - root - INFO - Best val result: {'epoch': 899, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:35,149 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 899}
2024-10-05 15:58:35,150 - root - INFO - Epoch: 900
2024-10-05 15:58:35,573 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23450064659118652
2024-10-05 15:58:35,720 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:35,871 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:36,020 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:36,023 - root - INFO - Best val result: {'epoch': 900, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:36,024 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 900}
2024-10-05 15:58:36,024 - root - INFO - Epoch: 901
2024-10-05 15:58:36,449 - root - INFO - Avg loss: tensor(0.0044, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23773407936096191
2024-10-05 15:58:36,601 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:36,756 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:36,909 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:36,912 - root - INFO - Best val result: {'epoch': 901, 'loss': tensor(0.0044, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:36,912 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 901}
2024-10-05 15:58:36,913 - root - INFO - Epoch: 902
2024-10-05 15:58:37,332 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23491740226745605
2024-10-05 15:58:37,480 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:37,631 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:37,795 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:37,799 - root - INFO - Best val result: {'epoch': 902, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:37,799 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 902}
2024-10-05 15:58:37,800 - root - INFO - Epoch: 903
2024-10-05 15:58:38,223 - root - INFO - Avg loss: tensor(5.2062e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2372286319732666
2024-10-05 15:58:38,384 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:38,537 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:38,734 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:38,737 - root - INFO - Best val result: {'epoch': 903, 'loss': tensor(5.2062e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:38,738 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 903}
2024-10-05 15:58:38,738 - root - INFO - Epoch: 904
2024-10-05 15:58:39,168 - root - INFO - Avg loss: tensor(3.4548e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23837065696716309
2024-10-05 15:58:39,324 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:39,481 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:39,638 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:39,641 - root - INFO - Best val result: {'epoch': 904, 'loss': tensor(3.4548e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:39,642 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 904}
2024-10-05 15:58:39,642 - root - INFO - Epoch: 905
2024-10-05 15:58:40,074 - root - INFO - Avg loss: tensor(2.1475e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2396388053894043
2024-10-05 15:58:40,238 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:40,397 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:40,556 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:40,560 - root - INFO - Best val result: {'epoch': 905, 'loss': tensor(2.1475e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:40,561 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 905}
2024-10-05 15:58:40,561 - root - INFO - Epoch: 906
2024-10-05 15:58:41,015 - root - INFO - Avg loss: tensor(3.9274e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25381016731262207
2024-10-05 15:58:41,168 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:41,316 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:41,472 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:41,475 - root - INFO - Best val result: {'epoch': 906, 'loss': tensor(3.9274e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:41,476 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 906}
2024-10-05 15:58:41,476 - root - INFO - Epoch: 907
2024-10-05 15:58:41,926 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2529945373535156
2024-10-05 15:58:42,076 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:42,255 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:42,417 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:42,420 - root - INFO - Best val result: {'epoch': 907, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:42,421 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 907}
2024-10-05 15:58:42,421 - root - INFO - Epoch: 908
2024-10-05 15:58:42,839 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23338818550109863
2024-10-05 15:58:42,989 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:43,137 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:43,297 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:43,301 - root - INFO - Best val result: {'epoch': 908, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:43,302 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 908}
2024-10-05 15:58:43,302 - root - INFO - Epoch: 909
2024-10-05 15:58:43,727 - root - INFO - Avg loss: tensor(3.7229e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23778080940246582
2024-10-05 15:58:43,890 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:44,028 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:44,214 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:44,217 - root - INFO - Best val result: {'epoch': 909, 'loss': tensor(3.7229e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:44,218 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 909}
2024-10-05 15:58:44,218 - root - INFO - Epoch: 910
2024-10-05 15:58:44,661 - root - INFO - Avg loss: tensor(2.0268e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2515997886657715
2024-10-05 15:58:44,823 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:44,980 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:45,155 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:45,159 - root - INFO - Best val result: {'epoch': 910, 'loss': tensor(2.0268e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:45,160 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 910}
2024-10-05 15:58:45,160 - root - INFO - Epoch: 911
2024-10-05 15:58:45,606 - root - INFO - Avg loss: tensor(4.3092e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25480079650878906
2024-10-05 15:58:45,754 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:45,893 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:46,050 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:46,054 - root - INFO - Best val result: {'epoch': 911, 'loss': tensor(4.3092e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:46,054 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 911}
2024-10-05 15:58:46,055 - root - INFO - Epoch: 912
2024-10-05 15:58:46,470 - root - INFO - Avg loss: tensor(3.7637e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23314523696899414
2024-10-05 15:58:46,624 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:46,780 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:46,936 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:46,939 - root - INFO - Best val result: {'epoch': 912, 'loss': tensor(3.7637e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:46,940 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 912}
2024-10-05 15:58:46,940 - root - INFO - Epoch: 913
2024-10-05 15:58:47,362 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23247385025024414
2024-10-05 15:58:47,510 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:47,670 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:47,833 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:47,836 - root - INFO - Best val result: {'epoch': 913, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:47,838 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 913}
2024-10-05 15:58:47,838 - root - INFO - Epoch: 914
2024-10-05 15:58:48,300 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2469172477722168
2024-10-05 15:58:48,469 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:48,624 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:48,781 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:48,785 - root - INFO - Best val result: {'epoch': 914, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:48,786 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 914}
2024-10-05 15:58:48,786 - root - INFO - Epoch: 915
2024-10-05 15:58:49,195 - root - INFO - Avg loss: tensor(0.0035, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23026800155639648
2024-10-05 15:58:49,359 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:49,508 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:49,669 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:49,672 - root - INFO - Best val result: {'epoch': 915, 'loss': tensor(0.0035, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:49,672 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 915}
2024-10-05 15:58:49,673 - root - INFO - Epoch: 916
2024-10-05 15:58:50,112 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23225903511047363
2024-10-05 15:58:50,263 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:50,416 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:50,569 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:50,572 - root - INFO - Best val result: {'epoch': 916, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:50,573 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 916}
2024-10-05 15:58:50,573 - root - INFO - Epoch: 917
2024-10-05 15:58:50,989 - root - INFO - Avg loss: tensor(5.1457e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23345565795898438
2024-10-05 15:58:51,139 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:51,289 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:51,448 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:51,451 - root - INFO - Best val result: {'epoch': 917, 'loss': tensor(5.1457e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:51,452 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 917}
2024-10-05 15:58:51,452 - root - INFO - Epoch: 918
2024-10-05 15:58:51,869 - root - INFO - Avg loss: tensor(4.0843e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2323615550994873
2024-10-05 15:58:52,030 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:52,173 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:52,330 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:52,333 - root - INFO - Best val result: {'epoch': 918, 'loss': tensor(4.0843e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:52,334 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 918}
2024-10-05 15:58:52,334 - root - INFO - Epoch: 919
2024-10-05 15:58:52,760 - root - INFO - Avg loss: tensor(3.4347e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23285412788391113
2024-10-05 15:58:52,918 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:53,108 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:53,261 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:53,264 - root - INFO - Best val result: {'epoch': 919, 'loss': tensor(3.4347e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:53,265 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 919}
2024-10-05 15:58:53,265 - root - INFO - Epoch: 920
2024-10-05 15:58:53,700 - root - INFO - Avg loss: tensor(2.4437e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23873281478881836
2024-10-05 15:58:53,855 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:54,013 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:54,194 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:54,197 - root - INFO - Best val result: {'epoch': 920, 'loss': tensor(2.4437e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:54,198 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 920}
2024-10-05 15:58:54,198 - root - INFO - Epoch: 921
2024-10-05 15:58:54,672 - root - INFO - Avg loss: tensor(5.0537e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.258434534072876
2024-10-05 15:58:54,832 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:54,996 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:55,165 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:55,168 - root - INFO - Best val result: {'epoch': 921, 'loss': tensor(5.0537e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:55,169 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 921}
2024-10-05 15:58:55,169 - root - INFO - Epoch: 922
2024-10-05 15:58:55,614 - root - INFO - Avg loss: tensor(4.4158e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24205446243286133
2024-10-05 15:58:55,776 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:55,938 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:56,097 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:56,100 - root - INFO - Best val result: {'epoch': 922, 'loss': tensor(4.4158e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:56,100 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 922}
2024-10-05 15:58:56,101 - root - INFO - Epoch: 923
2024-10-05 15:58:56,517 - root - INFO - Avg loss: tensor(6.1145e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23240351676940918
2024-10-05 15:58:56,706 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:56,849 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:57,005 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:57,008 - root - INFO - Best val result: {'epoch': 923, 'loss': tensor(6.1145e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:57,009 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 923}
2024-10-05 15:58:57,010 - root - INFO - Epoch: 924
2024-10-05 15:58:57,435 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23636627197265625
2024-10-05 15:58:57,585 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:57,742 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:57,901 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:57,904 - root - INFO - Best val result: {'epoch': 924, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:57,905 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 924}
2024-10-05 15:58:57,905 - root - INFO - Epoch: 925
2024-10-05 15:58:58,340 - root - INFO - Avg loss: tensor(4.5971e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23679161071777344
2024-10-05 15:58:58,488 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:58,638 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:58,788 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:58,791 - root - INFO - Best val result: {'epoch': 925, 'loss': tensor(4.5971e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:58,792 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 925}
2024-10-05 15:58:58,792 - root - INFO - Epoch: 926
2024-10-05 15:58:59,213 - root - INFO - Avg loss: tensor(1.1039e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24020028114318848
2024-10-05 15:58:59,378 - root - INFO - Train accuracy: 1.0
2024-10-05 15:58:59,531 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:58:59,691 - root - INFO - Test accuracy: 1.0
2024-10-05 15:58:59,695 - root - INFO - Best val result: {'epoch': 926, 'loss': tensor(1.1039e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:58:59,696 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 926}
2024-10-05 15:58:59,696 - root - INFO - Epoch: 927
2024-10-05 15:59:00,131 - root - INFO - Avg loss: tensor(1.3530e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23845219612121582
2024-10-05 15:59:00,292 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:00,443 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:00,607 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:00,610 - root - INFO - Best val result: {'epoch': 927, 'loss': tensor(1.3530e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:00,611 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 927}
2024-10-05 15:59:00,611 - root - INFO - Epoch: 928
2024-10-05 15:59:01,025 - root - INFO - Avg loss: tensor(1.5245e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23489761352539062
2024-10-05 15:59:01,178 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:01,321 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:01,481 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:01,484 - root - INFO - Best val result: {'epoch': 928, 'loss': tensor(1.5245e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:01,485 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 928}
2024-10-05 15:59:01,485 - root - INFO - Epoch: 929
2024-10-05 15:59:01,903 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2329270839691162
2024-10-05 15:59:02,059 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:02,206 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:02,361 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:02,365 - root - INFO - Best val result: {'epoch': 929, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:02,366 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 929}
2024-10-05 15:59:02,366 - root - INFO - Epoch: 930
2024-10-05 15:59:02,786 - root - INFO - Avg loss: tensor(5.6477e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23573517799377441
2024-10-05 15:59:02,937 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:03,086 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:03,260 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:03,263 - root - INFO - Best val result: {'epoch': 930, 'loss': tensor(5.6477e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:03,264 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 930}
2024-10-05 15:59:03,264 - root - INFO - Epoch: 931
2024-10-05 15:59:03,704 - root - INFO - Avg loss: tensor(2.3105e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24769163131713867
2024-10-05 15:59:03,866 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:04,026 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:04,186 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:04,188 - root - INFO - Best val result: {'epoch': 931, 'loss': tensor(2.3105e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:04,189 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 931}
2024-10-05 15:59:04,189 - root - INFO - Epoch: 932
2024-10-05 15:59:04,598 - root - INFO - Avg loss: tensor(1.5501e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23344135284423828
2024-10-05 15:59:04,758 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:04,908 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:05,068 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:05,071 - root - INFO - Best val result: {'epoch': 932, 'loss': tensor(1.5501e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:05,072 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 932}
2024-10-05 15:59:05,072 - root - INFO - Epoch: 933
2024-10-05 15:59:05,555 - root - INFO - Avg loss: tensor(1.6646e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2563509941101074
2024-10-05 15:59:05,708 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:05,877 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:06,052 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:06,055 - root - INFO - Best val result: {'epoch': 933, 'loss': tensor(1.6646e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:06,056 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 933}
2024-10-05 15:59:06,056 - root - INFO - Epoch: 934
2024-10-05 15:59:06,470 - root - INFO - Avg loss: tensor(4.3224e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2317028045654297
2024-10-05 15:59:06,627 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:06,764 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:06,923 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:06,927 - root - INFO - Best val result: {'epoch': 934, 'loss': tensor(4.3224e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:06,927 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 934}
2024-10-05 15:59:06,928 - root - INFO - Epoch: 935
2024-10-05 15:59:07,351 - root - INFO - Avg loss: tensor(5.4001e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23189425468444824
2024-10-05 15:59:07,508 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:07,660 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:07,819 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:07,823 - root - INFO - Best val result: {'epoch': 935, 'loss': tensor(5.4001e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:07,824 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 935}
2024-10-05 15:59:07,824 - root - INFO - Epoch: 936
2024-10-05 15:59:08,241 - root - INFO - Avg loss: tensor(1.2241e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23192334175109863
2024-10-05 15:59:08,420 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:08,569 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:08,730 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:08,733 - root - INFO - Best val result: {'epoch': 936, 'loss': tensor(1.2241e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:08,734 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 936}
2024-10-05 15:59:08,734 - root - INFO - Epoch: 937
2024-10-05 15:59:09,146 - root - INFO - Avg loss: tensor(6.1525e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23065900802612305
2024-10-05 15:59:09,296 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:09,447 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:09,604 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:09,607 - root - INFO - Best val result: {'epoch': 937, 'loss': tensor(6.1525e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:09,608 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 937}
2024-10-05 15:59:09,608 - root - INFO - Epoch: 938
2024-10-05 15:59:10,027 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23191499710083008
2024-10-05 15:59:10,173 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:10,320 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:10,477 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:10,481 - root - INFO - Best val result: {'epoch': 938, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:10,482 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 938}
2024-10-05 15:59:10,482 - root - INFO - Epoch: 939
2024-10-05 15:59:10,942 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27265286445617676
2024-10-05 15:59:11,108 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:11,288 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:11,452 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:11,456 - root - INFO - Best val result: {'epoch': 939, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:11,457 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 939}
2024-10-05 15:59:11,457 - root - INFO - Epoch: 940
2024-10-05 15:59:11,943 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.28349852561950684
2024-10-05 15:59:12,105 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:12,253 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:12,411 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:12,414 - root - INFO - Best val result: {'epoch': 940, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:12,415 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 940}
2024-10-05 15:59:12,415 - root - INFO - Epoch: 941
2024-10-05 15:59:12,874 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24489140510559082
2024-10-05 15:59:13,021 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:13,163 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:13,321 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:13,324 - root - INFO - Best val result: {'epoch': 941, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:13,325 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 941}
2024-10-05 15:59:13,326 - root - INFO - Epoch: 942
2024-10-05 15:59:13,762 - root - INFO - Avg loss: tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24754595756530762
2024-10-05 15:59:13,911 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:14,064 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:14,221 - root - INFO - Test accuracy: 0.99
2024-10-05 15:59:14,224 - root - INFO - Best val result: {'epoch': 942, 'loss': tensor(0.0009, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:14,225 - root - INFO - Test result: {'prec': np.float64(0.99), 'recall': np.float64(0.9901960784313726), 'acc': 0.99, 'F1': np.float64(0.99), 'epoch': 942}
2024-10-05 15:59:14,225 - root - INFO - Epoch: 943
2024-10-05 15:59:14,670 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24993205070495605
2024-10-05 15:59:14,852 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:15,007 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:15,188 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:15,192 - root - INFO - Best val result: {'epoch': 943, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:15,193 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 943}
2024-10-05 15:59:15,193 - root - INFO - Epoch: 944
2024-10-05 15:59:15,619 - root - INFO - Avg loss: tensor(5.0887e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24418115615844727
2024-10-05 15:59:15,775 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:15,928 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:16,086 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:16,089 - root - INFO - Best val result: {'epoch': 944, 'loss': tensor(5.0887e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:16,090 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 944}
2024-10-05 15:59:16,090 - root - INFO - Epoch: 945
2024-10-05 15:59:16,519 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24526667594909668
2024-10-05 15:59:16,679 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:16,834 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:16,996 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:17,000 - root - INFO - Best val result: {'epoch': 945, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:17,001 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 945}
2024-10-05 15:59:17,002 - root - INFO - Epoch: 946
2024-10-05 15:59:17,459 - root - INFO - Avg loss: tensor(6.7214e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27141404151916504
2024-10-05 15:59:17,617 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:17,767 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:17,924 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:17,927 - root - INFO - Best val result: {'epoch': 946, 'loss': tensor(6.7214e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:17,927 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 946}
2024-10-05 15:59:17,928 - root - INFO - Epoch: 947
2024-10-05 15:59:18,395 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2572805881500244
2024-10-05 15:59:18,554 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:18,711 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:18,881 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:18,884 - root - INFO - Best val result: {'epoch': 947, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:18,885 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 947}
2024-10-05 15:59:18,885 - root - INFO - Epoch: 948
2024-10-05 15:59:19,349 - root - INFO - Avg loss: tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2677278518676758
2024-10-05 15:59:19,509 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:19,662 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:19,832 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:19,835 - root - INFO - Best val result: {'epoch': 948, 'loss': tensor(0.0013, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:19,836 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 948}
2024-10-05 15:59:19,836 - root - INFO - Epoch: 949
2024-10-05 15:59:20,259 - root - INFO - Avg loss: tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23067617416381836
2024-10-05 15:59:20,414 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:20,566 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:20,728 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:20,732 - root - INFO - Best val result: {'epoch': 949, 'loss': tensor(0.0014, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:20,732 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 949}
2024-10-05 15:59:20,732 - root - INFO - Epoch: 950
2024-10-05 15:59:21,155 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23323273658752441
2024-10-05 15:59:21,310 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:21,464 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:21,623 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:21,626 - root - INFO - Best val result: {'epoch': 950, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:21,627 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 950}
2024-10-05 15:59:21,627 - root - INFO - Epoch: 951
2024-10-05 15:59:22,044 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23393845558166504
2024-10-05 15:59:22,198 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:22,339 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:22,491 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:22,494 - root - INFO - Best val result: {'epoch': 951, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:22,495 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 951}
2024-10-05 15:59:22,495 - root - INFO - Epoch: 952
2024-10-05 15:59:22,908 - root - INFO - Avg loss: tensor(6.0847e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22919487953186035
2024-10-05 15:59:23,064 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:23,216 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:23,377 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:23,380 - root - INFO - Best val result: {'epoch': 952, 'loss': tensor(6.0847e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:23,381 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 952}
2024-10-05 15:59:23,381 - root - INFO - Epoch: 953
2024-10-05 15:59:23,801 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23536205291748047
2024-10-05 15:59:23,961 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:24,110 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:24,267 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:24,270 - root - INFO - Best val result: {'epoch': 953, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:24,271 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 953}
2024-10-05 15:59:24,271 - root - INFO - Epoch: 954
2024-10-05 15:59:24,679 - root - INFO - Avg loss: tensor(4.7016e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23401212692260742
2024-10-05 15:59:24,841 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:25,000 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:25,159 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:25,162 - root - INFO - Best val result: {'epoch': 954, 'loss': tensor(4.7016e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:25,164 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 954}
2024-10-05 15:59:25,164 - root - INFO - Epoch: 955
2024-10-05 15:59:25,588 - root - INFO - Avg loss: tensor(7.2051e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23685145378112793
2024-10-05 15:59:25,757 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:25,920 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:26,076 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:26,079 - root - INFO - Best val result: {'epoch': 955, 'loss': tensor(7.2051e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:26,080 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 955}
2024-10-05 15:59:26,080 - root - INFO - Epoch: 956
2024-10-05 15:59:26,499 - root - INFO - Avg loss: tensor(8.1096e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23340082168579102
2024-10-05 15:59:26,655 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:26,805 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:26,968 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:26,971 - root - INFO - Best val result: {'epoch': 956, 'loss': tensor(8.1096e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:26,972 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 956}
2024-10-05 15:59:26,972 - root - INFO - Epoch: 957
2024-10-05 15:59:27,396 - root - INFO - Avg loss: tensor(2.7347e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23446416854858398
2024-10-05 15:59:27,562 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:27,732 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:27,894 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:27,896 - root - INFO - Best val result: {'epoch': 957, 'loss': tensor(2.7347e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:27,897 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 957}
2024-10-05 15:59:27,897 - root - INFO - Epoch: 958
2024-10-05 15:59:28,326 - root - INFO - Avg loss: tensor(3.4375e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2415027618408203
2024-10-05 15:59:28,484 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:28,660 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:28,826 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:28,829 - root - INFO - Best val result: {'epoch': 958, 'loss': tensor(3.4375e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:28,830 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 958}
2024-10-05 15:59:28,831 - root - INFO - Epoch: 959
2024-10-05 15:59:29,243 - root - INFO - Avg loss: tensor(6.9967e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23745036125183105
2024-10-05 15:59:29,403 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:29,544 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:29,709 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:29,712 - root - INFO - Best val result: {'epoch': 959, 'loss': tensor(6.9967e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:29,713 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 959}
2024-10-05 15:59:29,714 - root - INFO - Epoch: 960
2024-10-05 15:59:30,207 - root - INFO - Avg loss: tensor(3.4306e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2996342182159424
2024-10-05 15:59:30,367 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:30,517 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:30,681 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:30,684 - root - INFO - Best val result: {'epoch': 960, 'loss': tensor(3.4306e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:30,684 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 960}
2024-10-05 15:59:30,685 - root - INFO - Epoch: 961
2024-10-05 15:59:31,227 - root - INFO - Avg loss: tensor(3.2903e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3146657943725586
2024-10-05 15:59:31,391 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:31,566 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:31,720 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:31,722 - root - INFO - Best val result: {'epoch': 961, 'loss': tensor(3.2903e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:31,723 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 961}
2024-10-05 15:59:31,724 - root - INFO - Epoch: 962
2024-10-05 15:59:32,139 - root - INFO - Avg loss: tensor(4.9677e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23092985153198242
2024-10-05 15:59:32,295 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:32,447 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:32,593 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:32,597 - root - INFO - Best val result: {'epoch': 962, 'loss': tensor(4.9677e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:32,598 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 962}
2024-10-05 15:59:32,598 - root - INFO - Epoch: 963
2024-10-05 15:59:33,013 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23751187324523926
2024-10-05 15:59:33,171 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:33,323 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:33,484 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:33,487 - root - INFO - Best val result: {'epoch': 963, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:33,488 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 963}
2024-10-05 15:59:33,488 - root - INFO - Epoch: 964
2024-10-05 15:59:33,891 - root - INFO - Avg loss: tensor(6.0993e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23223233222961426
2024-10-05 15:59:34,058 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:34,202 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:34,346 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:34,349 - root - INFO - Best val result: {'epoch': 964, 'loss': tensor(6.0993e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:34,350 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 964}
2024-10-05 15:59:34,350 - root - INFO - Epoch: 965
2024-10-05 15:59:34,773 - root - INFO - Avg loss: tensor(3.4514e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2377922534942627
2024-10-05 15:59:34,926 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:35,068 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:35,218 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:35,222 - root - INFO - Best val result: {'epoch': 965, 'loss': tensor(3.4514e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:35,223 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 965}
2024-10-05 15:59:35,224 - root - INFO - Epoch: 966
2024-10-05 15:59:35,639 - root - INFO - Avg loss: tensor(1.6334e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2314929962158203
2024-10-05 15:59:35,796 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:35,947 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:36,099 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:36,102 - root - INFO - Best val result: {'epoch': 966, 'loss': tensor(1.6334e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:36,103 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 966}
2024-10-05 15:59:36,103 - root - INFO - Epoch: 967
2024-10-05 15:59:36,512 - root - INFO - Avg loss: tensor(1.8359e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23194408416748047
2024-10-05 15:59:36,678 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:36,830 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:36,980 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:36,983 - root - INFO - Best val result: {'epoch': 967, 'loss': tensor(1.8359e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:36,984 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 967}
2024-10-05 15:59:36,984 - root - INFO - Epoch: 968
2024-10-05 15:59:37,398 - root - INFO - Avg loss: tensor(6.6664e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.229766845703125
2024-10-05 15:59:37,552 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:37,702 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:37,849 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:37,851 - root - INFO - Best val result: {'epoch': 968, 'loss': tensor(6.6664e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:37,852 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 968}
2024-10-05 15:59:37,852 - root - INFO - Epoch: 969
2024-10-05 15:59:38,256 - root - INFO - Avg loss: tensor(5.6617e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23097848892211914
2024-10-05 15:59:38,402 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:38,543 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:38,707 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:38,710 - root - INFO - Best val result: {'epoch': 969, 'loss': tensor(5.6617e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:38,710 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 969}
2024-10-05 15:59:38,710 - root - INFO - Epoch: 970
2024-10-05 15:59:39,130 - root - INFO - Avg loss: tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2313518524169922
2024-10-05 15:59:39,288 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:39,435 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:39,590 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:39,592 - root - INFO - Best val result: {'epoch': 970, 'loss': tensor(0.0006, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:39,593 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 970}
2024-10-05 15:59:39,593 - root - INFO - Epoch: 971
2024-10-05 15:59:40,007 - root - INFO - Avg loss: tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23189187049865723
2024-10-05 15:59:40,184 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:40,331 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:40,489 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:40,493 - root - INFO - Best val result: {'epoch': 971, 'loss': tensor(0.0015, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:40,494 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 971}
2024-10-05 15:59:40,494 - root - INFO - Epoch: 972
2024-10-05 15:59:40,946 - root - INFO - Avg loss: tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.25513505935668945
2024-10-05 15:59:41,134 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:41,276 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:41,431 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:41,434 - root - INFO - Best val result: {'epoch': 972, 'loss': tensor(0.0012, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:41,435 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 972}
2024-10-05 15:59:41,435 - root - INFO - Epoch: 973
2024-10-05 15:59:41,849 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.22678589820861816
2024-10-05 15:59:42,002 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:42,155 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:42,320 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:42,323 - root - INFO - Best val result: {'epoch': 973, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:42,324 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 973}
2024-10-05 15:59:42,324 - root - INFO - Epoch: 974
2024-10-05 15:59:42,780 - root - INFO - Avg loss: tensor(1.9261e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.26929807662963867
2024-10-05 15:59:42,935 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:43,083 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:43,251 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:43,254 - root - INFO - Best val result: {'epoch': 974, 'loss': tensor(1.9261e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:43,255 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 974}
2024-10-05 15:59:43,255 - root - INFO - Epoch: 975
2024-10-05 15:59:43,669 - root - INFO - Avg loss: tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23828482627868652
2024-10-05 15:59:43,824 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:43,971 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:44,159 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:44,163 - root - INFO - Best val result: {'epoch': 975, 'loss': tensor(0.0004, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:44,163 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 975}
2024-10-05 15:59:44,163 - root - INFO - Epoch: 976
2024-10-05 15:59:44,572 - root - INFO - Avg loss: tensor(5.9179e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23273611068725586
2024-10-05 15:59:44,734 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:44,873 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:45,032 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:45,036 - root - INFO - Best val result: {'epoch': 976, 'loss': tensor(5.9179e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:45,036 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 976}
2024-10-05 15:59:45,036 - root - INFO - Epoch: 977
2024-10-05 15:59:45,456 - root - INFO - Avg loss: tensor(6.7136e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23119711875915527
2024-10-05 15:59:45,604 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:45,743 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:45,904 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:45,907 - root - INFO - Best val result: {'epoch': 977, 'loss': tensor(6.7136e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:45,908 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 977}
2024-10-05 15:59:45,908 - root - INFO - Epoch: 978
2024-10-05 15:59:46,328 - root - INFO - Avg loss: tensor(3.3419e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2336273193359375
2024-10-05 15:59:46,475 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:46,625 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:46,788 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:46,792 - root - INFO - Best val result: {'epoch': 978, 'loss': tensor(3.3419e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:46,792 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 978}
2024-10-05 15:59:46,793 - root - INFO - Epoch: 979
2024-10-05 15:59:47,210 - root - INFO - Avg loss: tensor(2.2376e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23318982124328613
2024-10-05 15:59:47,363 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:47,513 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:47,670 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:47,673 - root - INFO - Best val result: {'epoch': 979, 'loss': tensor(2.2376e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:47,674 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 979}
2024-10-05 15:59:47,674 - root - INFO - Epoch: 980
2024-10-05 15:59:48,091 - root - INFO - Avg loss: tensor(2.2379e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23105621337890625
2024-10-05 15:59:48,255 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:48,406 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:48,562 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:48,565 - root - INFO - Best val result: {'epoch': 980, 'loss': tensor(2.2379e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:48,565 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 980}
2024-10-05 15:59:48,566 - root - INFO - Epoch: 981
2024-10-05 15:59:48,983 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23212766647338867
2024-10-05 15:59:49,138 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:49,285 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:49,445 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:49,448 - root - INFO - Best val result: {'epoch': 981, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:49,449 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 981}
2024-10-05 15:59:49,449 - root - INFO - Epoch: 982
2024-10-05 15:59:49,866 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23231124877929688
2024-10-05 15:59:50,020 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:50,168 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:50,328 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:50,332 - root - INFO - Best val result: {'epoch': 982, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:50,333 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 982}
2024-10-05 15:59:50,333 - root - INFO - Epoch: 983
2024-10-05 15:59:50,793 - root - INFO - Avg loss: tensor(7.8621e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2700486183166504
2024-10-05 15:59:50,954 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:51,104 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:51,266 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:51,269 - root - INFO - Best val result: {'epoch': 983, 'loss': tensor(7.8621e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:51,270 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 983}
2024-10-05 15:59:51,270 - root - INFO - Epoch: 984
2024-10-05 15:59:51,691 - root - INFO - Avg loss: tensor(5.4469e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23138070106506348
2024-10-05 15:59:51,843 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:52,006 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:52,175 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:52,178 - root - INFO - Best val result: {'epoch': 984, 'loss': tensor(5.4469e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:52,179 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 984}
2024-10-05 15:59:52,179 - root - INFO - Epoch: 985
2024-10-05 15:59:52,625 - root - INFO - Avg loss: tensor(3.1459e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2630891799926758
2024-10-05 15:59:52,797 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:52,966 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:53,129 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:53,132 - root - INFO - Best val result: {'epoch': 985, 'loss': tensor(3.1459e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:53,133 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 985}
2024-10-05 15:59:53,133 - root - INFO - Epoch: 986
2024-10-05 15:59:53,612 - root - INFO - Avg loss: tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2811088562011719
2024-10-05 15:59:53,779 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:53,938 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:54,102 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:54,105 - root - INFO - Best val result: {'epoch': 986, 'loss': tensor(0.0011, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:54,106 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 986}
2024-10-05 15:59:54,106 - root - INFO - Epoch: 987
2024-10-05 15:59:54,571 - root - INFO - Avg loss: tensor(0.0072, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27683019638061523
2024-10-05 15:59:54,725 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:54,888 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:55,058 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:55,062 - root - INFO - Best val result: {'epoch': 987, 'loss': tensor(0.0072, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:55,063 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 987}
2024-10-05 15:59:55,063 - root - INFO - Epoch: 988
2024-10-05 15:59:55,505 - root - INFO - Avg loss: tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2601907253265381
2024-10-05 15:59:55,691 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:55,860 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:56,019 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:56,023 - root - INFO - Best val result: {'epoch': 988, 'loss': tensor(0.0001, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:56,024 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 988}
2024-10-05 15:59:56,024 - root - INFO - Epoch: 989
2024-10-05 15:59:56,455 - root - INFO - Avg loss: tensor(9.7590e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.24239873886108398
2024-10-05 15:59:56,610 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:56,757 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:56,913 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:56,916 - root - INFO - Best val result: {'epoch': 989, 'loss': tensor(9.7590e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:56,917 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 989}
2024-10-05 15:59:56,917 - root - INFO - Epoch: 990
2024-10-05 15:59:57,409 - root - INFO - Avg loss: tensor(4.8291e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.3018839359283447
2024-10-05 15:59:57,595 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:57,748 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:57,905 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:57,908 - root - INFO - Best val result: {'epoch': 990, 'loss': tensor(4.8291e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:57,908 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 990}
2024-10-05 15:59:57,909 - root - INFO - Epoch: 991
2024-10-05 15:59:58,326 - root - INFO - Avg loss: tensor(2.3927e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23230409622192383
2024-10-05 15:59:58,480 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:58,623 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:58,783 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:58,786 - root - INFO - Best val result: {'epoch': 991, 'loss': tensor(2.3927e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:58,788 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 991}
2024-10-05 15:59:58,788 - root - INFO - Epoch: 992
2024-10-05 15:59:59,203 - root - INFO - Avg loss: tensor(2.6597e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23134779930114746
2024-10-05 15:59:59,358 - root - INFO - Train accuracy: 1.0
2024-10-05 15:59:59,508 - root - INFO - Validation accuracy: 1.0
2024-10-05 15:59:59,664 - root - INFO - Test accuracy: 1.0
2024-10-05 15:59:59,667 - root - INFO - Best val result: {'epoch': 992, 'loss': tensor(2.6597e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 15:59:59,668 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 992}
2024-10-05 15:59:59,668 - root - INFO - Epoch: 993
2024-10-05 16:00:00,088 - root - INFO - Avg loss: tensor(3.4526e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2315058708190918
2024-10-05 16:00:00,256 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:00,434 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:00,592 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:00,595 - root - INFO - Best val result: {'epoch': 993, 'loss': tensor(3.4526e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:00,596 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 993}
2024-10-05 16:00:00,596 - root - INFO - Epoch: 994
2024-10-05 16:00:01,012 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23412775993347168
2024-10-05 16:00:01,183 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:01,324 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:01,484 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:01,487 - root - INFO - Best val result: {'epoch': 994, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:01,488 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 994}
2024-10-05 16:00:01,488 - root - INFO - Epoch: 995
2024-10-05 16:00:01,908 - root - INFO - Avg loss: tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2358715534210205
2024-10-05 16:00:02,067 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:02,216 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:02,373 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:02,377 - root - INFO - Best val result: {'epoch': 995, 'loss': tensor(0.0002, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:02,377 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 995}
2024-10-05 16:00:02,378 - root - INFO - Epoch: 996
2024-10-05 16:00:02,833 - root - INFO - Avg loss: tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.266676664352417
2024-10-05 16:00:02,992 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:03,147 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:03,313 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:03,317 - root - INFO - Best val result: {'epoch': 996, 'loss': tensor(0.0032, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:03,318 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 996}
2024-10-05 16:00:03,318 - root - INFO - Epoch: 997
2024-10-05 16:00:03,777 - root - INFO - Avg loss: tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.27176403999328613
2024-10-05 16:00:03,942 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:04,091 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:04,255 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:04,259 - root - INFO - Best val result: {'epoch': 997, 'loss': tensor(0.0003, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:04,260 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 997}
2024-10-05 16:00:04,260 - root - INFO - Epoch: 998
2024-10-05 16:00:04,672 - root - INFO - Avg loss: tensor(5.7912e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.23183917999267578
2024-10-05 16:00:04,844 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:04,988 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:05,147 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:05,150 - root - INFO - Best val result: {'epoch': 998, 'loss': tensor(5.7912e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:05,151 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 998}
2024-10-05 16:00:05,151 - root - INFO - Epoch: 999
2024-10-05 16:00:05,620 - root - INFO - Avg loss: tensor(6.0498e-05, device='cuda:0', grad_fn=<DivBackward0>); epoch time: 0.2687036991119385
2024-10-05 16:00:05,784 - root - INFO - Train accuracy: 1.0
2024-10-05 16:00:05,939 - root - INFO - Validation accuracy: 1.0
2024-10-05 16:00:06,107 - root - INFO - Test accuracy: 1.0
2024-10-05 16:00:06,110 - root - INFO - Best val result: {'epoch': 999, 'loss': tensor(6.0498e-05, device='cuda:0', grad_fn=<DivBackward0>), 'acc': 1.0}
2024-10-05 16:00:06,111 - root - INFO - Test result: {'prec': np.float64(1.0), 'recall': np.float64(1.0), 'acc': 1.0, 'F1': np.float64(1.0), 'epoch': 999}
2024-10-05 16:00:06,113 - matplotlib.pyplot - DEBUG - Loaded backend agg version v2.2.
2024-10-05 16:00:06,120 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0.
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,121 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique_0.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique_0.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono_0.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,122 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,123 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,124 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,125 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,126 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/HYZhongHeiTi-197.ttf', name='HYZhongHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,127 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 0.525
2024-10-05 16:00:06,128 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,129 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,130 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,131 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,132 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,133 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold_0.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,134 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 2.24
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,135 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 2.535
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc', name='WenQuanYi Zen Hei', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 3.25
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,136 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/wqy/wqy-microhei.ttc', name='WenQuanYi Micro Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,137 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam.ttf', name='Keraleeyam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,138 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,139 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/.fonts/SimHei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,140 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,141 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,142 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,143 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,144 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,145 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Chilanka-Regular.ttf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,146 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,147 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 3.535
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob.ttf', name='Uroob', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 2.25
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,148 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,149 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=12.0 to Arial ('/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arial.ttf') with score of 0.050000.
2024-10-05 16:00:06,222 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0.
2024-10-05 16:00:06,222 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Deng.ttf', name='DengXian', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LHANDW.TTF', name='Lucida Handwriting', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriaz.ttf', name='Cambria', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Dengl.ttf', name='DengXian', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Symbol Tiger.ttf', name='Symbol Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuisl.ttf', name='Segoe UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique_0.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBolIta.ttf', name='STIXGeneral', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique_0.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eufrak.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono_0.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUni.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ebrimabd.ttf', name='Ebrima', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarali.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyhbd.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisli.ttf', name='Segoe UI', style='italic', variant='normal', weight=350, stretch='normal', size='scalable')) = 11.0975
2024-10-05 16:00:06,223 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyh.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SitkaVF-Italic.ttf', name='Sitka', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/WINGDNG3.TTF', name='Wingdings 3', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbel.ttf', name='Corbel', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comicz.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euextra.ttf', name='Euclid Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrii.ttf', name='Calibri', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/NirmalaS.ttf', name='Nirmala UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansDisplay.ttf', name='DejaVu Sans Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXIHEI.TTF', name='STXihei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOS.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Gabriola.ttf', name='Gabriola', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibril.ttf', name='Calibri', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/TEMPSITC.TTF', name='Tempus Sans ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-LIGHT.TTF', name='Dubai', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFiveSymReg.ttf', name='STIXSizeFiveSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXINWEI.TTF', name='STXinwei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MSUIGHUB.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsym.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,224 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgun.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FZYTK.TTF', name='FZYaoTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STKAITI.TTF', name='STKaiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/gadugib.ttf', name='Gadugi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/HATTEN.TTF', name='Haettenschweiler', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymReg.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msgothic.ttc', name='MS Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/phagspa.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgunbd.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriai.ttf', name='Cambria', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mtextra.ttf', name='MT Extra', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LEELAWAD.TTF', name='Leelawadee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FREESCPT.TTF', name='Freestyle Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SIMLI.TTF', name='LiSu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymbi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/wingding.ttf', name='Wingdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguibl.ttf', name='Segoe UI', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 10.525
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneral.ttf', name='STIXGeneral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mmrtext.ttf', name='Myanmar Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,225 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelb.ttf', name='Corbel', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUABI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mmrtextb.ttf', name='Myanmar Text', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simkai.ttf', name='KaiTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelUIsl.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=350, stretch='normal', size='scalable')) = 10.0975
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SegoeIcons.ttf', name='Segoe Fluent Icons', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MTCORSVA.TTF', name='Monotype Corsiva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candaral.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelaUIb.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palabi.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymBol.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STHUPO.TTF', name='STHupo', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/framdit.ttf', name='Franklin Gothic Medium', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palab.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/pala.ttf', name='Palatino Linotype', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/palai.ttf', name='Palatino Linotype', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerifDisplay.ttf', name='DejaVu Serif Display', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SitkaVF.ttf', name='Sitka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothL.ttc', name='Yu Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,226 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrili.ttf', name='Calibri', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuii.ttf', name='Segoe UI', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUAB.TTF', name='Book Antiqua', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbeli.ttf', name='Corbel', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisbi.ttf', name='Segoe UI', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/marlett.ttf', name='Marlett', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuil.ttf', name='Segoe UI', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/OUTLOOK.TTF', name='MS Outlook', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothB.ttc', name='Yu Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ANTQUAI.TTF', name='Book Antiqua', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-BOLD.TTF', name='Dubai', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjhbd.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALN.TTF', name='Arial', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 0.25
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymBol.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmr10.ttf', name='cmr10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat1.ttf', name='Euclid Math One', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeui.ttf', name='Segoe UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mvboli.ttf', name='MV Boli', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothM.ttc', name='Yu Gothic', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/REFSPCL.TTF', name='MS Reference Specialty', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,227 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibri.ttf', name='Calibri', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comici.ttf', name='Comic Sans MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolab.ttf', name='Consolas', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymBol.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SegUIVar.ttf', name='Segoe UI Variable', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmex10.ttf', name='cmex10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisb.ttf', name='Segoe UI', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BSSYM7.TTF', name='Bookshelf Symbol 7', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/bahnschrift.ttf', name='Bahnschrift', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmss10.ttf', name='cmss10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BKANT.TTF', name='Book Antiqua', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/YuGothR.ttc', name='Yu Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/phagspab.ttf', name='Microsoft PhagsPa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARABD.TTF', name='Garamond', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymb.ttf', name='Euclid Symbol', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNI.TTF', name='Arial', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 1.25
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoepr.ttf', name='Segoe Print', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,228 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoesc.ttf', name='Segoe Script', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/HYZhongHeiTi-197.ttf', name='HYZhongHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolai.ttf', name='Consolas', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat2.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/PAPYRUS.TTF', name='Papyrus', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyi.ttf', name='Microsoft Yi Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarab.ttf', name='Candara', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candara.ttf', name='Candara', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguili.ttf', name='Segoe UI', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizTwoSymReg.ttf', name='STIXSizeTwoSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SIMYOU.TTF', name='YouYuan', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/NirmalaB.ttf', name='Nirmala UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Dengb.ttf', name='DengXian', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguibli.ttf', name='Segoe UI', style='italic', variant='normal', weight=900, stretch='normal', size='scalable')) = 11.525
2024-10-05 16:00:06,229 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STZHONGS.TTF', name='STZhongsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Inkfree.ttf', name='Ink Free', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ariblk.ttf', name='Arial', style='normal', variant='normal', weight=900, stretch='normal', size='scalable')) = 0.525
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simsun.ttc', name='SimSun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candaraz.ttf', name='Candara', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/himalaya.ttf', name='Microsoft Himalaya', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjhl.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibriz.ttf', name='Calibri', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ITCKRIST.TTF', name='Kristen ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constanz.ttf', name='Constantia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STLITI.TTF', name='STLiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BRADHITC.TTF', name='Bradley Hand ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/taileb.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eufrakb.ttf', name='Euclid Fraktur', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICI.TTF', name='Century Gothic', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/monbaiti.ttf', name='Mongolian Baiti', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,230 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FRSCRIPT.TTF', name='French Script MT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/WINGDNG2.TTF', name='Wingdings 2', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuib.ttf', name='Segoe UI', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/tahomabd.ttf', name='Tahoma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Mt Extra Tiger.ttf', name='MT Extra Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambriab.ttf', name='Cambria', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consolaz.ttf', name='Consolas', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LeelawUI.ttf', name='Leelawadee UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/CENTURY.TTF', name='Century', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/lucon.ttf', name='Lucida Console', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguisym.ttf', name='Segoe UI Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoescb.ttf', name='Segoe Script', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBol.ttf', name='STIXNonUnicode', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simhei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segmdl2.ttf', name='Segoe MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidi.ttf', name='Euclid', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/mingliub.ttc', name='MingLiU-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,231 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/SansSerifCollection.ttf', name='Sans Serif Collection', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/taile.ttf', name='Microsoft Tai Le', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/javatext.ttf', name='Javanese Text', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclid.ttf', name='Euclid', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STXINGKA.TTF', name='STXingkai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbell.ttf', name='Corbel', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ebrima.ttf', name='Ebrima', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Tiger Expert.ttf', name='Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARA.TTF', name='Garamond', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/REFSAN.TTF', name='MS Reference Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/tahoma.ttf', name='Tahoma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STFANGSO.TTF', name='STFangsong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ntailub.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ntailu.ttf', name='Microsoft New Tai Lue', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msjh.ttc', name='Microsoft JhengHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-REGULAR.TTF', name='Dubai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GARAIT.TTF', name='Garamond', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/gadugi.ttf', name='Gadugi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euextrab.ttf', name='Euclid Extra', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICBI.TTF', name='Century Gothic', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeprb.ttf', name='Segoe Print', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,232 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/fences.ttf', name='Fences', style='normal', variant='normal', weight=5, stretch='normal', size='scalable')) = 10.42525
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DUBAI-MEDIUM.TTF', name='Dubai', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmmi10.ttf', name='cmmi10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNB.TTF', name='Arial', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 0.5349999999999999
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSBI.TTF', name='Bookman Old Style', style='italic', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/sylfaen.ttf', name='Sylfaen', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralBol.ttf', name='STIXGeneral', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STCAIYUN.TTF', name='STCaiyun', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXNonUniBolIta.ttf', name='STIXNonUnicode', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ARIALNBI.TTF', name='Arial', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 1.535
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/holomdl2.ttf', name='HoloLens MDL2 Assets', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/calibrib.ttf', name='Calibri', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/symbol.ttf', name='Symbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat1b.ttf', name='Euclid Math One', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/JUICE___.TTF', name='Juice ITC', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmsy10.ttf', name='cmsy10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/l_10646.ttf', name='Lucida Sans Unicode', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHICB.TTF', name='Century Gothic', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelli.ttf', name='Corbel', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,233 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidbi.ttf', name='Euclid', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/consola.ttf', name='Consolas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Candarai.ttf', name='Candara', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eumat2b.ttf', name='Euclid Math Two', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXGeneralItalic.ttf', name='STIXGeneral', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/GOTHIC.TTF', name='Century Gothic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constani.ttf', name='Constantia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/euclidb.ttf', name='Euclid', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/LEELAWDB.TTF', name='Leelawadee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/segoeuiz.ttf', name='Segoe UI', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simfang.ttf', name='FangSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/malgunsl.ttf', name='Malgun Gothic', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/BOOKOSB.TTF', name='Bookman Old Style', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmtt10.ttf', name='cmtt10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizThreeSymReg.ttf', name='STIXSizeThreeSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MSUIGHUR.TTF', name='Microsoft Uighur', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/simsunb.ttf', name='SimSun-ExtB', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Nirmala.ttf', name='Nirmala UI', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizOneSymBol.ttf', name='STIXSizeOneSym', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,234 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/micross.ttf', name='Microsoft Sans Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/FZSTK.TTF', name='FZShuTi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/corbelz.ttf', name='Corbel', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STIXSizFourSymReg.ttf', name='STIXSizeFourSym', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/STSONG.TTF', name='STSong', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/msyhl.ttc', name='Microsoft YaHei', style='normal', variant='normal', weight=290, stretch='normal', size='scalable')) = 10.1545
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/MISTRAL.TTF', name='Mistral', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSansMono-Bold_0.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cmb10.ttf', name='cmb10', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Tiger.ttf', name='Tiger', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/eucsymi.ttf', name='Euclid Symbol', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/PRISTINA.TTF', name='Pristina', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguiemj.ttf', name='Segoe UI Emoji', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constanb.ttf', name='Constantia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/seguihis.ttf', name='Segoe UI Historic', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/constan.ttf', name='Constantia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,235 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/cambria.ttc', name='Cambria', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/framd.ttf', name='Franklin Gothic Medium', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/Symbol Tiger Expert.ttf', name='Symbol Tiger Expert', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPen.ttf', name='KacstPen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/openoffice/opens___.ttf', name='OpenSymbol', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne-Bold.ttf', name='KacstOne', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Bold.ttf', name='Purisa', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Bold.ttf', name='Kinnari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-RI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Oblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-ExtraLight.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=200, stretch='normal', size='scalable')) = 2.24
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush.ttf', name='Umpush', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstScreen.ttf', name='KacstScreen', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldItalic.ttf', name='Kinnari', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-BoldOblique.ttf', name='Kinnari', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,236 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Bold.ttf', name='Sawasdee', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 2.535
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/wqy/wqy-zenhei.ttc', name='WenQuanYi Zen Hei', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='condensed', size='scalable')) = 3.25
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst-one/KacstOne.ttf', name='KacstOne', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbi.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-kannada/Lohit-Kannada.ttf', name='Lohit Kannada', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Impact.ttf', name='Impact', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-R.ttf', name='Ubuntu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOSsys.ttf', name='Khmer OS System', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Italic.ttf', name='Norasi', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-devanagari/Lohit-Devanagari.ttf', name='Lohit Devanagari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Tamil.ttf', name='Samyak Tamil', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-BoldOblique.ttf', name='Garuda', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,237 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-BoldItalic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Regular.ttf', name='Padauk', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Oblique.ttf', name='Garuda', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Italic.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/vemana2000.ttf', name='Vemana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerif.ttf', name='FreeSerif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Thin.otf', name='Manjari', style='normal', variant='normal', weight=100, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/wqy/wqy-microhei.ttc', name='WenQuanYi Micro Hei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Black.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbd.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-bengali/Lohit-Bengali.ttf', name='Lohit Bengali', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Bold.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Medium-0.5.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa.ttf', name='padmaa', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-BoldOblique.ttf', name='Purisa', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBoldOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=600, stretch='normal', size='scalable')) = 11.24
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Navilu/Navilu.ttf', name='Navilu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-telu-extra/Pothana2000.ttf', name='Pothana2000', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,238 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-R.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansOblique.ttf', name='FreeSans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold_Italic.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-punjabi/Lohit-Gurmukhi.ttf', name='Lohit Gurmukhi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-assamese/Lohit-Assamese.ttf', name='Lohit Assamese', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/sinhala/lklug.ttf', name='LKLUG', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 3.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Bold.ttf', name='Waree', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitle.ttf', name='KacstTitle', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Keraleeyam.ttf', name='Keraleeyam', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Regular.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree.ttf', name='Waree', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-malayalam/Lohit-Malayalam.ttf', name='Lohit Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-LI.ttf', name='Ubuntu', style='italic', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBold.ttf', name='FreeMono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMonoBoldOblique.ttf', name='FreeMono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil/Lohit-Tamil.ttf', name='Lohit Tamil', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/andalemo.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Italic.ttf', name='Liberation Mono', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-BI.ttf', name='Ubuntu Mono', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,239 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Bold.ttf', name='DejaVu Serif', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstPoster.ttf', name='KacstPoster', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/ani.ttf', name='Ani', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-BoldOblique.ttf', name='Loma', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Bold.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-kalapi/Kalapi.ttf', name='Kalapi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/abyssinica/AbyssinicaSIL-R.ttf', name='Abyssinica SIL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/noto/NotoMono-Regular.ttf', name='Noto Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Bold.otf', name='Manjari', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstTitleL.ttf', name='KacstTitleL', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/Padauk-Bold.ttf', name='Padauk', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Oblique.ttf', name='Norasi', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstNaskh.ttf', name='KacstNaskh', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Meera.ttf', name='Meera', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak/Samyak-Devanagari.ttf', name='Samyak Devanagari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-BoldItalic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 5.335
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/aakar-medium.ttf', name='aakar', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/chandas1-2.ttf', name='Chandas', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Oblique.ttf', name='Umpush', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Arial_Bold.ttf', name='Arial', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 0.33499999999999996
2024-10-05 16:00:06,240 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesi.ttf', name='Times New Roman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Karumbi.ttf', name='Karumbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldOblique.ttf', name='Norasi', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Bold.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/home/hz/.fonts/SimHei.ttf', name='SimHei', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gargi/Gargi.ttf', name='Gargi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Light.ttf', name='Umpush', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman.ttf', name='Laksaman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-LightOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=300, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comic.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-BoldOblique.ttf', name='Waree', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Oblique.ttf', name='Loma', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma-Bold.ttf', name='Loma', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Oblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstArt.ttf', name='KacstArt', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia_Italic.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,241 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Italic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=400, stretch='condensed', size='scalable')) = 11.25
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS_Bold.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/JamrulNormal.ttf', name='Jamrul', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBold.ttf', name='FreeSerif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Malayalam.ttf', name='Samyak Malayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrow.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-BoldOblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arialbi.ttf', name='Arial', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 1.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana_Italic.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Regular.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Bold.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 2.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans-Oblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 3.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Bold.ttf', name='Rachana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sahadeva/sahadeva.ttf', name='Sahadeva', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Georgia.ttf', name='Georgia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-Oblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Waree-Oblique.ttf', name='Waree', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,242 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Suruma.ttf', name='Suruma', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi.ttf', name='Norasi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Regular.ttf', name='Padauk Book', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-Bold.ttf', name='Liberation Sans Narrow', style='normal', variant='normal', weight=700, stretch='condensed', size='scalable')) = 10.535
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda-Bold.ttf', name='Garuda', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/samyak-fonts/Samyak-Gujarati.ttf', name='Samyak Gujarati', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Italic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-BoldItalic.ttf', name='Liberation Serif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeMono.ttf', name='FreeMono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/malayalam/Manjari-Regular.otf', name='Manjari', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-tamil-classical/Lohit-Tamil-Classical.ttf', name='Lohit Tamil Classical', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/padmaa-Bold.1.1.ttf', name='padmaa-Bold.1.1', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Regular.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstBook.ttf', name='KacstBook', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Italic.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/padauk/PadaukBook-Bold.ttf', name='Padauk Book', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-Bold.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,243 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Italic.ttf', name='Laksaman', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-BoldItalic.ttf', name='Norasi', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuMathTeXGyre.ttf', name='DejaVu Math TeX Gyre', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-BoldItalic.ttf', name='Laksaman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/arial.ttf', name='Arial', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 0.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-C.ttf', name='Ubuntu Condensed', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 10.25
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Comic_Sans_MS.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter.ttf', name='Tlwg Typewriter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbd.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstFarsi.ttf', name='KacstFarsi', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/UbuntuMono-B.ttf', name='Ubuntu Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee.ttf', name='Sawasdee', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-L.ttf', name='Ubuntu', style='normal', variant='normal', weight=300, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-gujarati/Lohit-Gujarati.ttf', name='Lohit Gujarati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/couri.ttf', name='Courier New', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Bold.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiaz.ttf', name='Georgia', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-guru-extra/Saab.ttf', name='Saab', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,244 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/courbi.ttf', name='Courier New', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Nakula/nakula.ttf', name='Nakula', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiab.ttf', name='Georgia', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-BI.ttf', name='Ubuntu', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-BoldOblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Dyuthi.ttf', name='Dyuthi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-MI.ttf', name='Ubuntu', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono.ttf', name='Tlwg Mono', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-telugu/Lohit-Telugu.ttf', name='Lohit Telugu', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-orya-extra/utkal.ttf', name='ori1Uni', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/RaghuMalayalamSans-Regular.ttf', name='RaghuMalayalam', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSansCJK-Bold.ttc', name='Noto Sans CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbd.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tibetan-machine/TibetanMachineUni.ttf', name='Tibetan Machine Uni', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Regular.ttf', name='Liberation Serif', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Loma.ttf', name='Loma', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/mry_KacstQurn.ttf', name='mry_KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Rachana-Regular.ttf', name='Rachana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 2.05
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Oblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,245 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-Bold.ttf', name='Umpush', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa-Oblique.ttf', name='Purisa', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerif-Italic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Norasi-Bold.ttf', name='Norasi', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/georgiai.ttf', name='Georgia', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanab.ttf', name='Verdana', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSerifBoldItalic.ttf', name='FreeSerif', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstOffice.ttf', name='KacstOffice', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariali.ttf', name='Arial', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 1.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/mitra.ttf', name='Mitra Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanaz.ttf', name='Verdana', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Chilanka-Regular.ttf', name='Chilanka', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-M.ttf', name='Ubuntu', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebuc.ttf', name='Trebuchet MS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Andale_Mono.ttf', name='Andale Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Regular.ttf', name='Liberation Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,246 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-BoldOblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Sarai/Sarai.ttf', name='Sarai', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ttf-khmeros-core/KhmerOS.ttf', name='Khmer OS', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Courier_New_Bold.ttf', name='Courier New', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Italic.ttf', name='Liberation Sans', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 5.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari-Italic.ttf', name='Kinnari', style='italic', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lohit-oriya/Lohit-Odia.ttf', name='Lohit Odia', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/times.ttf', name='Times New Roman', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/LikhanNormal.ttf', name='Likhan', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/comicbd.ttf', name='Comic Sans MS', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucbi.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Umpush-BoldOblique.ttf', name='Umpush', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Sawasdee-Oblique.ttf', name='Sawasdee', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf', name='DejaVu Sans Mono', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Bold.ttf', name='Tlwg Typo', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstQurn.ttf', name='KacstQurn', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSans-Regular.ttf', name='Liberation Sans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 4.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgMono-Oblique.ttf', name='Tlwg Mono', style='oblique', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/lao/Phetsarath_OT.ttf', name='Phetsarath OT', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/verdanai.ttf', name='Verdana', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-gujr-extra/Rekha.ttf', name='Rekha', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDigital.ttf', name='KacstDigital', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,247 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationMono-Bold.ttf', name='Liberation Mono', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Garuda.ttf', name='Garuda', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-beng-extra/MuktiNarrowBold.ttf', name='Mukti Narrow', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Verdana.ttf', name='Verdana', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Laksaman-Bold.ttf', name='Laksaman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypo-Oblique.ttf', name='Tlwg Typo', style='oblique', variant='normal', weight=500, stretch='normal', size='scalable')) = 11.145
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSerifCondensed-BoldItalic.ttf', name='DejaVu Serif', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/AnjaliOldLipi.ttf', name='AnjaliOldLipi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSansNarrow-BoldItalic.ttf', name='Liberation Sans Narrow', style='italic', variant='normal', weight=700, stretch='condensed', size='scalable')) = 11.535
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/opentype/noto/NotoSerifCJK-Bold.ttc', name='Noto Serif CJK JP', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed-BoldOblique.ttf', name='DejaVu Sans', style='oblique', variant='normal', weight=700, stretch='condensed', size='scalable')) = 3.535
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-Bold.ttf', name='Tlwg Typist', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansMono-BoldOblique.ttf', name='DejaVu Sans Mono', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-B.ttf', name='Ubuntu', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation/LiberationSans-Bold.ttf', name='Liberation Sans', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 4.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstDecorative.ttf', name='KacstDecorative', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Webdings.ttf', name='Webdings', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/liberation2/LiberationSerif-Bold.ttf', name='Liberation Serif', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Purisa.ttf', name='Purisa', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/malayalam/Uroob.ttf', name='Uroob', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/timesbd.ttf', name='Times New Roman', style='normal', variant='normal', weight=700, stretch='normal', size='scalable')) = 10.335
2024-10-05 16:00:06,248 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/Gubbi/Gubbi.ttf', name='Gubbi', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/cour.ttf', name='Courier New', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSans.ttf', name='FreeSans', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/samanata.ttf', name='Samanata', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/ariblk.ttf', name='Arial Black', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/dejavu/DejaVuSansCondensed.ttf', name='DejaVu Sans', style='normal', variant='normal', weight=400, stretch='condensed', size='scalable')) = 2.25
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypist-BoldOblique.ttf', name='Tlwg Typist', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/freefont/FreeSansBold.ttf', name='FreeSans', style='normal', variant='normal', weight=600, stretch='normal', size='scalable')) = 10.24
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/trebucit.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/kacst/KacstLetter.ttf', name='KacstLetter', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/Kinnari.ttf', name='Kinnari', style='normal', variant='normal', weight=500, stretch='normal', size='scalable')) = 10.145
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/pagul/Pagul.ttf', name='Pagul', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Times_New_Roman_Bold_Italic.ttf', name='Times New Roman', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/fonts-deva-extra/kalimati.ttf', name='Kalimati', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/tlwg/TlwgTypewriter-BoldOblique.ttf', name='Tlwg Typewriter', style='oblique', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/msttcorefonts/Trebuchet_MS_Bold_Italic.ttf', name='Trebuchet MS', style='italic', variant='normal', weight=700, stretch='normal', size='scalable')) = 11.335
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/droid/DroidSansFallbackFull.ttf', name='Droid Sans Fallback', style='normal', variant='normal', weight=400, stretch='normal', size='scalable')) = 10.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: score(FontEntry(fname='/usr/share/fonts/truetype/ubuntu/Ubuntu-RI.ttf', name='Ubuntu', style='italic', variant='normal', weight=400, stretch='normal', size='scalable')) = 11.05
2024-10-05 16:00:06,249 - matplotlib.font_manager - DEBUG - findfont: Matching sans\-serif:style=normal:variant=normal:weight=normal:stretch=normal:size=11.0 to Arial ('/home/hz/anaconda3/envs/diffpool/lib/python3.10/site-packages/matplotlib/mpl-data/fonts/ttf/arial.ttf') with score of 0.050000.
